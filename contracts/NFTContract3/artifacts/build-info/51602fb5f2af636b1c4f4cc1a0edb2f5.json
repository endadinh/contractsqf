{
	"id": "51602fb5f2af636b1c4f4cc1a0edb2f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTContract3/TribalpunkNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\n\ncontract TribalpunkNFT is\n    ERC721,\n    ERC721Enumerable,\n    ERC721URIStorage,\n    Pausable,\n    Ownable,\n    ERC721Burnable\n{\n    using Counters for Counters.Counter;\n\n    Counters.Counter private _tokenIdCounter;\n    mapping(string => bool) public mintedHeroIds;\n    address public holder;\n\n    event NFTMinted(\n        uint256 tokenId,\n        address indexed to,\n        string heroId,\n        string externalId\n    );\n\n    constructor(address _holder) ERC721(\"TribalpunkNFT\", \"TribalpunkNFT\") {\n        require(_holder != address(0), \"Invalid holder address\");\n        holder = _holder;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function setHolder(address _newHolder) public onlyOwner {\n        require(_newHolder != address(0), \"Invalid holder address\");\n        holder = _newHolder;\n    }\n\n    function safeMint(string memory heroId, string memory externalId)\n        public\n        onlyOwner\n    {\n        require(\n            !mintedHeroIds[heroId],\n            \"TribalpunkNFT: hero already was minted\"\n        );\n\n        uint256 tokenId = _tokenIdCounter.current();\n        _tokenIdCounter.increment();\n        _safeMint(holder, tokenId);\n        _setTokenURI(tokenId, heroId);\n        mintedHeroIds[heroId] = true;\n\n        emit NFTMinted(tokenId, holder, heroId, externalId);\n    }\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal override(ERC721, ERC721Enumerable) whenNotPaused {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function _burn(uint256 tokenId)\n        internal\n        override(ERC721, ERC721URIStorage)\n    {\n        super._burn(tokenId);\n    }\n\n    function tokenURI(uint256 tokenId)\n        public\n        view\n        override(ERC721, ERC721URIStorage)\n        returns (string memory)\n    {\n        return super.tokenURI(tokenId);\n    }\n\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        override(ERC721, ERC721Enumerable)\n        returns (bool)\n    {\n        return super.supportsInterface(interfaceId);\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\");\n        _burn(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  sub\n    /* \"#utility.yul\":1816:1977   */\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:14286  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_22\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_7:\n      tag_34\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_8:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_28\n      tag_46\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":2843:2868   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2831:2833   */\n      0x20\n        /* \"#utility.yul\":2816:2834   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      tag_22\n        /* \"#utility.yul\":2697:2874   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_24\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_34\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_13:\n      tag_34\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_24\n      tag_67\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_18\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_76\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_78\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5358:5360   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5340:5361   */\n      mstore\n        /* \"#utility.yul\":5397:5399   */\n      0x2c\n        /* \"#utility.yul\":5377:5395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5370:5400   */\n      mstore\n        /* \"#utility.yul\":5436:5470   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":5416:5434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5409:5471   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":5487:5505   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5480:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5753:5774   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x21\n        /* \"#utility.yul\":5790:5808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5783:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5883   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":5829:5847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5822:5884   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":5900:5918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5893:5924   */\n      mstore\n        /* \"#utility.yul\":5941:5960   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_91\n        /* \"#utility.yul\":5569:5966   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_95:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_101\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6173:6175   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6155:6176   */\n      mstore\n        /* \"#utility.yul\":6212:6214   */\n      0x38\n        /* \"#utility.yul\":6192:6210   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6185:6215   */\n      mstore\n        /* \"#utility.yul\":6251:6285   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":6231:6249   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6224:6286   */\n      mstore\n        /* \"#utility.yul\":6322:6348   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":6302:6320   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6295:6349   */\n      mstore\n        /* \"#utility.yul\":6366:6385   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_91\n        /* \"#utility.yul\":5971:6391   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_78\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7016:7018   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6998:7019   */\n      mstore\n        /* \"#utility.yul\":7055:7057   */\n      0x29\n        /* \"#utility.yul\":7035:7053   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7028:7058   */\n      mstore\n        /* \"#utility.yul\":7094:7128   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":7074:7092   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7067:7129   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7145:7163   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7138:7177   */\n      mstore\n        /* \"#utility.yul\":7194:7213   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":6814:7219   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7426:7428   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7408:7429   */\n      mstore\n        /* \"#utility.yul\":7465:7467   */\n      0x2a\n        /* \"#utility.yul\":7445:7463   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7438:7468   */\n      mstore\n        /* \"#utility.yul\":7504:7538   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":7484:7502   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7477:7539   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":7555:7573   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7548:7588   */\n      mstore\n        /* \"#utility.yul\":7605:7624   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_91\n        /* \"#utility.yul\":7224:7630   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_124:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_114\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2891:2904  string memory */\n      0x60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7837:7839   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7819:7840   */\n      mstore\n        /* \"#utility.yul\":7876:7878   */\n      0x2f\n        /* \"#utility.yul\":7856:7874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7849:7879   */\n      mstore\n        /* \"#utility.yul\":7915:7949   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":7895:7913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7888:7950   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":7966:7984   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7959:8004   */\n      mstore\n        /* \"#utility.yul\":8021:8040   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":7635:8046   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3024  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3474  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3389:3481  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3037  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3078:3079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3060:3067  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3075  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3079  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3106:3113  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3131  tokenId.toString */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3089:3134  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3047:3140  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8728:8730   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8710:8731   */\n      mstore\n        /* \"#utility.yul\":8767:8769   */\n      0x2c\n        /* \"#utility.yul\":8747:8765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8740:8770   */\n      mstore\n        /* \"#utility.yul\":8806:8840   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":8786:8804   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8779:8841   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":8857:8875   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8850:8892   */\n      mstore\n        /* \"#utility.yul\":8909:8928   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_91\n        /* \"#utility.yul\":8526:8934   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_170\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_172:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_47\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9123:9144   */\n      mstore\n        /* \"#utility.yul\":9180:9182   */\n      0x25\n        /* \"#utility.yul\":9160:9178   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9153:9183   */\n      mstore\n        /* \"#utility.yul\":9219:9253   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":9199:9217   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9192:9254   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":9270:9288   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9263:9298   */\n      mstore\n        /* \"#utility.yul\":9315:9334   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_91\n        /* \"#utility.yul\":8939:9340   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_175:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9547:9549   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9529:9550   */\n      mstore\n        /* \"#utility.yul\":9586:9588   */\n      0x24\n        /* \"#utility.yul\":9566:9584   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9559:9589   */\n      mstore\n        /* \"#utility.yul\":9625:9659   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":9605:9623   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9598:9660   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":9676:9694   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9669:9703   */\n      mstore\n        /* \"#utility.yul\":9720:9739   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_91\n        /* \"#utility.yul\":9345:9745   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_107\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_184\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_185\n      jump\t// in\n    tag_184:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_186\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_187\n      jump\t// in\n    tag_186:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10347:10349   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10329:10350   */\n      mstore\n        /* \"#utility.yul\":10386:10388   */\n      0x19\n        /* \"#utility.yul\":10366:10384   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10359:10389   */\n      mstore\n        /* \"#utility.yul\":10425:10452   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":10405:10423   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10398:10453   */\n      mstore\n        /* \"#utility.yul\":10470:10488   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_91\n        /* \"#utility.yul\":10145:10494   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_198\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:606  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_204\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_207\n      dup2\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_209\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_205)\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_212\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_214:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_185\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_218\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_220\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_222\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_224\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_210\n      jump\t// in\n    tag_224:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_215)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_232\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_235\n      swap2\n      dup2\n      add\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x01\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_237\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12796:12797  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12797  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_201\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_237:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_171)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_230:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_249:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":68:139   */\n    tag_257:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:395   */\n    tag_20:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_259:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_152\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_249\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_250:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_263:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_263)\n    tag_265:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_142\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_251:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_268\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_250\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_27:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_152\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_251\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_30:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_272:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_252:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_275:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_36:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_277:\n        /* \"#utility.yul\":2082:2111   */\n      tag_278\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_252\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2173:2501   */\n    tag_40:\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2319:2321   */\n      0x60\n        /* \"#utility.yul\":2307:2316   */\n      dup5\n        /* \"#utility.yul\":2298:2305   */\n      dup7\n        /* \"#utility.yul\":2294:2317   */\n      sub\n        /* \"#utility.yul\":2290:2322   */\n      slt\n        /* \"#utility.yul\":2287:2339   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":2335:2336   */\n      0x00\n        /* \"#utility.yul\":2332:2333   */\n      dup1\n        /* \"#utility.yul\":2325:2337   */\n      revert\n        /* \"#utility.yul\":2287:2339   */\n    tag_280:\n        /* \"#utility.yul\":2358:2387   */\n      tag_281\n        /* \"#utility.yul\":2377:2386   */\n      dup5\n        /* \"#utility.yul\":2358:2387   */\n      tag_252\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2348:2387   */\n      swap3\n      pop\n        /* \"#utility.yul\":2406:2444   */\n      tag_282\n        /* \"#utility.yul\":2440:2442   */\n      0x20\n        /* \"#utility.yul\":2429:2438   */\n      dup6\n        /* \"#utility.yul\":2425:2443   */\n      add\n        /* \"#utility.yul\":2406:2444   */\n      tag_252\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2396:2444   */\n      swap2\n      pop\n        /* \"#utility.yul\":2491:2493   */\n      0x40\n        /* \"#utility.yul\":2480:2489   */\n      dup5\n        /* \"#utility.yul\":2476:2494   */\n      add\n        /* \"#utility.yul\":2463:2495   */\n      calldataload\n        /* \"#utility.yul\":2453:2495   */\n      swap1\n      pop\n        /* \"#utility.yul\":2173:2501   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2506:2692   */\n    tag_51:\n        /* \"#utility.yul\":2565:2571   */\n      0x00\n        /* \"#utility.yul\":2618:2620   */\n      0x20\n        /* \"#utility.yul\":2606:2615   */\n      dup3\n        /* \"#utility.yul\":2597:2604   */\n      dup5\n        /* \"#utility.yul\":2593:2616   */\n      sub\n        /* \"#utility.yul\":2589:2621   */\n      slt\n        /* \"#utility.yul\":2586:2638   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2631:2632   */\n      dup1\n        /* \"#utility.yul\":2624:2636   */\n      revert\n        /* \"#utility.yul\":2586:2638   */\n    tag_284:\n        /* \"#utility.yul\":2657:2686   */\n      tag_152\n        /* \"#utility.yul\":2676:2685   */\n      dup3\n        /* \"#utility.yul\":2657:2686   */\n      tag_252\n      jump\t// in\n        /* \"#utility.yul\":2879:3226   */\n    tag_60:\n        /* \"#utility.yul\":2944:2950   */\n      0x00\n        /* \"#utility.yul\":2952:2958   */\n      dup1\n        /* \"#utility.yul\":3005:3007   */\n      0x40\n        /* \"#utility.yul\":2993:3002   */\n      dup4\n        /* \"#utility.yul\":2984:2991   */\n      dup6\n        /* \"#utility.yul\":2980:3003   */\n      sub\n        /* \"#utility.yul\":2976:3008   */\n      slt\n        /* \"#utility.yul\":2973:3025   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3018:3019   */\n      dup1\n        /* \"#utility.yul\":3011:3023   */\n      revert\n        /* \"#utility.yul\":2973:3025   */\n    tag_288:\n        /* \"#utility.yul\":3044:3073   */\n      tag_289\n        /* \"#utility.yul\":3063:3072   */\n      dup4\n        /* \"#utility.yul\":3044:3073   */\n      tag_252\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3034:3073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3123:3125   */\n      0x20\n        /* \"#utility.yul\":3112:3121   */\n      dup4\n        /* \"#utility.yul\":3108:3126   */\n      add\n        /* \"#utility.yul\":3095:3127   */\n      calldataload\n        /* \"#utility.yul\":3170:3175   */\n      dup1\n        /* \"#utility.yul\":3163:3176   */\n      iszero\n        /* \"#utility.yul\":3156:3177   */\n      iszero\n        /* \"#utility.yul\":3149:3154   */\n      dup2\n        /* \"#utility.yul\":3146:3178   */\n      eq\n        /* \"#utility.yul\":3136:3196   */\n      tag_290\n      jumpi\n        /* \"#utility.yul\":3192:3193   */\n      0x00\n        /* \"#utility.yul\":3189:3190   */\n      dup1\n        /* \"#utility.yul\":3182:3194   */\n      revert\n        /* \"#utility.yul\":3136:3196   */\n    tag_290:\n        /* \"#utility.yul\":3215:3220   */\n      dup1\n        /* \"#utility.yul\":3205:3220   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2879:3226   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3231:3358   */\n    tag_213:\n        /* \"#utility.yul\":3292:3302   */\n      0x4e487b71\n        /* \"#utility.yul\":3287:3290   */\n      0xe0\n        /* \"#utility.yul\":3283:3303   */\n      shl\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3273:3304   */\n      mstore\n        /* \"#utility.yul\":3323:3327   */\n      0x41\n        /* \"#utility.yul\":3320:3321   */\n      0x04\n        /* \"#utility.yul\":3313:3328   */\n      mstore\n        /* \"#utility.yul\":3347:3351   */\n      0x24\n        /* \"#utility.yul\":3344:3345   */\n      0x00\n        /* \"#utility.yul\":3337:3352   */\n      revert\n        /* \"#utility.yul\":3363:4501   */\n    tag_64:\n        /* \"#utility.yul\":3458:3464   */\n      0x00\n        /* \"#utility.yul\":3466:3472   */\n      dup1\n        /* \"#utility.yul\":3474:3480   */\n      0x00\n        /* \"#utility.yul\":3482:3488   */\n      dup1\n        /* \"#utility.yul\":3535:3538   */\n      0x80\n        /* \"#utility.yul\":3523:3532   */\n      dup6\n        /* \"#utility.yul\":3514:3521   */\n      dup8\n        /* \"#utility.yul\":3510:3533   */\n      sub\n        /* \"#utility.yul\":3506:3539   */\n      slt\n        /* \"#utility.yul\":3503:3556   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3503:3556   */\n    tag_293:\n        /* \"#utility.yul\":3575:3604   */\n      tag_294\n        /* \"#utility.yul\":3594:3603   */\n      dup6\n        /* \"#utility.yul\":3575:3604   */\n      tag_252\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3565:3604   */\n      swap4\n      pop\n        /* \"#utility.yul\":3623:3661   */\n      tag_295\n        /* \"#utility.yul\":3657:3659   */\n      0x20\n        /* \"#utility.yul\":3646:3655   */\n      dup7\n        /* \"#utility.yul\":3642:3660   */\n      add\n        /* \"#utility.yul\":3623:3661   */\n      tag_252\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3613:3661   */\n      swap3\n      pop\n        /* \"#utility.yul\":3708:3710   */\n      0x40\n        /* \"#utility.yul\":3697:3706   */\n      dup6\n        /* \"#utility.yul\":3693:3711   */\n      add\n        /* \"#utility.yul\":3680:3712   */\n      calldataload\n        /* \"#utility.yul\":3670:3712   */\n      swap2\n      pop\n        /* \"#utility.yul\":3763:3765   */\n      0x60\n        /* \"#utility.yul\":3752:3761   */\n      dup6\n        /* \"#utility.yul\":3748:3766   */\n      add\n        /* \"#utility.yul\":3735:3767   */\n      calldataload\n        /* \"#utility.yul\":3786:3804   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3827:3829   */\n      dup1\n        /* \"#utility.yul\":3819:3825   */\n      dup3\n        /* \"#utility.yul\":3816:3830   */\n      gt\n        /* \"#utility.yul\":3813:3847   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":3843:3844   */\n      0x00\n        /* \"#utility.yul\":3840:3841   */\n      dup1\n        /* \"#utility.yul\":3833:3845   */\n      revert\n        /* \"#utility.yul\":3813:3847   */\n    tag_296:\n        /* \"#utility.yul\":3881:3887   */\n      dup2\n        /* \"#utility.yul\":3870:3879   */\n      dup8\n        /* \"#utility.yul\":3866:3888   */\n      add\n        /* \"#utility.yul\":3856:3888   */\n      swap2\n      pop\n        /* \"#utility.yul\":3926:3933   */\n      dup8\n        /* \"#utility.yul\":3919:3923   */\n      0x1f\n        /* \"#utility.yul\":3915:3917   */\n      dup4\n        /* \"#utility.yul\":3911:3924   */\n      add\n        /* \"#utility.yul\":3907:3934   */\n      slt\n        /* \"#utility.yul\":3897:3952   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3945:3946   */\n      dup1\n        /* \"#utility.yul\":3938:3950   */\n      revert\n        /* \"#utility.yul\":3897:3952   */\n    tag_297:\n        /* \"#utility.yul\":3984:3986   */\n      dup2\n        /* \"#utility.yul\":3971:3987   */\n      calldataload\n        /* \"#utility.yul\":4006:4008   */\n      dup2\n        /* \"#utility.yul\":4002:4004   */\n      dup2\n        /* \"#utility.yul\":3999:4009   */\n      gt\n        /* \"#utility.yul\":3996:4032   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":4012:4030   */\n      tag_299\n      tag_213\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4087:4089   */\n      0x40\n        /* \"#utility.yul\":4081:4090   */\n      mload\n        /* \"#utility.yul\":4055:4057   */\n      0x1f\n        /* \"#utility.yul\":4141:4154   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4137:4159   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4161:4163   */\n      0x3f\n        /* \"#utility.yul\":4133:4164   */\n      add\n        /* \"#utility.yul\":4129:4169   */\n      and\n        /* \"#utility.yul\":4117:4170   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4185:4203   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4205:4227   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4182:4228   */\n      or\n        /* \"#utility.yul\":4179:4251   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4231:4249   */\n      tag_301\n      tag_213\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":4271:4281   */\n      dup2\n        /* \"#utility.yul\":4267:4269   */\n      0x40\n        /* \"#utility.yul\":4260:4282   */\n      mstore\n        /* \"#utility.yul\":4306:4308   */\n      dup3\n        /* \"#utility.yul\":4298:4304   */\n      dup2\n        /* \"#utility.yul\":4291:4309   */\n      mstore\n        /* \"#utility.yul\":4346:4353   */\n      dup11\n        /* \"#utility.yul\":4341:4343   */\n      0x20\n        /* \"#utility.yul\":4336:4338   */\n      dup5\n        /* \"#utility.yul\":4332:4334   */\n      dup8\n        /* \"#utility.yul\":4328:4339   */\n      add\n        /* \"#utility.yul\":4324:4344   */\n      add\n        /* \"#utility.yul\":4321:4354   */\n      gt\n        /* \"#utility.yul\":4318:4371   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4367:4368   */\n      0x00\n        /* \"#utility.yul\":4364:4365   */\n      dup1\n        /* \"#utility.yul\":4357:4369   */\n      revert\n        /* \"#utility.yul\":4318:4371   */\n    tag_302:\n        /* \"#utility.yul\":4423:4425   */\n      dup3\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4414:4416   */\n      dup7\n        /* \"#utility.yul\":4410:4421   */\n      add\n        /* \"#utility.yul\":4405:4407   */\n      0x20\n        /* \"#utility.yul\":4397:4403   */\n      dup4\n        /* \"#utility.yul\":4393:4408   */\n      add\n        /* \"#utility.yul\":4380:4426   */\n      calldatacopy\n        /* \"#utility.yul\":4468:4469   */\n      0x00\n        /* \"#utility.yul\":4463:4465   */\n      0x20\n        /* \"#utility.yul\":4458:4460   */\n      dup5\n        /* \"#utility.yul\":4450:4456   */\n      dup4\n        /* \"#utility.yul\":4446:4461   */\n      add\n        /* \"#utility.yul\":4442:4466   */\n      add\n        /* \"#utility.yul\":4435:4470   */\n      mstore\n        /* \"#utility.yul\":4489:4495   */\n      dup1\n        /* \"#utility.yul\":4479:4495   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3363:4501   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4506:4766   */\n    tag_72:\n        /* \"#utility.yul\":4574:4580   */\n      0x00\n        /* \"#utility.yul\":4582:4588   */\n      dup1\n        /* \"#utility.yul\":4635:4637   */\n      0x40\n        /* \"#utility.yul\":4623:4632   */\n      dup4\n        /* \"#utility.yul\":4614:4621   */\n      dup6\n        /* \"#utility.yul\":4610:4633   */\n      sub\n        /* \"#utility.yul\":4606:4638   */\n      slt\n        /* \"#utility.yul\":4603:4655   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":4651:4652   */\n      0x00\n        /* \"#utility.yul\":4648:4649   */\n      dup1\n        /* \"#utility.yul\":4641:4653   */\n      revert\n        /* \"#utility.yul\":4603:4655   */\n    tag_304:\n        /* \"#utility.yul\":4674:4703   */\n      tag_305\n        /* \"#utility.yul\":4693:4702   */\n      dup4\n        /* \"#utility.yul\":4674:4703   */\n      tag_252\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4664:4703   */\n      swap2\n      pop\n        /* \"#utility.yul\":4722:4760   */\n      tag_306\n        /* \"#utility.yul\":4756:4758   */\n      0x20\n        /* \"#utility.yul\":4745:4754   */\n      dup5\n        /* \"#utility.yul\":4741:4759   */\n      add\n        /* \"#utility.yul\":4722:4760   */\n      tag_252\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4712:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4506:4766   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4771:5151   */\n    tag_82:\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4846:4858   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":4893:4905   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":4914:4975   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":4968:4972   */\n      0x7f\n        /* \"#utility.yul\":4960:4966   */\n      dup3\n        /* \"#utility.yul\":4956:4973   */\n      and\n        /* \"#utility.yul\":4946:4973   */\n      swap2\n      pop\n        /* \"#utility.yul\":4914:4975   */\n    tag_308:\n        /* \"#utility.yul\":5021:5023   */\n      0x20\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5010:5024   */\n      lt\n        /* \"#utility.yul\":4990:5008   */\n      dup2\n        /* \"#utility.yul\":4987:5025   */\n      sub\n        /* \"#utility.yul\":4984:5145   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5067:5077   */\n      0x4e487b71\n        /* \"#utility.yul\":5062:5065   */\n      0xe0\n        /* \"#utility.yul\":5058:5078   */\n      shl\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5048:5079   */\n      mstore\n        /* \"#utility.yul\":5102:5106   */\n      0x22\n        /* \"#utility.yul\":5099:5100   */\n      0x04\n        /* \"#utility.yul\":5092:5107   */\n      mstore\n        /* \"#utility.yul\":5130:5134   */\n      0x24\n        /* \"#utility.yul\":5127:5128   */\n      0x00\n        /* \"#utility.yul\":5120:5135   */\n      revert\n        /* \"#utility.yul\":4984:5145   */\n    tag_309:\n      pop\n        /* \"#utility.yul\":4771:5151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6809   */\n    tag_114:\n        /* \"#utility.yul\":6598:6600   */\n      0x20\n        /* \"#utility.yul\":6580:6601   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6637:6639   */\n      0x31\n        /* \"#utility.yul\":6617:6635   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6610:6640   */\n      mstore\n        /* \"#utility.yul\":6676:6710   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":6671:6673   */\n      0x40\n        /* \"#utility.yul\":6656:6674   */\n      dup3\n      add\n        /* \"#utility.yul\":6649:6711   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":6742:6744   */\n      0x60\n        /* \"#utility.yul\":6727:6745   */\n      dup3\n      add\n        /* \"#utility.yul\":6720:6767   */\n      mstore\n        /* \"#utility.yul\":6799:6802   */\n      0x80\n        /* \"#utility.yul\":6784:6803   */\n      add\n      swap1\n        /* \"#utility.yul\":6396:6809   */\n      jump\t// out\n        /* \"#utility.yul\":8051:8521   */\n    tag_156:\n        /* \"#utility.yul\":8230:8233   */\n      0x00\n        /* \"#utility.yul\":8268:8274   */\n      dup4\n        /* \"#utility.yul\":8262:8275   */\n      mload\n        /* \"#utility.yul\":8284:8337   */\n      tag_318\n        /* \"#utility.yul\":8330:8336   */\n      dup2\n        /* \"#utility.yul\":8325:8328   */\n      dup5\n        /* \"#utility.yul\":8318:8322   */\n      0x20\n        /* \"#utility.yul\":8310:8316   */\n      dup9\n        /* \"#utility.yul\":8306:8323   */\n      add\n        /* \"#utility.yul\":8284:8337   */\n      tag_250\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8400:8413   */\n      dup4\n      mload\n        /* \"#utility.yul\":8359:8375   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":8422:8479   */\n      tag_319\n        /* \"#utility.yul\":8400:8413   */\n      dup2\n        /* \"#utility.yul\":8359:8375   */\n      dup4\n        /* \"#utility.yul\":8456:8460   */\n      0x20\n        /* \"#utility.yul\":8444:8461   */\n      dup9\n      add\n        /* \"#utility.yul\":8422:8479   */\n      tag_250\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8495:8515   */\n      add\n      swap5\n        /* \"#utility.yul\":8051:8521   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9750:9877   */\n    tag_253:\n        /* \"#utility.yul\":9811:9821   */\n      0x4e487b71\n        /* \"#utility.yul\":9806:9809   */\n      0xe0\n        /* \"#utility.yul\":9802:9822   */\n      shl\n        /* \"#utility.yul\":9799:9800   */\n      0x00\n        /* \"#utility.yul\":9792:9823   */\n      mstore\n        /* \"#utility.yul\":9842:9846   */\n      0x11\n        /* \"#utility.yul\":9839:9840   */\n      0x04\n        /* \"#utility.yul\":9832:9847   */\n      mstore\n        /* \"#utility.yul\":9866:9870   */\n      0x24\n        /* \"#utility.yul\":9863:9864   */\n      0x00\n        /* \"#utility.yul\":9856:9871   */\n      revert\n        /* \"#utility.yul\":9882:10007   */\n    tag_185:\n        /* \"#utility.yul\":9922:9926   */\n      0x00\n        /* \"#utility.yul\":9950:9951   */\n      dup3\n        /* \"#utility.yul\":9947:9948   */\n      dup3\n        /* \"#utility.yul\":9944:9952   */\n      lt\n        /* \"#utility.yul\":9941:9975   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":9955:9973   */\n      tag_326\n      tag_253\n      jump\t// in\n    tag_326:\n      pop\n        /* \"#utility.yul\":9992:10001   */\n      sub\n      swap1\n        /* \"#utility.yul\":9882:10007   */\n      jump\t// out\n        /* \"#utility.yul\":10012:10140   */\n    tag_187:\n        /* \"#utility.yul\":10052:10055   */\n      0x00\n        /* \"#utility.yul\":10083:10084   */\n      dup3\n        /* \"#utility.yul\":10079:10085   */\n      not\n        /* \"#utility.yul\":10076:10077   */\n      dup3\n        /* \"#utility.yul\":10073:10086   */\n      gt\n        /* \"#utility.yul\":10070:10109   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":10089:10107   */\n      tag_329\n      tag_253\n      jump\t// in\n    tag_329:\n      pop\n        /* \"#utility.yul\":10125:10134   */\n      add\n      swap1\n        /* \"#utility.yul\":10012:10140   */\n      jump\t// out\n        /* \"#utility.yul\":10499:10913   */\n    tag_201:\n        /* \"#utility.yul\":10701:10703   */\n      0x20\n        /* \"#utility.yul\":10683:10704   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10740:10742   */\n      0x32\n        /* \"#utility.yul\":10720:10738   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10713:10743   */\n      mstore\n        /* \"#utility.yul\":10779:10813   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":10774:10776   */\n      0x40\n        /* \"#utility.yul\":10759:10777   */\n      dup3\n      add\n        /* \"#utility.yul\":10752:10814   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":10845:10847   */\n      0x60\n        /* \"#utility.yul\":10830:10848   */\n      dup3\n      add\n        /* \"#utility.yul\":10823:10871   */\n      mstore\n        /* \"#utility.yul\":10903:10906   */\n      0x80\n        /* \"#utility.yul\":10888:10907   */\n      add\n      swap1\n        /* \"#utility.yul\":10499:10913   */\n      jump\t// out\n        /* \"#utility.yul\":10918:11053   */\n    tag_208:\n        /* \"#utility.yul\":10957:10960   */\n      0x00\n        /* \"#utility.yul\":10978:10995   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":10975:11018   */\n      tag_334\n      jumpi\n        /* \"#utility.yul\":10998:11016   */\n      tag_334\n      tag_253\n      jump\t// in\n    tag_334:\n      pop\n        /* \"#utility.yul\":11045:11046   */\n      0x01\n        /* \"#utility.yul\":11034:11047   */\n      add\n      swap1\n        /* \"#utility.yul\":10918:11053   */\n      jump\t// out\n        /* \"#utility.yul\":11058:11185   */\n    tag_254:\n        /* \"#utility.yul\":11119:11129   */\n      0x4e487b71\n        /* \"#utility.yul\":11114:11117   */\n      0xe0\n        /* \"#utility.yul\":11110:11130   */\n      shl\n        /* \"#utility.yul\":11107:11108   */\n      0x00\n        /* \"#utility.yul\":11100:11131   */\n      mstore\n        /* \"#utility.yul\":11150:11154   */\n      0x12\n        /* \"#utility.yul\":11147:11148   */\n      0x04\n        /* \"#utility.yul\":11140:11155   */\n      mstore\n        /* \"#utility.yul\":11174:11178   */\n      0x24\n        /* \"#utility.yul\":11171:11172   */\n      0x00\n        /* \"#utility.yul\":11164:11179   */\n      revert\n        /* \"#utility.yul\":11190:11310   */\n    tag_210:\n        /* \"#utility.yul\":11230:11231   */\n      0x00\n        /* \"#utility.yul\":11256:11257   */\n      dup3\n        /* \"#utility.yul\":11246:11281   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":11261:11279   */\n      tag_338\n      tag_254\n      jump\t// in\n    tag_338:\n      pop\n        /* \"#utility.yul\":11295:11304   */\n      div\n      swap1\n        /* \"#utility.yul\":11190:11310   */\n      jump\t// out\n        /* \"#utility.yul\":11315:11427   */\n    tag_219:\n        /* \"#utility.yul\":11347:11348   */\n      0x00\n        /* \"#utility.yul\":11373:11374   */\n      dup3\n        /* \"#utility.yul\":11363:11398   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":11378:11396   */\n      tag_341\n      tag_254\n      jump\t// in\n    tag_341:\n      pop\n        /* \"#utility.yul\":11412:11421   */\n      mod\n      swap1\n        /* \"#utility.yul\":11315:11427   */\n      jump\t// out\n        /* \"#utility.yul\":11432:11559   */\n    tag_223:\n        /* \"#utility.yul\":11493:11503   */\n      0x4e487b71\n        /* \"#utility.yul\":11488:11491   */\n      0xe0\n        /* \"#utility.yul\":11484:11504   */\n      shl\n        /* \"#utility.yul\":11481:11482   */\n      0x00\n        /* \"#utility.yul\":11474:11505   */\n      mstore\n        /* \"#utility.yul\":11524:11528   */\n      0x32\n        /* \"#utility.yul\":11521:11522   */\n      0x04\n        /* \"#utility.yul\":11514:11529   */\n      mstore\n        /* \"#utility.yul\":11548:11552   */\n      0x24\n        /* \"#utility.yul\":11545:11546   */\n      0x00\n        /* \"#utility.yul\":11538:11553   */\n      revert\n        /* \"#utility.yul\":11564:12053   */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11833:11848   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":11815:11849   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11885:11900   */\n      dup5\n      and\n        /* \"#utility.yul\":11880:11882   */\n      0x20\n        /* \"#utility.yul\":11865:11883   */\n      dup3\n      add\n        /* \"#utility.yul\":11858:11901   */\n      mstore\n        /* \"#utility.yul\":11932:11934   */\n      0x40\n        /* \"#utility.yul\":11917:11935   */\n      dup2\n      add\n        /* \"#utility.yul\":11910:11944   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":11980:11983   */\n      0x80\n        /* \"#utility.yul\":11975:11977   */\n      0x60\n        /* \"#utility.yul\":11960:11978   */\n      dup3\n      add\n        /* \"#utility.yul\":11953:11984   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11758:11762   */\n      0x00\n      swap1\n        /* \"#utility.yul\":12001:12047   */\n      tag_344\n      swap1\n        /* \"#utility.yul\":12027:12046   */\n      dup4\n      add\n        /* \"#utility.yul\":12019:12025   */\n      dup5\n        /* \"#utility.yul\":12001:12047   */\n      tag_251\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":11993:12047   */\n      swap7\n        /* \"#utility.yul\":11564:12053   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12058:12307   */\n    tag_236:\n        /* \"#utility.yul\":12127:12133   */\n      0x00\n        /* \"#utility.yul\":12180:12182   */\n      0x20\n        /* \"#utility.yul\":12168:12177   */\n      dup3\n        /* \"#utility.yul\":12159:12166   */\n      dup5\n        /* \"#utility.yul\":12155:12178   */\n      sub\n        /* \"#utility.yul\":12151:12183   */\n      slt\n        /* \"#utility.yul\":12148:12200   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":12196:12197   */\n      0x00\n        /* \"#utility.yul\":12193:12194   */\n      dup1\n        /* \"#utility.yul\":12186:12198   */\n      revert\n        /* \"#utility.yul\":12148:12200   */\n    tag_346:\n        /* \"#utility.yul\":12228:12237   */\n      dup2\n        /* \"#utility.yul\":12222:12238   */\n      mload\n        /* \"#utility.yul\":12247:12277   */\n      tag_152\n        /* \"#utility.yul\":12271:12276   */\n      dup2\n        /* \"#utility.yul\":12247:12277   */\n      tag_249\n      jump\t// in\n\n    auxdata: 0xa264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:17"
															},
															"nodeType": "YulIf",
															"src": "220:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:17"
															},
															"nodeType": "YulIf",
															"src": "353:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:17"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:17"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:17"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:17"
															},
															"nodeType": "YulIf",
															"src": "536:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:17"
															},
															"nodeType": "YulIf",
															"src": "698:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:17"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:17"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:17"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:17",
																"statements": []
															},
															"src": "779:133:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:17"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:17"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:17"
															},
															"nodeType": "YulIf",
															"src": "921:80:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:17",
														"type": ""
													}
												],
												"src": "146:885:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:17"
															},
															"nodeType": "YulIf",
															"src": "1164:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:17"
															},
															"nodeType": "YulIf",
															"src": "1301:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:17"
															},
															"nodeType": "YulIf",
															"src": "1474:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:17",
														"type": ""
													}
												],
												"src": "1036:562:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:17"
															},
															"nodeType": "YulIf",
															"src": "1746:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:17"
															},
															"nodeType": "YulIf",
															"src": "1816:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:17",
														"type": ""
													}
												],
												"src": "1603:380:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620014de380380620014de8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b61124d80620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x14DE CODESIZE SUB DUP1 PUSH3 0x14DE DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x281 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x27B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x124D DUP1 PUSH3 0x291 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x984C0AFE4C4C30 0xA5 EXP BASEFEE EQ 0xD9 PUSH30 0xB5EA4958DF3ED4413EB05499C767A2BF87A864736F6C634300080D003300 ",
							"sourceMap": "628:13658:2:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:2;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13658:2;;;-1:-1:-1;628:13658:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:17;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:17:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:17;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:13658:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 1859,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_413": {
									"entryPoint": null,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1050": {
									"entryPoint": null,
									"id": 1050,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1039": {
									"entryPoint": 3142,
									"id": 1039,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_635": {
									"entryPoint": null,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_676": {
									"entryPoint": 1969,
									"id": 676,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_2057": {
									"entryPoint": null,
									"id": 2057,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_617": {
									"entryPoint": 2834,
									"id": 617,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_977": {
									"entryPoint": 2628,
									"id": 977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_921": {
									"entryPoint": 2216,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_456": {
									"entryPoint": 934,
									"id": 456,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_314": {
									"entryPoint": 1406,
									"id": 314,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_477": {
									"entryPoint": 780,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1768": {
									"entryPoint": null,
									"id": 1768,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_352": {
									"entryPoint": 634,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_342": {
									"entryPoint": 1287,
									"id": 342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_558": {
									"entryPoint": 1260,
									"id": 558,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_588": {
									"entryPoint": 1571,
									"id": 588,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_494": {
									"entryPoint": 1556,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_2367": {
									"entryPoint": null,
									"id": 2367,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_290": {
									"entryPoint": 552,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_362": {
									"entryPoint": 1541,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2226": {
									"entryPoint": 2885,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_404": {
									"entryPoint": 1627,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_539": {
									"entryPoint": 1211,
									"id": 539,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 3453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4519,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12309:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:17"
															},
															"nodeType": "YulIf",
															"src": "68:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:17"
															},
															"nodeType": "YulIf",
															"src": "229:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:17",
														"type": ""
													}
												],
												"src": "150:245:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:17",
														"type": ""
													}
												],
												"src": "400:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:17",
																"statements": []
															},
															"src": "674:113:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:17"
															},
															"nodeType": "YulIf",
															"src": "796:48:17"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:17",
														"type": ""
													}
												],
												"src": "592:258:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:17",
														"type": ""
													}
												],
												"src": "855:258:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:17",
														"type": ""
													}
												],
												"src": "1118:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:17"
															},
															"nodeType": "YulIf",
															"src": "1423:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:17",
														"type": ""
													}
												],
												"src": "1343:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:17",
														"type": ""
													}
												],
												"src": "1528:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:17"
															},
															"nodeType": "YulIf",
															"src": "1833:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:17",
														"type": ""
													}
												],
												"src": "1736:173:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:17"
															},
															"nodeType": "YulIf",
															"src": "2011:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:17",
														"type": ""
													}
												],
												"src": "1914:254:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2277:224:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2323:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2332:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2335:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2325:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2325:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2325:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2298:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2307:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2294:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2294:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2290:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:32:17"
															},
															"nodeType": "YulIf",
															"src": "2287:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2348:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2358:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2358:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2348:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2396:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2429:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2440:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2425:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2425:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2406:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2453:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2480:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2491:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2463:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2463:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2453:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2227:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2238:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2250:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2258:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2266:6:17",
														"type": ""
													}
												],
												"src": "2173:328:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2576:116:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2622:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2631:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2624:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2624:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2624:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2597:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2593:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2593:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2618:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2589:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2589:32:17"
															},
															"nodeType": "YulIf",
															"src": "2586:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2647:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2676:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2657:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2657:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2647:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2542:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2553:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2565:6:17",
														"type": ""
													}
												],
												"src": "2506:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2798:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2808:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2820:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2831:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2816:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2808:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2850:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2861:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2843:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2843:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2843:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2767:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2778:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2789:4:17",
														"type": ""
													}
												],
												"src": "2697:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2963:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3009:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3018:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3021:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3011:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3011:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3011:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2984:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2980:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2976:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2976:32:17"
															},
															"nodeType": "YulIf",
															"src": "2973:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3044:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3082:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3112:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3123:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3108:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3108:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3095:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3095:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3086:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3180:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3192:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3182:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3182:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3182:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3149:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3170:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3163:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3163:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3156:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3146:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3146:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:40:17"
															},
															"nodeType": "YulIf",
															"src": "3136:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3205:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3215:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2921:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2932:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2944:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2952:6:17",
														"type": ""
													}
												],
												"src": "2879:347:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3263:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3287:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3292:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3283:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3283:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3320:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3323:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3313:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3344:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3337:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3337:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3231:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:1008:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3540:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3514:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3523:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3510:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:33:17"
															},
															"nodeType": "YulIf",
															"src": "3503:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3565:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3594:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3575:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3565:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3613:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3646:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3657:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3642:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3642:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3623:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3623:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3697:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3708:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3693:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3680:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3680:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3721:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3752:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3763:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3748:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3748:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3735:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3735:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3725:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3776:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3786:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3780:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3831:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3843:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3833:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3833:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3833:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3827:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3816:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3816:14:17"
															},
															"nodeType": "YulIf",
															"src": "3813:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3856:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3870:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3881:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3866:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3866:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3860:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3936:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3945:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3938:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3938:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3938:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3915:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3919:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3911:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3911:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3926:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3907:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3907:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3900:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:35:17"
															},
															"nodeType": "YulIf",
															"src": "3897:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3961:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3984:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3971:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3971:16:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "3965:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4010:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4012:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4012:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4012:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4002:2:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4006:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3999:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:10:17"
															},
															"nodeType": "YulIf",
															"src": "3996:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4041:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4051:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:7:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4045:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4067:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4087:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4081:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4071:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4099:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "4145:2:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4149:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4141:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4141:13:17"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "4156:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "4137:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4137:22:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4161:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4133:31:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4166:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4117:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4103:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4229:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "4231:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4231:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4231:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4188:10:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4200:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4185:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4185:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4208:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4220:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4205:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4205:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4182:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:46:17"
															},
															"nodeType": "YulIf",
															"src": "4179:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4267:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4271:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4260:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4260:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4260:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4298:6:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4306:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:18:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4355:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4364:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4367:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4357:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4357:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4357:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4332:2:17"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4336:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4328:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4328:11:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4341:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:20:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4346:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4321:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4321:33:17"
															},
															"nodeType": "YulIf",
															"src": "4318:53:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4397:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4405:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4393:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4393:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4414:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4410:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4410:11:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4423:2:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4380:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4380:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4380:46:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "4450:6:17"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4458:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4446:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4446:15:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4463:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:24:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4468:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4479:16:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4489:6:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3435:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3446:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3458:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3466:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3474:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3482:6:17",
														"type": ""
													}
												],
												"src": "3363:1138:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4593:173:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4639:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4648:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4651:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4641:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4641:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4641:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4614:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4623:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4610:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4635:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4606:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4606:32:17"
															},
															"nodeType": "YulIf",
															"src": "4603:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4664:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4674:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4674:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4664:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4712:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4745:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4756:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4741:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4741:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4722:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4551:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4562:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4574:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4582:6:17",
														"type": ""
													}
												],
												"src": "4506:260:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4826:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4836:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4850:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4853:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4846:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4846:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4836:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4867:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4897:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4903:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4893:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "4871:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4944:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4946:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4960:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4968:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4956:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4956:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4946:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4924:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4917:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4917:26:17"
															},
															"nodeType": "YulIf",
															"src": "4914:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5034:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5062:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5067:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5058:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5058:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5048:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5048:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5048:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5099:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5102:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5092:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5127:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5130:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5120:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5120:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5120:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4990:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5013:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5021:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "5010:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4987:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:38:17"
															},
															"nodeType": "YulIf",
															"src": "4984:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4806:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4815:6:17",
														"type": ""
													}
												],
												"src": "4771:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5330:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5347:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5358:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5340:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5340:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5381:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5392:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5377:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5377:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5370:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5370:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5420:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5431:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5416:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5436:34:17",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5409:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:18:17"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5507:14:17",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5480:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5480:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5480:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5531:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5539:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5307:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5321:4:17",
														"type": ""
													}
												],
												"src": "5156:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5743:223:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5805:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5790:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:17",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5783:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5849:34:17",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5822:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5915:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5900:18:17"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5920:3:17",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5893:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5893:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5933:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5945:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5956:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5941:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5941:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5933:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5720:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5734:4:17",
														"type": ""
													}
												],
												"src": "5569:397:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6145:246:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6162:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6173:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6155:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6155:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6207:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6212:2:17",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6185:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6235:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6246:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6231:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6251:34:17",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6224:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6224:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6306:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6302:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6302:18:17"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6322:26:17",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6358:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6370:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6381:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6366:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6366:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6358:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6122:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6136:4:17",
														"type": ""
													}
												],
												"src": "5971:420:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6570:239:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6587:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6598:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6580:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6580:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6580:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6632:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6617:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6617:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:17",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6610:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6610:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6610:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6676:34:17",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6731:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6742:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6727:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6727:18:17"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6747:19:17",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6720:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6720:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6720:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6776:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6788:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6799:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6784:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6776:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6547:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6561:4:17",
														"type": ""
													}
												],
												"src": "6396:413:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6988:231:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7005:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7016:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6998:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6998:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6998:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7050:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7028:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7028:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7028:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7078:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7089:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7074:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7074:18:17"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7094:34:17",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7067:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7067:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7149:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7160:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7145:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7145:18:17"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7165:11:17",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7138:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7138:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7138:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7186:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7198:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7209:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7194:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7194:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7186:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6965:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6979:4:17",
														"type": ""
													}
												],
												"src": "6814:405:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7398:232:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7415:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7426:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7408:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7408:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7408:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7449:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7460:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7445:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7445:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7465:2:17",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7438:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7438:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7438:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7488:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7499:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7484:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7484:18:17"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7504:34:17",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7477:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7477:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7559:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7570:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7555:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7555:18:17"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7575:12:17",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7548:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7548:40:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7548:40:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7597:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7609:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7597:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7375:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7389:4:17",
														"type": ""
													}
												],
												"src": "7224:406:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7809:237:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7826:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7837:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7819:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7819:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:2:17",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7899:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7910:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7895:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7895:18:17"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7915:34:17",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7888:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7888:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7888:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7970:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7981:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7966:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:18:17"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7986:17:17",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7959:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7959:45:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8013:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8025:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8036:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8021:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8021:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8013:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7786:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7800:4:17",
														"type": ""
													}
												],
												"src": "7635:411:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8238:283:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8248:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8268:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8262:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8262:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8252:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8306:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8306:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8325:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8330:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8284:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8284:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8346:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8363:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8368:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8359:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:16:17"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "8350:5:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8384:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8406:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8400:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8400:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "8388:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8448:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8456:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8444:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8444:17:17"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8463:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8470:8:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8422:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8422:57:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8422:57:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8488:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "8499:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "8506:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8495:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8495:20:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8488:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8206:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8211:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8219:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8230:3:17",
														"type": ""
													}
												],
												"src": "8051:470:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8700:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8717:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8728:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8710:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8710:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8710:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8751:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8762:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8747:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8747:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8767:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8740:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8740:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8740:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8790:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8801:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:18:17"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8806:34:17",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:18:17"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8877:14:17",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8901:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8913:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8924:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8909:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8909:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8901:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8677:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8691:4:17",
														"type": ""
													}
												],
												"src": "8526:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9113:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9130:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9123:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9180:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9219:34:17",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9274:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9285:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9270:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9270:18:17"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9290:7:17",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9263:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9263:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9263:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9307:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9319:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9330:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9315:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9315:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9307:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9090:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9104:4:17",
														"type": ""
													}
												],
												"src": "8939:401:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9519:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9536:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9547:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9529:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9570:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9581:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9566:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9566:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9586:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9559:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9559:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9559:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9609:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9620:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9605:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9625:34:17",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9598:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9598:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9691:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9676:18:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9696:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9669:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9669:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9669:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9712:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9724:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9735:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9720:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9720:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9712:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9496:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9510:4:17",
														"type": ""
													}
												],
												"src": "9345:400:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9782:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9799:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9806:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9811:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9802:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9802:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9792:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9792:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9792:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9832:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9832:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9863:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9856:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9856:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9856:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9750:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9931:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9953:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9955:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9955:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9955:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9947:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9950:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9944:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9944:8:17"
															},
															"nodeType": "YulIf",
															"src": "9941:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9984:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9996:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9999:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9992:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9984:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9913:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9916:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9922:4:17",
														"type": ""
													}
												],
												"src": "9882:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10060:80:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10087:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10089:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10089:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10089:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10076:1:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10083:1:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10079:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10079:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10073:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10073:13:17"
															},
															"nodeType": "YulIf",
															"src": "10070:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10118:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10129:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10132:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10125:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10118:3:17"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10043:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10046:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10052:3:17",
														"type": ""
													}
												],
												"src": "10012:128:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10319:175:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10336:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10347:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10329:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10329:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10329:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10381:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10366:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10366:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10386:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10359:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10359:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10359:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10409:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10420:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10405:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10405:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10425:27:17",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10398:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10398:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10398:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10462:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10474:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10485:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10462:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10296:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10310:4:17",
														"type": ""
													}
												],
												"src": "10145:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10673:240:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10690:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10701:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10683:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10683:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10724:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10720:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10740:2:17",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10713:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10713:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10713:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10763:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10774:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10759:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10759:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10779:34:17",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10752:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10752:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10834:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10845:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10830:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10830:18:17"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10850:20:17",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10823:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10823:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10823:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10880:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10892:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10888:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10880:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10650:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10664:4:17",
														"type": ""
													}
												],
												"src": "10499:414:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:88:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10996:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10998:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10998:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10998:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10981:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10992:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10988:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10988:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10978:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10978:17:17"
															},
															"nodeType": "YulIf",
															"src": "10975:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11027:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11038:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11045:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11034:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11034:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11027:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10947:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10957:3:17",
														"type": ""
													}
												],
												"src": "10918:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11090:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11107:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11114:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11110:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11110:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11147:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11150:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11140:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11140:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11171:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11174:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11164:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11164:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11058:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11236:74:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11259:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11261:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11261:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11261:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11256:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11249:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:9:17"
															},
															"nodeType": "YulIf",
															"src": "11246:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11290:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11299:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11302:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11290:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11221:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11224:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11230:1:17",
														"type": ""
													}
												],
												"src": "11190:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11353:74:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11376:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11378:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11378:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11378:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11373:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11366:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11366:9:17"
															},
															"nodeType": "YulIf",
															"src": "11363:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11407:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11416:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11419:1:17"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11412:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11412:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11407:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11338:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11341:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11347:1:17",
														"type": ""
													}
												],
												"src": "11315:112:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11464:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11481:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11488:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11493:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11484:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11484:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11474:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11474:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11474:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11521:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11524:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11514:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11514:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11514:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11545:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11548:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11538:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11538:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11538:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11432:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11767:286:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11777:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11795:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11800:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11791:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11791:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11804:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11787:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11787:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11781:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11822:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11837:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11845:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11833:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11815:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11815:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11815:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11869:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11880:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11865:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11889:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11897:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11885:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11885:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11858:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11858:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11858:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11921:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11932:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11917:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11917:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11937:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11910:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11910:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11910:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11964:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11975:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11960:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11960:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11980:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11953:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11953:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11953:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11993:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12019:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12042:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12027:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12027:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "12001:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12001:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11993:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11712:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11723:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11731:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11739:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11747:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11758:4:17",
														"type": ""
													}
												],
												"src": "11564:489:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12138:169:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12184:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12193:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12196:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12186:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12186:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12186:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12159:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12168:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12155:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12155:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12180:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12151:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12151:32:17"
															},
															"nodeType": "YulIf",
															"src": "12148:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12209:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12228:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12222:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12222:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12213:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12271:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "12247:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12247:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12247:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12286:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12296:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12286:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12104:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12115:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12127:6:17",
														"type": ""
													}
												],
												"src": "12058:249:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bb565b61014f610172366004610e47565b6104ec565b610124610185366004610de8565b610507565b61019d610198366004610e83565b61057e565b6040519081526020016100f3565b610104610605565b61014f6101c1366004610e9e565b610614565b61014f6101d4366004610ef0565b610623565b6101046101e7366004610de8565b61065b565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610507565b9050806001600160a01b0316836001600160a01b03160361041e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043a575061043a81336101fa565b6104ac5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b68383610743565b505050565b6104c533826107b1565b6104e15760405162461bcd60e51b815260040161038190611039565b6104b68383836108a8565b6104b683838360405180602001604052806000815250610623565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105e95760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b61061f338383610a44565b5050565b61062d33836107b1565b6106495760405162461bcd60e51b815260040161038190611039565b61065584848484610b12565b50505050565b6000818152600260205260409020546060906001600160a01b03166106da5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f160408051602081019091526000815290565b90506000815111610711576040518060200160405280600081525061073c565b8061071b84610b45565b60405160200161072c92919061108a565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077882610507565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083583610507565b9050806001600160a01b0316846001600160a01b0316148061087c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108a05750836001600160a01b03166108958461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166108bb82610507565b6001600160a01b03161461091f5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109815760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098c600082610743565b6001600160a01b03831660009081526003602052604081208054600192906109b59084906110cf565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e39084906110e6565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610aa55760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1d8484846108a8565b610b2984848484610c46565b6106555760405162461bcd60e51b8152600401610381906110fe565b606081600003610b6c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b965780610b8081611150565b9150610b8f9050600a8361117f565b9150610b70565b60008167ffffffffffffffff811115610bb157610bb1610eda565b6040519080825280601f01601f191660200182016040528015610bdb576020820181803683370190505b5090505b84156108a057610bf06001836110cf565b9150610bfd600a86611193565b610c089060306110e6565b60f81b818381518110610c1d57610c1d6111a7565b60200101906001600160f81b031916908160001a905350610c3f600a8661117f565b9450610bdf565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8a9033908990889088906004016111bd565b6020604051808303816000875af1925050508015610cc5575060408051601f3d908101601f19168201909252610cc2918101906111fa565b60015b610d22573d808015610cf3576040519150601f19603f3d011682016040523d82523d6000602084013e610cf8565b606091505b508051600003610d1a5760405162461bcd60e51b8152600401610381906110fe565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a0565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073c81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106555750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073c6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073c82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b60208210810361103357634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109c818460208801610d7d565b8351908301906110b0818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e1576110e16110b9565b500390565b600082198211156110f9576110f96110b9565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600060018201611162576111626110b9565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118e5761118e611169565b500490565b6000826111a2576111a2611169565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f090830184610da9565b9695505050505050565b60006020828403121561120c57600080fd5b815161073c81610d4756fea264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4EC JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x507 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x605 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x41E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43A JUMPI POP PUSH2 0x43A DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 PUSH2 0x743 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C5 CALLER DUP3 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x4B6 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x61F CALLER DUP4 DUP4 PUSH2 0xA44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62D CALLER DUP4 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x649 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x655 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB12 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F1 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x711 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73C JUMP JUMPDEST DUP1 PUSH2 0x71B DUP5 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x778 DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP4 PUSH2 0x507 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x87C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x8A0 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x895 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BB DUP3 PUSH2 0x507 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x91F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98C PUSH1 0x0 DUP3 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B5 SWAP1 DUP5 SWAP1 PUSH2 0x10CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E3 SWAP1 DUP5 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1D DUP5 DUP5 DUP5 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0xB29 DUP5 DUP5 DUP5 DUP5 PUSH2 0xC46 JUMP JUMPDEST PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xB6C JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB96 JUMPI DUP1 PUSH2 0xB80 DUP2 PUSH2 0x1150 JUMP JUMPDEST SWAP2 POP PUSH2 0xB8F SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117F JUMP JUMPDEST SWAP2 POP PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB1 JUMPI PUSH2 0xBB1 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDB JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A0 JUMPI PUSH2 0xBF0 PUSH1 0x1 DUP4 PUSH2 0x10CF JUMP JUMPDEST SWAP2 POP PUSH2 0xBFD PUSH1 0xA DUP7 PUSH2 0x1193 JUMP JUMPDEST PUSH2 0xC08 SWAP1 PUSH1 0x30 PUSH2 0x10E6 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1D PUSH2 0x11A7 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3F PUSH1 0xA DUP7 PUSH2 0x117F JUMP JUMPDEST SWAP5 POP PUSH2 0xBDF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8A SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A0 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x655 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73C DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1033 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E1 JUMPI PUSH2 0x10E1 PUSH2 0x10B9 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F9 JUMPI PUSH2 0x10F9 PUSH2 0x10B9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1162 JUMPI PUSH2 0x1162 PUSH2 0x10B9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118E JUMPI PUSH2 0x118E PUSH2 0x1169 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A2 JUMPI PUSH2 0x11A2 PUSH2 0x1169 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F0 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73C DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0x984C0AFE4C4C30 0xA5 EXP BASEFEE EQ 0xD9 PUSH30 0xB5EA4958DF3ED4413EB05499C767A2BF87A864736F6C634300080D003300 ",
							"sourceMap": "628:13658:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;1570:300:2;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;4000:217:2;1528:203:17;3538:401:2;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:17;;;2831:2;2816:18;1929:205:2;2697:177:17;2650:102:2;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:2;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:2;;-1:-1:-1;;;1707:40:2;;:104;;-1:-1:-1;;;;;;;1763:48:2;;-1:-1:-1;;;1763:48:2;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:2;1688:175;1570:300;-1:-1:-1;;1570:300:2:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:2;4095:73;;;;-1:-1:-1;;;4095:73:2;;5358:2:17;4095:73:2;;;5340:21:17;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:17;;;5480:42;5539:19;;4095:73:2;;;;;;;;;-1:-1:-1;4186:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:2;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:2;:2;-1:-1:-1;;;;;3675:11:2;;3667:57;;;;-1:-1:-1;;;3667:57:2;;5771:2:17;3667:57:2;;;5753:21:17;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:17;;;5893:31;5941:19;;3667:57:2;5569:397:17;3667:57:2;719:10:11;-1:-1:-1;;;;;3756:21:2;;;;:62;;-1:-1:-1;3781:37:2;3798:5;719:10:11;4503:162:2;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:2;;6173:2:17;3735:165:2;;;6155:21:17;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3735:165:2;5971:420:17;3735:165:2;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:11;4949:7:2;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:2;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:2;;2324:73;;;;-1:-1:-1;;;2324:73:2;;7016:2:17;2324:73:2;;;6998:21:17;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:17;;;7138:39;7194:19;;2324:73:2;6814:405:17;1929:205:2;2001:7;-1:-1:-1;;;;;2028:19:2;;2020:74;;;;-1:-1:-1;;;2020:74:2;;7426:2:17;2020:74:2;;;7408:21:17;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:17;;;7548:40;7605:19;;2020:74:2;7224:406:17;2020:74:2;-1:-1:-1;;;;;;2111:16:2;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:11;4411:8:2;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:11;5570:7:2;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:2;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:2;2916:76;;;;-1:-1:-1;;;2916:76:2;;7837:2:17;2916:76:2;;;7819:21:17;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:17;;;7959:45;8021:19;;2916:76:2;7635:411:17;2916:76:2;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:2;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:2:o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:2;-1:-1:-1;;;;;11243:29:2;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:2;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:2;7552:73;;;;-1:-1:-1;;;7552:73:2;;8728:2:17;7552:73:2;;;8710:21:17;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:17;;;8850:42;8909:19;;7552:73:2;8526:408:17;7552:73:2;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:2;:7;-1:-1:-1;;;;;7692:16:2;;:52;;;-1:-1:-1;;;;;;4623:25:2;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:2;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:2;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:2:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:2;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:2;;10572:81;;;;-1:-1:-1;;;10572:81:2;;9141:2:17;10572:81:2;;;9123:21:17;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:17;;;9263:35;9315:19;;10572:81:2;8939:401:17;10572:81:2;-1:-1:-1;;;;;10671:16:2;;10663:65;;;;-1:-1:-1;;;10663:65:2;;9547:2:17;10663:65:2;;;9529:21:17;9586:2;9566:18;;;9559:30;9625:34;9605:18;;;9598:62;-1:-1:-1;;;9676:18:17;;;9669:34;9720:19;;10663:65:2;9345:400:17;10663:65:2;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:2;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:2;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:2;-1:-1:-1;;;;;10938:21:2;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:2;:5;-1:-1:-1;;;;;11616:17:2;;11608:55;;;;-1:-1:-1;;;11608:55:2;;10347:2:17;11608:55:2;;;10329:21:17;10386:2;10366:18;;;10359:30;10425:27;10405:18;;;10398:55;10470:18;;11608:55:2;10145:349:17;11608:55:2;-1:-1:-1;;;;;11673:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:2;;;;;;;;;;11734:41;;540::17;;;11734::2;;513:18:17;11734:41:2;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:2;;;;;;;:::i;328:703:13:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:13;;;;;;;;;;;;-1:-1:-1;;;627:10:13;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:13;;-1:-1:-1;773:2:13;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:13;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:13;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:13;;;;;;;;-1:-1:-1;972:11:13;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:2;12485:4;-1:-1:-1;;;;;12505:13:2;;1465:19:10;:23;12501:606:2;;12540:72;;-1:-1:-1;;;12540:72:2;;-1:-1:-1;;;;;12540:36:2;;;;;:72;;719:10:11;;12591:4:2;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:2;;;;;;;;-1:-1:-1;;12540:72:2;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:2;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:2;-1:-1:-1;;;12662:51:2;;-1:-1:-1;12655:58:2;;12501:606;-1:-1:-1;13092:4:2;12335:778;;;;;;:::o;14:131:17:-;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:17;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:17:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:17;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:17;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:17:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9882:125;9922:4;9950:1;9947;9944:8;9941:34;;;9955:18;;:::i;:::-;-1:-1:-1;9992:9:17;;9882:125::o;10012:128::-;10052:3;10083:1;10079:6;10076:1;10073:13;10070:39;;;10089:18;;:::i;:::-;-1:-1:-1;10125:9:17;;10012:128::o;10499:414::-;10701:2;10683:21;;;10740:2;10720:18;;;10713:30;10779:34;10774:2;10759:18;;10752:62;-1:-1:-1;;;10845:2:17;10830:18;;10823:48;10903:3;10888:19;;10499:414::o;10918:135::-;10957:3;10978:17;;;10975:43;;10998:18;;:::i;:::-;-1:-1:-1;11045:1:17;11034:13;;10918:135::o;11058:127::-;11119:10;11114:3;11110:20;11107:1;11100:31;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11190:120;11230:1;11256;11246:35;;11261:18;;:::i;:::-;-1:-1:-1;11295:9:17;;11190:120::o;11315:112::-;11347:1;11373;11363:35;;11378:18;;:::i;:::-;-1:-1:-1;11412:9:17;;11315:112::o;11432:127::-;11493:10;11488:3;11484:20;11481:1;11474:31;11524:4;11521:1;11514:15;11548:4;11545:1;11538:15;11564:489;-1:-1:-1;;;;;11833:15:17;;;11815:34;;11885:15;;11880:2;11865:18;;11858:43;11932:2;11917:18;;11910:34;;;11980:3;11975:2;11960:18;;11953:31;;;11758:4;;12001:46;;12027:19;;12019:6;12001:46;:::i;:::-;11993:54;11564:489;-1:-1:-1;;;;;;11564:489:17:o;12058:249::-;12127:6;12180:2;12168:9;12159:7;12155:23;12151:32;12148:52;;;12196:1;12193;12186:12;12148:52;12228:9;12222:16;12247:30;12271:5;12247:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "937000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2634",
								"getApproved(uint256)": "4737",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2579",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "511",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 17,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 17,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 17
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 14286,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066984c0afe4c4c30a50a4814d97db5ea4958df3ed4413eb05499c767a2bf87a864736f6c634300080d0033",
									".code": [
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 628,
											"end": 14286,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2843,
											"end": 2868,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2831,
											"end": 2833,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2874,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5358,
											"end": 5360,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5340,
											"end": 5361,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5370,
											"end": 5400,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5436,
											"end": 5470,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5416,
											"end": 5434,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5471,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5480,
											"end": 5522,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5849,
											"end": 5883,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5822,
											"end": 5884,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5893,
											"end": 5924,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5941,
											"end": 5960,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5569,
											"end": 5966,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6173,
											"end": 6175,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6155,
											"end": 6176,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6212,
											"end": 6214,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6192,
											"end": 6210,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6185,
											"end": 6215,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6251,
											"end": 6285,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6231,
											"end": 6249,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6224,
											"end": 6286,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6322,
											"end": 6348,
											"name": "PUSH",
											"source": 17,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6302,
											"end": 6320,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6295,
											"end": 6349,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6366,
											"end": 6385,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6366,
											"end": 6385,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5971,
											"end": 6391,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7016,
											"end": 7018,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6998,
											"end": 7019,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7035,
											"end": 7053,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7028,
											"end": 7058,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7094,
											"end": 7128,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7074,
											"end": 7092,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7067,
											"end": 7129,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7138,
											"end": 7177,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6814,
											"end": 7219,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7426,
											"end": 7428,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7408,
											"end": 7429,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7465,
											"end": 7467,
											"name": "PUSH",
											"source": 17,
											"value": "2A"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7445,
											"end": 7463,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7438,
											"end": 7468,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7504,
											"end": 7538,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7484,
											"end": 7502,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7477,
											"end": 7539,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7555,
											"end": 7573,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7548,
											"end": 7588,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7224,
											"end": 7630,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7837,
											"end": 7839,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7819,
											"end": 7840,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "PUSH",
											"source": 17,
											"value": "2F"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7856,
											"end": 7874,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7849,
											"end": 7879,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7915,
											"end": 7949,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7895,
											"end": 7913,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7888,
											"end": 7950,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7959,
											"end": 8004,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8021,
											"end": 8040,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 7635,
											"end": 8046,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3481,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3140,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8728,
											"end": 8730,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8710,
											"end": 8731,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8767,
											"end": 8769,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8740,
											"end": 8770,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8806,
											"end": 8840,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8786,
											"end": 8804,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8779,
											"end": 8841,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8857,
											"end": 8875,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8850,
											"end": 8892,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8909,
											"end": 8928,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8526,
											"end": 8934,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9153,
											"end": 9183,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9219,
											"end": 9253,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9192,
											"end": 9254,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9270,
											"end": 9288,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9263,
											"end": 9298,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9315,
											"end": 9334,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8939,
											"end": 9340,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9547,
											"end": 9549,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9529,
											"end": 9550,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9586,
											"end": 9588,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9566,
											"end": 9584,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9559,
											"end": 9589,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9625,
											"end": 9659,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9598,
											"end": 9660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9676,
											"end": 9694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9669,
											"end": 9703,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9720,
											"end": 9739,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 9345,
											"end": 9745,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10347,
											"end": 10349,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10329,
											"end": 10350,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10386,
											"end": 10388,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10359,
											"end": 10389,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10425,
											"end": 10452,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10405,
											"end": 10423,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10398,
											"end": 10453,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10470,
											"end": 10488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10145,
											"end": 10494,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2307,
											"end": 2316,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2294,
											"end": 2317,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2290,
											"end": 2322,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2335,
											"end": 2336,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2333,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2325,
											"end": 2337,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 2287,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2348,
											"end": 2387,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2429,
											"end": 2438,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2425,
											"end": 2443,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 2406,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2396,
											"end": 2444,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2463,
											"end": 2495,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2173,
											"end": 2501,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 2506,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2565,
											"end": 2571,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2620,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2593,
											"end": 2616,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2589,
											"end": 2621,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2631,
											"end": 2632,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2624,
											"end": 2636,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 2586,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 2657,
											"end": 2686,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2958,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2993,
											"end": 3002,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2984,
											"end": 2991,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2980,
											"end": 3003,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2976,
											"end": 3008,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3018,
											"end": 3019,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3011,
											"end": 3023,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 2973,
											"end": 3025,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 3063,
											"end": 3072,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 3044,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3034,
											"end": 3073,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3123,
											"end": 3125,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3112,
											"end": 3121,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3108,
											"end": 3126,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3095,
											"end": 3127,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3163,
											"end": 3176,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3156,
											"end": 3177,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3149,
											"end": 3154,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3146,
											"end": 3178,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3182,
											"end": 3194,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 3136,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3215,
											"end": 3220,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3205,
											"end": 3220,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2879,
											"end": 3226,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 3231,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3292,
											"end": 3302,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 3287,
											"end": 3290,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3283,
											"end": 3303,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3273,
											"end": 3304,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3323,
											"end": 3327,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3320,
											"end": 3321,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3313,
											"end": 3328,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3351,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3344,
											"end": 3345,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3337,
											"end": 3352,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3458,
											"end": 3464,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3466,
											"end": 3472,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3474,
											"end": 3480,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3488,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3514,
											"end": 3521,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3506,
											"end": 3539,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 3503,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 3594,
											"end": 3603,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 3575,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3565,
											"end": 3604,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 3657,
											"end": 3659,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3655,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3642,
											"end": 3660,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 3623,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3613,
											"end": 3661,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3708,
											"end": 3710,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3711,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3680,
											"end": 3712,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3670,
											"end": 3712,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3763,
											"end": 3765,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3752,
											"end": 3761,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3748,
											"end": 3766,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3735,
											"end": 3767,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3786,
											"end": 3804,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3819,
											"end": 3825,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3816,
											"end": 3830,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3843,
											"end": 3844,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3845,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 3813,
											"end": 3847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3881,
											"end": 3887,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3870,
											"end": 3879,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3866,
											"end": 3888,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3856,
											"end": 3888,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3919,
											"end": 3923,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3915,
											"end": 3917,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3911,
											"end": 3924,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3907,
											"end": 3934,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3946,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3938,
											"end": 3950,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 3897,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3984,
											"end": 3986,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3971,
											"end": 3987,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4002,
											"end": 4004,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3999,
											"end": 4009,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 3996,
											"end": 4032,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 4012,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4087,
											"end": 4089,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4081,
											"end": 4090,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4141,
											"end": 4154,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4137,
											"end": 4159,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4161,
											"end": 4163,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 4133,
											"end": 4164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4129,
											"end": 4169,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4117,
											"end": 4170,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4185,
											"end": 4203,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4205,
											"end": 4227,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4182,
											"end": 4228,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 4179,
											"end": 4251,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 4231,
											"end": 4249,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4271,
											"end": 4281,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4267,
											"end": 4269,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4306,
											"end": 4308,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4298,
											"end": 4304,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4291,
											"end": 4309,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4346,
											"end": 4353,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 4341,
											"end": 4343,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4336,
											"end": 4338,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4328,
											"end": 4339,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4324,
											"end": 4344,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4321,
											"end": 4354,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4367,
											"end": 4368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4364,
											"end": 4365,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4357,
											"end": 4369,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 4318,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4414,
											"end": 4416,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4410,
											"end": 4421,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4405,
											"end": 4407,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4393,
											"end": 4408,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4426,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 4468,
											"end": 4469,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4450,
											"end": 4456,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4442,
											"end": 4466,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4435,
											"end": 4470,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4489,
											"end": 4495,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 4501,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4574,
											"end": 4580,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4588,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4635,
											"end": 4637,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4614,
											"end": 4621,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4610,
											"end": 4633,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4606,
											"end": 4638,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4651,
											"end": 4652,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4648,
											"end": 4649,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4641,
											"end": 4653,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 4603,
											"end": 4655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 4693,
											"end": 4702,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 4674,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4664,
											"end": 4703,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4756,
											"end": 4758,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4745,
											"end": 4754,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4741,
											"end": 4759,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 4722,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4712,
											"end": 4760,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4506,
											"end": 4766,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 4846,
											"end": 4858,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4893,
											"end": 4905,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 4960,
											"end": 4966,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4956,
											"end": 4973,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4973,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 4914,
											"end": 4975,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5010,
											"end": 5024,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4990,
											"end": 5008,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4987,
											"end": 5025,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5067,
											"end": 5077,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 5062,
											"end": 5065,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5058,
											"end": 5078,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5079,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 5099,
											"end": 5100,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5107,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5130,
											"end": 5134,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 5127,
											"end": 5128,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5135,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4984,
											"end": 5145,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4771,
											"end": 5151,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6598,
											"end": 6600,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6580,
											"end": 6601,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6617,
											"end": 6635,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6610,
											"end": 6640,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6676,
											"end": 6710,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 6671,
											"end": 6673,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6649,
											"end": 6711,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6742,
											"end": 6744,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6727,
											"end": 6745,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6720,
											"end": 6767,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6799,
											"end": 6802,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6784,
											"end": 6803,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6396,
											"end": 6809,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8230,
											"end": 8233,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8268,
											"end": 8274,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8262,
											"end": 8275,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 8330,
											"end": 8336,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8325,
											"end": 8328,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8318,
											"end": 8322,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8306,
											"end": 8323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "tag",
											"source": 17,
											"value": "318"
										},
										{
											"begin": 8284,
											"end": 8337,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 8400,
											"end": 8413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8359,
											"end": 8375,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8456,
											"end": 8460,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8444,
											"end": 8461,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "tag",
											"source": 17,
											"value": "319"
										},
										{
											"begin": 8422,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8495,
											"end": 8515,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8051,
											"end": 8521,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9750,
											"end": 9877,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 9750,
											"end": 9877,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9811,
											"end": 9821,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 9806,
											"end": 9809,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 9802,
											"end": 9822,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9799,
											"end": 9800,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9823,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9842,
											"end": 9846,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9832,
											"end": 9847,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9866,
											"end": 9870,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9863,
											"end": 9864,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9856,
											"end": 9871,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9922,
											"end": 9926,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9950,
											"end": 9951,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9944,
											"end": 9952,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 9941,
											"end": 9975,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9992,
											"end": 10001,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9882,
											"end": 10007,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10052,
											"end": 10055,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10084,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10079,
											"end": 10085,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 10076,
											"end": 10077,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10073,
											"end": 10086,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 10070,
											"end": 10109,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 10089,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10125,
											"end": 10134,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10012,
											"end": 10140,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10701,
											"end": 10703,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10683,
											"end": 10704,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10740,
											"end": 10742,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10713,
											"end": 10743,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 10774,
											"end": 10776,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10759,
											"end": 10777,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10759,
											"end": 10777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10752,
											"end": 10814,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10845,
											"end": 10847,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10830,
											"end": 10848,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10830,
											"end": 10848,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10823,
											"end": 10871,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10903,
											"end": 10906,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10888,
											"end": 10907,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10499,
											"end": 10913,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10975,
											"end": 11018,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 10975,
											"end": 11018,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 11034,
											"end": 11047,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11034,
											"end": 11047,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10918,
											"end": 11053,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11058,
											"end": 11185,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 11058,
											"end": 11185,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11119,
											"end": 11129,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 11114,
											"end": 11117,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 11110,
											"end": 11130,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11131,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11150,
											"end": 11154,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 11147,
											"end": 11148,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11140,
											"end": 11155,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11174,
											"end": 11178,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11171,
											"end": 11172,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11164,
											"end": 11179,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11230,
											"end": 11231,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11256,
											"end": 11257,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11246,
											"end": 11281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 11246,
											"end": 11281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 11261,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 11295,
											"end": 11304,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11190,
											"end": 11310,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "tag",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11347,
											"end": 11348,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11373,
											"end": 11374,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11363,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 11363,
											"end": 11398,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "tag",
											"source": 17,
											"value": "341"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "MOD",
											"source": 17
										},
										{
											"begin": 11412,
											"end": 11421,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11315,
											"end": 11427,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11432,
											"end": 11559,
											"name": "tag",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 11432,
											"end": 11559,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11493,
											"end": 11503,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 11488,
											"end": 11491,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 11484,
											"end": 11504,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11481,
											"end": 11482,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11474,
											"end": 11505,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11524,
											"end": 11528,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 11521,
											"end": 11522,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11514,
											"end": 11529,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11548,
											"end": 11552,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11545,
											"end": 11546,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11538,
											"end": 11553,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11833,
											"end": 11848,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11815,
											"end": 11849,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11815,
											"end": 11849,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11885,
											"end": 11900,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11885,
											"end": 11900,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 11880,
											"end": 11882,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11865,
											"end": 11883,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11858,
											"end": 11901,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11932,
											"end": 11934,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11917,
											"end": 11935,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11910,
											"end": 11944,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11980,
											"end": 11983,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 11975,
											"end": 11977,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11960,
											"end": 11978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11953,
											"end": 11984,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11762,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12027,
											"end": 12046,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12027,
											"end": 12046,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12019,
											"end": 12025,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 12001,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11993,
											"end": 12047,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11564,
											"end": 12053,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 12058,
											"end": 12307,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 12058,
											"end": 12307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12127,
											"end": 12133,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12180,
											"end": 12182,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12168,
											"end": 12177,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12159,
											"end": 12166,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12155,
											"end": 12178,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12151,
											"end": 12183,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12193,
											"end": 12194,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12186,
											"end": 12198,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 12148,
											"end": 12200,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12228,
											"end": 12237,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12222,
											"end": 12238,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 12271,
											"end": 12276,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 12247,
											"end": 12277,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 224,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 228,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 232,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 224,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 228,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 232,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 224,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 228,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 232,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1241,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1245,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1248,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1252,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 224,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 228,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 232,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1577,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xB6 DUP6 GAS 0xC 0xDB PUSH6 0x9A00FCFB006F CALLDATALOAD PUSH30 0x80D93600BB5F6A81EF38DD14809E754DA964736F6C634300080D00330000 ",
							"sourceMap": "194:8061:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0xB6 DUP6 GAS 0xC 0xDB PUSH6 0x9A00FCFB006F CALLDATALOAD PUSH30 0x80D93600BB5F6A81EF38DD14809E754DA964736F6C634300080D00330000 ",
							"sourceMap": "194:8061:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122093b6855a0cdb659a00fcfb006f357d80d93600bb5f6a81ef38dd14809e754da964736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b1f03e0f68a3904bf1c680943ca5062e0ae647e15bc4cb2564ad1e53a4f1c8764736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b1f03e0f68a3904bf1c680943ca5062e0ae647e15bc4cb2564ad1e53a4f1c8764736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x1F SUB 0xE0 0xF6 DUP11 CODECOPY DIV 0xBF SHR PUSH9 0x943CA5062E0AE647E ISZERO 0xBC 0x4C 0xB2 JUMP 0x4A 0xD1 0xE5 GASPRICE 0x4F SHR DUP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209b1f03e0f68a3904bf1c680943ca5062e0ae647e15bc4cb2564ad1e53a4f1c8764736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x1F SUB 0xE0 0xF6 DUP11 CODECOPY DIV 0xBF SHR PUSH9 0x943CA5062E0AE647E ISZERO 0xBC 0x4C 0xB2 JUMP 0x4A 0xD1 0xE5 GASPRICE 0x4F SHR DUP8 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b1f03e0f68a3904bf1c680943ca5062e0ae647e15bc4cb2564ad1e53a4f1c8764736f6c634300080d0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE DUP15 PUSH26 0x6DF3678A252927D61FA1AC9C2D4A06755791BC1015400802F5A3 0x21 BLOCKHASH LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "146:1885:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE DUP15 PUSH26 0x6DF3678A252927D61FA1AC9C2D4A06755791BC1015400802F5A3 0x21 BLOCKHASH LOG4 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "146:1885:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be8e796df3678a252927d61fa1ac9c2d4a06755791bc1015400802f5a32140a464736f6c634300080d0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/TribalpunkNFT.sol": {
				"TribalpunkNFT": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_holder",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "heroId",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "externalId",
									"type": "string"
								}
							],
							"name": "NFTMinted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holder",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "mintedHeroIds",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "heroId",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "externalId",
									"type": "string"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newHolder",
									"type": "address"
								}
							],
							"name": "setHolder",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":513:2757  contract TribalpunkNFT is... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":944:1113  constructor(address _holder) ERC721(\"TribalpunkNFT\", \"TribalpunkNFT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x0d\n  dup1\n  dup3\n  mstore\n  shl(0x9a, 0x151c9a58985b1c1d5b9ad39195)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  dup2\n  mstore\n  dup6\n  mload\n  dup1\n  dup8\n  add\n  swap1\n  swap7\n  mstore\n  swap3\n  dup6\n  mstore\n  dup5\n  add\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  dup2\n  mload\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  swap2\n  swap3\n  swap2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  tag_9\n  swap2\n  0x00\n  swap2\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  dup1\n  mload\n  tag_11\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:988  _paused */\n  0x0b\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_14\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_17\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_14:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1032:1053  _holder != address(0) */\n  dup2\n  and\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1024:1080  require(_holder != address(0), \"Invalid holder address\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":511:513   */\n  0x20\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1024:1080  require(_holder != address(0), \"Invalid holder address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":493:514   */\n  mstore\n    /* \"#utility.yul\":550:552   */\n  0x16\n    /* \"#utility.yul\":530:548   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":523:553   */\n  mstore\n    /* \"#utility.yul\":589:613   */\n  0x496e76616c696420686f6c646572206164647265737300000000000000000000\n    /* \"#utility.yul\":569:587   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":562:614   */\n  mstore\n    /* \"#utility.yul\":631:649   */\n  0x64\n  add\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1024:1080  require(_holder != address(0), \"Invalid holder address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1090:1096  holder */\n  0x0e\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1090:1106  holder = _holder */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":513:2757  contract TribalpunkNFT is... */\n  jump(tag_36)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_17:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x0b\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":513:2757  contract TribalpunkNFT is... */\ntag_10:\n  dup3\n  dup1\n  sload\n  tag_25\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_28\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_31)\ntag_28:\n  dup3\n  0x1f\n  lt\n  tag_29\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_31)\ntag_29:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_31\n  jumpi\n  swap2\n  dup3\n  add\ntag_30:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_31\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_30)\ntag_31:\n  pop\n  tag_32\n  swap3\n  swap2\n  pop\n  tag_33\n  jump\t// in\ntag_32:\n  pop\n  swap1\n  jump\t// out\ntag_33:\ntag_34:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_32\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_34)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_38:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_39:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":660:1040   */\ntag_26:\n    /* \"#utility.yul\":739:740   */\n  0x01\n    /* \"#utility.yul\":735:747   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":782:794   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":803:864   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":857:861   */\n  0x7f\n    /* \"#utility.yul\":849:855   */\n  dup3\n    /* \"#utility.yul\":845:862   */\n  and\n    /* \"#utility.yul\":835:862   */\n  swap2\n  pop\n    /* \"#utility.yul\":803:864   */\ntag_42:\n    /* \"#utility.yul\":910:912   */\n  0x20\n    /* \"#utility.yul\":902:908   */\n  dup3\n    /* \"#utility.yul\":899:913   */\n  lt\n    /* \"#utility.yul\":879:897   */\n  dup2\n    /* \"#utility.yul\":876:914   */\n  sub\n    /* \"#utility.yul\":873:1034   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":956:966   */\n  0x4e487b71\n    /* \"#utility.yul\":951:954   */\n  0xe0\n    /* \"#utility.yul\":947:967   */\n  shl\n    /* \"#utility.yul\":944:945   */\n  0x00\n    /* \"#utility.yul\":937:968   */\n  mstore\n    /* \"#utility.yul\":991:995   */\n  0x22\n    /* \"#utility.yul\":988:989   */\n  0x04\n    /* \"#utility.yul\":981:996   */\n  mstore\n    /* \"#utility.yul\":1019:1023   */\n  0x24\n    /* \"#utility.yul\":1016:1017   */\n  0x00\n    /* \"#utility.yul\":1009:1024   */\n  revert\n    /* \"#utility.yul\":873:1034   */\ntag_43:\n  pop\n    /* \"#utility.yul\":660:1040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_36:\n    /* \"contracts/NFTContract3/TribalpunkNFT.sol\":513:2757  contract TribalpunkNFT is... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":513:2757  contract TribalpunkNFT is... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd979f5aa\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd979f5aa\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xe534155d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xa22cb465\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x7c90b182\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x7c90b182\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x6352211e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x2f745c59\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x42966c68\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4f6ccce7\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4fa1f7ae\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x2f745c59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2550:2755  function supportsInterface(bytes4 interfaceId)... */\n    tag_3:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":565:579   */\n      swap1\n      iszero\n        /* \"#utility.yul\":558:580   */\n      iszero\n        /* \"#utility.yul\":540:581   */\n      dup2\n      mstore\n        /* \"#utility.yul\":528:530   */\n      0x20\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2550:2755  function supportsInterface(bytes4 interfaceId)... */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_40\n        /* \"#utility.yul\":1528:1731   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1712  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1719  _allTokens.length */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_56:\n      mload(0x40)\n        /* \"#utility.yul\":2319:2344   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2307:2309   */\n      0x20\n        /* \"#utility.yul\":2292:2310   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_40\n        /* \"#utility.yul\":2173:2350   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_8:\n      tag_52\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1291:1544  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_56\n      tag_65\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1184:1247  function unpause() public onlyOwner {... */\n    tag_10:\n      tag_52\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_11:\n      tag_52\n      tag_71\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":529:770  function burn(uint256 tokenId) public virtual {... */\n    tag_12:\n      tag_52\n      tag_74\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1798:2028  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_56\n      tag_77\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1420:1913  function safeMint(string memory heroId, string memory externalId)... */\n    tag_14:\n      tag_52\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x0b))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      jump(tag_36)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_16:\n      tag_46\n      tag_88\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_56\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_52\n      tag_97\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":735:779  mapping(string => bool) public mintedHeroIds */\n    tag_19:\n      tag_36\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x0d\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1119:1178  function pause() public onlyOwner {... */\n    tag_20:\n      tag_52\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_46)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_22:\n      tag_42\n      tag_109\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_23:\n      tag_52\n      tag_112\n      calldatasize\n      0x04\n      tag_113\n      jump\t// in\n    tag_112:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_24:\n      tag_52\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2355:2544  function tokenURI(uint256 tokenId)... */\n    tag_25:\n      tag_42\n      tag_120\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_120:\n      tag_121\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1253:1414  function setHolder(address _newHolder) public onlyOwner {... */\n    tag_26:\n      tag_52\n      tag_124\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":785:806  address public holder */\n    tag_27:\n      sload(0x0e)\n      tag_46\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_28:\n      tag_36\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_52\n      tag_135\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2550:2755  function supportsInterface(bytes4 interfaceId)... */\n    tag_39:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2685:2689  bool */\n      0x00\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2712:2748  super.supportsInterface(interfaceId) */\n      tag_138\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2736:2747  interfaceId */\n      dup3\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2712:2735  super.supportsInterface */\n      tag_139\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2712:2748  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2705:2748  return super.supportsInterface(interfaceId) */\n      swap3\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2550:2755  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2542:2555  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2574:2579  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2567:2579  return _name */\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_142\n      jump\t// in\n    tag_143:\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_145\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_144)\n    tag_145:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_146:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_146\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2488:2586  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4076:4083  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4103:4119  _exists(tokenId) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4111:4118  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4103:4110  _exists */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4103:4119  _exists(tokenId) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6626:6628   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6608:6629   */\n      mstore\n        /* \"#utility.yul\":6665:6667   */\n      0x2c\n        /* \"#utility.yul\":6645:6663   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6638:6668   */\n      mstore\n        /* \"#utility.yul\":6704:6738   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":6684:6702   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6677:6739   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":6755:6773   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6748:6790   */\n      mstore\n        /* \"#utility.yul\":6807:6826   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4095:4168  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4201  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4186:4210  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4000:4217  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3631  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3649:3656  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3648  ERC721.ownerOf */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3634:3657  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3618:3657  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3681:3686  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3677  to */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3675:3686  to != owner */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7039:7041   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7021:7042   */\n      mstore\n        /* \"#utility.yul\":7078:7080   */\n      0x21\n        /* \"#utility.yul\":7058:7076   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7051:7081   */\n      mstore\n        /* \"#utility.yul\":7117:7151   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":7097:7115   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7090:7152   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":7168:7186   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7161:7192   */\n      mstore\n        /* \"#utility.yul\":7209:7228   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_151\n        /* \"#utility.yul\":6837:7234   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3667:3724  require(to != owner, \"ERC721: approval to current owner\") */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3777  _msgSender() == owner */\n      dup3\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3756:3818  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      tag_161\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3798:3803  owner */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4503:4665  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_130\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3781:3818  isApprovedForAll(owner, _msgSender()) */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7441:7443   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7423:7444   */\n      mstore\n        /* \"#utility.yul\":7480:7482   */\n      0x38\n        /* \"#utility.yul\":7460:7478   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7453:7483   */\n      mstore\n        /* \"#utility.yul\":7519:7553   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":7499:7517   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7492:7554   */\n      mstore\n        /* \"#utility.yul\":7590:7616   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":7570:7588   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7563:7617   */\n      mstore\n        /* \"#utility.yul\":7634:7653   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n      tag_151\n        /* \"#utility.yul\":7239:7659   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3735:3900  require(... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3920:3922  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3924:3931  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3919  _approve */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3911:3932  _approve(to, tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4727:5057  function transferFrom(... */\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_170\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4935:4947  _msgSender() */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4949:4956  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4934  _isApprovedOrOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4916:4957  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4908:5011  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_175\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5032:5036  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5038:5040  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5042:5049  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5031  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5022:5050  _transfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1291:1544  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1388:1395  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1423:1446  ERC721.balanceOf(owner) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1440:1445  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1423:1439  ERC721.balanceOf */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1423:1446  ERC721.balanceOf(owner) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1415:1420  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1415:1446  index < ERC721.balanceOf(owner) */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8284:8286   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8266:8287   */\n      mstore\n        /* \"#utility.yul\":8323:8325   */\n      0x2b\n        /* \"#utility.yul\":8303:8321   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8296:8326   */\n      mstore\n        /* \"#utility.yul\":8362:8396   */\n      0x455243373231456e756d657261626c653a206f776e657220696e646578206f75\n        /* \"#utility.yul\":8342:8360   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8335:8397   */\n      mstore\n      shl(0xa8, 0x74206f6620626f756e6473)\n        /* \"#utility.yul\":8413:8431   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8406:8447   */\n      mstore\n        /* \"#utility.yul\":8464:8483   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n      tag_151\n        /* \"#utility.yul\":8082:8489   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1407:1494  require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\") */\n    tag_180:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1530  _ownedTokens[owner] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1523  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1530  _ownedTokens[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1511:1537  _ownedTokens[owner][index] */\n      swap4\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1291:1544  function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1184:1247  function unpause() public onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_186\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_188\n      jump\t// in\n    tag_186:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1230:1240  _unpause() */\n      tag_190\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1230:1238  _unpause */\n      tag_191\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1230:1240  _unpause() */\n      jump\t// in\n    tag_190:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1184:1247  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5123:5302  function safeTransferFrom(... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5273:5277  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5279:5281  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5283:5290  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5272  safeTransferFrom */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5256:5295  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":529:770  function burn(uint256 tokenId) public virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":645:686  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_195\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":664:676  _msgSender() */\n      tag_171\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":645:686  _isApprovedOrOwner(_msgSender(), tokenId) */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9057:9059   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9039:9060   */\n      mstore\n        /* \"#utility.yul\":9096:9098   */\n      0x30\n        /* \"#utility.yul\":9076:9094   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9069:9099   */\n      mstore\n        /* \"#utility.yul\":9135:9169   */\n      0x4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":9115:9133   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9108:9170   */\n      mstore\n      shl(0x82, 0x1b995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9186:9204   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9179:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9261   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n      tag_151\n        /* \"#utility.yul\":8855:9267   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":637:739  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\") */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":749:763  _burn(tokenId) */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":755:762  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":749:754  _burn */\n      tag_201\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":749:763  _burn(tokenId) */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":529:770  function burn(uint256 tokenId) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1798:2028  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1873:1880  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1908:1938  ERC721Enumerable.totalSupply() */\n      tag_203\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1712  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1702:1719  _allTokens.length */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1615:1726  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1908:1938  ERC721Enumerable.totalSupply() */\n    tag_203:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1900:1905  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1900:1938  index < ERC721Enumerable.totalSupply() */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9474:9476   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9456:9477   */\n      mstore\n        /* \"#utility.yul\":9513:9515   */\n      0x2c\n        /* \"#utility.yul\":9493:9511   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9486:9516   */\n      mstore\n        /* \"#utility.yul\":9552:9586   */\n      0x455243373231456e756d657261626c653a20676c6f62616c20696e646578206f\n        /* \"#utility.yul\":9532:9550   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9525:9587   */\n      mstore\n      shl(0xa0, 0x7574206f6620626f756e6473)\n        /* \"#utility.yul\":9603:9621   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9596:9638   */\n      mstore\n        /* \"#utility.yul\":9655:9674   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n      tag_151\n        /* \"#utility.yul\":9272:9680   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1892:1987  require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\") */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2004:2014  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2015:2020  index */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2004:2021  _allTokens[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_208\n      jumpi\n      tag_208\n      tag_209\n      jump\t// in\n    tag_208:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1997:2021  return _allTokens[index] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1798:2028  function tokenByIndex(uint256 index) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1420:1913  function safeMint(string memory heroId, string memory externalId)... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_188\n      jump\t// in\n    tag_214:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1555:1568  mintedHeroIds */\n      0x0d\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1569:1575  heroId */\n      dup3\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1555:1576  mintedHeroIds[heroId] */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1554:1576  !mintedHeroIds[heroId] */\n      iszero\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1533:1640  require(... */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10300:10302   */\n      0x20\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1533:1640  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10282:10303   */\n      mstore\n        /* \"#utility.yul\":10339:10341   */\n      0x26\n        /* \"#utility.yul\":10319:10337   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10312:10342   */\n      mstore\n        /* \"#utility.yul\":10378:10412   */\n      0x54726962616c70756e6b4e46543a206865726f20616c72656164792077617320\n        /* \"#utility.yul\":10358:10376   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10351:10413   */\n      mstore\n      shl(0xd2, 0x1b5a5b9d1959)\n        /* \"#utility.yul\":10429:10447   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10422:10458   */\n      mstore\n        /* \"#utility.yul\":10475:10494   */\n      0x84\n      add\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1533:1640  require(... */\n      tag_151\n        /* \"#utility.yul\":10098:10500   */\n      jump\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1533:1640  require(... */\n    tag_219:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1651:1666  uint256 tokenId */\n      0x00\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1669:1694  _tokenIdCounter.current() */\n      tag_222\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1669:1684  _tokenIdCounter */\n      0x0c\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1669:1694  _tokenIdCounter.current() */\n    tag_222:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1651:1694  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1704:1731  _tokenIdCounter.increment() */\n      tag_224\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1704:1719  _tokenIdCounter */\n      0x0c\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1704:1731  _tokenIdCounter.increment() */\n    tag_224:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1751:1757  holder */\n      sload(0x0e)\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1741:1767  _safeMint(holder, tokenId) */\n      tag_226\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1751:1757  holder */\n      and\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1759:1766  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1741:1750  _safeMint */\n      tag_227\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1741:1767  _safeMint(holder, tokenId) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1777:1806  _setTokenURI(tokenId, heroId) */\n      tag_228\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1790:1797  tokenId */\n      dup2\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1799:1805  heroId */\n      dup5\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1777:1789  _setTokenURI */\n      tag_229\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1777:1806  _setTokenURI(tokenId, heroId) */\n      jump\t// in\n    tag_228:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1840:1844  true */\n      0x01\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1816:1829  mintedHeroIds */\n      0x0d\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1830:1836  heroId */\n      dup5\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1816:1837  mintedHeroIds[heroId] */\n      mload(0x40)\n      tag_230\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_230:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1816:1844  mintedHeroIds[heroId] = true */\n      dup1\n      sload\n      swap3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1879:1885  holder */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n      swap1\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1860:1906  NFTMinted(tokenId, holder, heroId, externalId) */\n      0x0372de3fa001ec655fcb2f8096e13cb1f68d1b8b9bb9d2674fc7d880de7e8045\n      swap1\n      tag_231\n      swap1\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1870:1877  tokenId */\n      dup5\n      swap1\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1887:1893  heroId */\n      dup8\n      swap1\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1895:1905  externalId */\n      dup8\n      swap1\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1860:1906  NFTMinted(tokenId, holder, heroId, externalId) */\n      tag_232\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1523:1913  {... */\n      pop\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1420:1913  function safeMint(string memory heroId, string memory externalId)... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2191:2426  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2263:2270  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2305  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2298:2314  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11166:11168   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11148:11169   */\n      mstore\n        /* \"#utility.yul\":11205:11207   */\n      0x29\n        /* \"#utility.yul\":11185:11203   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11178:11208   */\n      mstore\n        /* \"#utility.yul\":11244:11278   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":11224:11242   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11217:11279   */\n      mstore\n      shl(0xb9, 0x32b73a103a37b5b2b7)\n        /* \"#utility.yul\":11295:11313   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11288:11327   */\n      mstore\n        /* \"#utility.yul\":11344:11363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2324:2397  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_151\n        /* \"#utility.yul\":10964:11369   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2008  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2028:2047  owner != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11576:11578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11558:11579   */\n      mstore\n        /* \"#utility.yul\":11615:11617   */\n      0x2a\n        /* \"#utility.yul\":11595:11613   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11588:11618   */\n      mstore\n        /* \"#utility.yul\":11654:11688   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":11634:11652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11627:11689   */\n      mstore\n      shl(0xb0, 0x726f2061646472657373)\n        /* \"#utility.yul\":11705:11723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11698:11738   */\n      mstore\n        /* \"#utility.yul\":11755:11774   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_151\n        /* \"#utility.yul\":11374:11780   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2020:2094  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n    tag_239:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2120  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2111:2127  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2134  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_188\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1119:1178  function pause() public onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_188\n      jump\t// in\n    tag_253:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1163:1171  _pause() */\n      tag_190\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1163:1169  _pause */\n      tag_257\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1163:1171  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2650:2752  function symbol() public view virtual override returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2706:2719  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2745  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2731:2745  return _symbol */\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_266\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4411:4419  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4421:4429  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4396  _setApprovalForAll */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4378:4430  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_270\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5570:5577  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5555  _isApprovedOrOwner */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5537:5578  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5529:5632  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_175\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      tag_274\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5656:5660  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5662:5664  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5666:5673  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5675:5680  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5655  _safeTransfer */\n      tag_275\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5642:5681  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5368:5688  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2355:2544  function tokenURI(uint256 tokenId)... */\n    tag_121:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2478:2491  string memory */\n      0x60\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2514:2537  super.tokenURI(tokenId) */\n      tag_138\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2529:2536  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2514:2528  super.tokenURI */\n      tag_278\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2514:2537  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1253:1414  function setHolder(address _newHolder) public onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_188\n      jump\t// in\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1327:1351  _newHolder != address(0) */\n      dup2\n      and\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1319:1378  require(_newHolder != address(0), \"Invalid holder address\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11987:11989   */\n      0x20\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1319:1378  require(_newHolder != address(0), \"Invalid holder address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11969:11990   */\n      mstore\n        /* \"#utility.yul\":12026:12028   */\n      0x16\n        /* \"#utility.yul\":12006:12024   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11999:12029   */\n      mstore\n      shl(0x50, 0x496e76616c696420686f6c6465722061646472657373)\n        /* \"#utility.yul\":12045:12063   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12038:12090   */\n      mstore\n        /* \"#utility.yul\":12107:12125   */\n      0x64\n      add\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1319:1378  require(_newHolder != address(0), \"Invalid holder address\") */\n      tag_151\n        /* \"#utility.yul\":11785:12131   */\n      jump\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1319:1378  require(_newHolder != address(0), \"Invalid holder address\") */\n    tag_285:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1388:1394  holder */\n      0x0e\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1388:1407  holder = _newHolder */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1253:1414  function setHolder(address _newHolder) public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_188\n      jump\t// in\n    tag_292:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12338:12340   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12320:12341   */\n      mstore\n        /* \"#utility.yul\":12377:12379   */\n      0x26\n        /* \"#utility.yul\":12357:12375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12350:12380   */\n      mstore\n        /* \"#utility.yul\":12416:12450   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12396:12414   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12389:12451   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":12467:12485   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12460:12496   */\n      mstore\n        /* \"#utility.yul\":12513:12532   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_151\n        /* \"#utility.yul\":12136:12538   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":990:1212  function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1092:1096  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1115:1165  interfaceId == type(IERC721Enumerable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x780e9d63)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1115:1205  interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_138\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1169:1205  super.supportsInterface(interfaceId) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1193:1204  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1169:1192  super.supportsInterface */\n      tag_302\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":1169:1205  super.supportsInterface(interfaceId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7160:7285  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7225:7229  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7255  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7264  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7278  _owners[tokenId] != address(0) */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7160:7285  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11258  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11272  _tokenApprovals[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup2\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      tag_306\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11243:11267  _tokenApprovals[tokenId] */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11310  ERC721.ownerOf */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11296:11319  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_306:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11287:11333  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11169:11340  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7536:7540  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7560:7576  _exists(tokenId) */\n      tag_308\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7568:7575  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7560:7567  _exists */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7560:7576  _exists(tokenId) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_309\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12745:12747   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12727:12748   */\n      mstore\n        /* \"#utility.yul\":12784:12786   */\n      0x2c\n        /* \"#utility.yul\":12764:12782   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12757:12787   */\n      mstore\n        /* \"#utility.yul\":12823:12857   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":12803:12821   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12796:12858   */\n      mstore\n      shl(0xa1, 0x34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":12874:12892   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12867:12909   */\n      mstore\n        /* \"#utility.yul\":12926:12945   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_151\n        /* \"#utility.yul\":12543:12951   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7552:7625  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7648  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      tag_312\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7666:7673  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7665  ERC721.ownerOf */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7651:7674  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7635:7674  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7703:7708  owner */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7699  spender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7708  spender == owner */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7744  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_314\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      dup1\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4600:4604  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4641  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4648  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4623:4658  _operatorApprovals[owner][operator] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7712:7744  isApprovedForAll(owner, spender) */\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_315\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7772:7779  spender */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7760:7767  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7759  getApproved */\n      tag_49\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7768  getApproved(tokenId) */\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7748:7779  getApproved(tokenId) == spender */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7692:7779  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7684:7780  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7443:7787  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10453:11058  function _transfer(... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10607:10611  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      tag_318\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10595:10602  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10594  ERC721.ownerOf */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10603  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_318:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10580:10611  ERC721.ownerOf(tokenId) == from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13158:13160   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13140:13161   */\n      mstore\n        /* \"#utility.yul\":13197:13199   */\n      0x25\n        /* \"#utility.yul\":13177:13195   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13170:13200   */\n      mstore\n        /* \"#utility.yul\":13236:13270   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":13216:13234   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13209:13271   */\n      mstore\n      shl(0xd9, 0x37bbb732b9)\n        /* \"#utility.yul\":13287:13305   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13280:13315   */\n      mstore\n        /* \"#utility.yul\":13332:13351   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_151\n        /* \"#utility.yul\":12956:13357   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10572:10653  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n    tag_319:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10671:10687  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_322\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13564:13566   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13546:13567   */\n      mstore\n        /* \"#utility.yul\":13603:13605   */\n      0x24\n        /* \"#utility.yul\":13583:13601   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13576:13606   */\n      mstore\n        /* \"#utility.yul\":13642:13676   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":13622:13640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13615:13677   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":13693:13711   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13686:13720   */\n      mstore\n        /* \"#utility.yul\":13737:13756   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_151\n        /* \"#utility.yul\":13362:13762   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10663:10728  require(to != address(0), \"ERC721: transfer to the zero address\") */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10739:10778  _beforeTokenTransfer(from, to, tokenId) */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10760:10764  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10766:10768  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10770:10777  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10739:10759  _beforeTokenTransfer */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10739:10778  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      tag_327\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10857:10858  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10861:10868  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10848  _approve */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10840:10869  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10889  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10895  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_328\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10899:10900  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10880:10900  _balances[from] -= 1 */\n      tag_329\n      jump\t// in\n    tag_328:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10919  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10923  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_330\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10927:10928  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10910:10928  _balances[to] += 1 */\n      tag_331\n      jump\t// in\n    tag_330:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10945  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10959  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10938:10954  _owners[tokenId] */\n      dup5\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10975:11002  Transfer(from, to, tokenId) */\n      swap2\n      dup8\n      and\n      swap2\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3608:3939  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3538:3939  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x0b))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14364:14366   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14346:14367   */\n      mstore\n        /* \"#utility.yul\":14403:14405   */\n      0x14\n        /* \"#utility.yul\":14383:14401   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14376:14406   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":14422:14440   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14415:14465   */\n      mstore\n        /* \"#utility.yul\":14482:14500   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_151\n        /* \"#utility.yul\":14162:14506   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_336:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2175  _paused */\n      0x0b\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_340:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1692:1724   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1674:1725   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1662:1664   */\n      0x20\n        /* \"#utility.yul\":1647:1665   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2216:2349  function _burn(uint256 tokenId)... */\n    tag_201:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2322:2342  super._burn(tokenId) */\n      tag_200\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2334:2341  tokenId */\n      dup2\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2322:2333  super._burn */\n      tag_344\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2322:2342  super._burn(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8117:8225  function _safeMint(address to, uint256 tokenId) internal virtual {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8202:8204  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8206:8213  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8201  _safeMint */\n      tag_349\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8192:8218  _safeMint(to, tokenId, \"\") */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1277:1491  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1392  _exists(tokenId) */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1384:1391  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1383  _exists */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1376:1392  _exists(tokenId) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14713:14715   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14695:14716   */\n      mstore\n        /* \"#utility.yul\":14752:14754   */\n      0x2e\n        /* \"#utility.yul\":14732:14750   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14725:14755   */\n      mstore\n        /* \"#utility.yul\":14791:14825   */\n      0x45524337323155524953746f726167653a2055524920736574206f66206e6f6e\n        /* \"#utility.yul\":14771:14789   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14764:14826   */\n      mstore\n      shl(0x91, 0x32bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":14842:14860   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14835:14879   */\n      mstore\n        /* \"#utility.yul\":14896:14915   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n      tag_151\n        /* \"#utility.yul\":14511:14921   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1368:1443  require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\") */\n    tag_352:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1463  _tokenURIs */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1472  _tokenURIs[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1484  _tokenURIs[tokenId] = _tokenURI */\n      dup3\n      mload\n      tag_166\n      swap3\n      dup5\n      add\n      swap1\n      tag_356\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x0b\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x0b))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_360\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15128:15130   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15110:15131   */\n      mstore\n        /* \"#utility.yul\":15167:15169   */\n      0x10\n        /* \"#utility.yul\":15147:15165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15140:15170   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":15186:15204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15179:15225   */\n      mstore\n        /* \"#utility.yul\":15242:15260   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_151\n        /* \"#utility.yul\":14926:15266   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_360:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x0b\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1932:1936  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_340\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11625:11633  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11621  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11616:11633  owner != operator */\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15473:15475   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15455:15476   */\n      mstore\n        /* \"#utility.yul\":15512:15514   */\n      0x19\n        /* \"#utility.yul\":15492:15510   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15485:15515   */\n      mstore\n        /* \"#utility.yul\":15551:15578   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":15531:15549   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15524:15579   */\n      mstore\n        /* \"#utility.yul\":15596:15614   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_151\n        /* \"#utility.yul\":15271:15620   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11608:11663  require(owner != operator, \"ERC721: approve to caller\") */\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11691  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11698  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11708  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11673:11719  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":540:581   */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":513:531   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11734:11775  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":11475:11782  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6550:6857  function _safeTransfer(... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      tag_372\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6711:6715  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6717:6719  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6721:6728  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6710  _transfer */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6701:6729  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6770:6774  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6776:6778  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6780:6787  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6789:6794  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6769  _checkOnERC721Received */\n      tag_374\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6747:6795  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6739:6850  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_377\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":540:553  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:589  _exists(tokenId) */\n      tag_379\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":581:588  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:580  _exists */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":573:589  _exists(tokenId) */\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16246:16248   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16228:16249   */\n      mstore\n        /* \"#utility.yul\":16285:16287   */\n      0x31\n        /* \"#utility.yul\":16265:16283   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16258:16288   */\n      mstore\n        /* \"#utility.yul\":16324:16358   */\n      0x45524337323155524953746f726167653a2055524920717565727920666f7220\n        /* \"#utility.yul\":16304:16322   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16297:16359   */\n      mstore\n      shl(0x79, 0x3737b732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":16375:16393   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16368:16415   */\n      mstore\n        /* \"#utility.yul\":16432:16451   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n      tag_151\n        /* \"#utility.yul\":16044:16457   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":565:643  require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\") */\n    tag_380:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":654:677  string memory _tokenURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:699  _tokenURIs[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:690  _tokenURIs */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":680:699  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":654:699  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_383\n      swap1\n      tag_142\n      jump\t// in\n    tag_383:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_384\n      swap1\n      tag_142\n      jump\t// in\n    tag_384:\n      dup1\n      iszero\n      tag_385\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_386\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_385)\n    tag_386:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_387:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_387\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_385:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":709:727  string memory base */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:740  _baseURI() */\n      tag_388\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3474  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3389:3481  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":730:740  _baseURI() */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":709:740  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":819:823  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":813:831  bytes(base).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":835:836  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":813:836  bytes(base).length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":809:879  if (bytes(base).length == 0) {... */\n      tag_390\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":859:868  _tokenURI */\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":809:879  if (bytes(base).length == 0) {... */\n    tag_390:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":981:1004  bytes(_tokenURI).length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":981:1008  bytes(_tokenURI).length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":977:1083  if (bytes(_tokenURI).length > 0) {... */\n      tag_391\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1059  base */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1061:1070  _tokenURI */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1038:1071  abi.encodePacked(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_392\n      swap3\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1024:1072  return string(abi.encodePacked(base, _tokenURI)) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":467:1130  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":977:1083  if (bytes(_tokenURI).length > 0) {... */\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.tokenURI(tokenId) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1115:1122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1114  super.tokenURI */\n      tag_395\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1100:1123  super.tokenURI(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_302:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x80ac58cd)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      tag_397\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x5b5e139f)\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_138\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":1919:2142  function _beforeTokenTransfer(... */\n    tag_326:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      and(0xff, sload(0x0b))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15128:15130   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15110:15131   */\n      mstore\n        /* \"#utility.yul\":15167:15169   */\n      0x10\n        /* \"#utility.yul\":15147:15165   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15140:15170   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":15186:15204   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15179:15225   */\n      mstore\n        /* \"#utility.yul\":15242:15260   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_151\n        /* \"#utility.yul\":14926:15266   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_403:\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2090:2135  super._beforeTokenTransfer(from, to, tokenId) */\n      tag_166\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2117:2121  from */\n      dup4\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2123:2125  to */\n      dup4\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2127:2134  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2090:2116  super._beforeTokenTransfer */\n      tag_407\n        /* \"contracts/NFTContract3/TribalpunkNFT.sol\":2090:2135  super._beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1708:1908  function _burn(uint256 tokenId) internal virtual override {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1776:1796  super._burn(tokenId) */\n      tag_410\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1788:1795  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1776:1787  super._burn */\n      tag_411\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1776:1796  super._burn(tokenId) */\n      jump\t// in\n    tag_410:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1817:1836  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1817:1827  _tokenURIs */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1817:1836  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1811:1844  bytes(_tokenURIs[tokenId]).length */\n      dup1\n      sload\n      tag_412\n      swap1\n      tag_142\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1811:1849  bytes(_tokenURIs[tokenId]).length != 0 */\n      iszero\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1807:1902  if (bytes(_tokenURIs[tokenId]).length != 0) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1872:1891  _tokenURIs[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1872:1882  _tokenURIs */\n      0x0a\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1872:1891  _tokenURIs[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1865:1891  delete _tokenURIs[tokenId] */\n      tag_200\n      swap2\n      tag_415\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8446:8757  function _safeMint(... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8571:8589  _mint(to, tokenId) */\n      tag_417\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8577:8579  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8581:8588  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8571:8576  _mint */\n      tag_418\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8571:8589  _mint(to, tokenId) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8620:8674  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      tag_419\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8651:8652  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8655:8657  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8659:8666  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8668:8673  _data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8620:8642  _checkOnERC721Received */\n      tag_374\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8620:8674  _checkOnERC721Received(address(0), to, tokenId, _data) */\n      jump\t// in\n    tag_419:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8599:8750  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_377\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n    tag_374:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12485:12489  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12505:12518  to.isContract */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n      tag_425\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      shl(0xe1, 0x0a85bd01)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12576  IERC721Receiver(to).onERC721Received */\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      tag_427\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12591:12595  from */\n      dup10\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12597:12604  tokenId */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12606:12611  _data */\n      dup9\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12540:12612  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      0x04\n      add\n      tag_428\n      jump\t// in\n    tag_427:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_429\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_430\n      swap2\n      dup2\n      add\n      swap1\n      tag_431\n      jump\t// in\n    tag_430:\n      0x01\n    tag_429:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_432\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_437\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_436)\n    tag_437:\n      0x60\n      swap2\n      pop\n    tag_436:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12785  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12792  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12796:12797  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12779:12797  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12821:12881  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap1\n      tag_377\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12775:13041  if (reason.length == 0) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12993:12999  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12987:13000  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12978:12984  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12974:12976  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12970:12985  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12963:13001  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12536:13055  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_432:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12662:12713  retval == IERC721Receiver.onERC721Received.selector */\n      and\n      shl(0xe1, 0x0a85bd01)\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12655:12713  return retval == IERC721Receiver.onERC721Received.selector */\n      jump(tag_315)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12501:13107  if (to.isContract()) {... */\n    tag_425:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":13092:13096  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":12335:13113  function _checkOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2891:2904  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2924:2940  _exists(tokenId) */\n      tag_445\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2932:2939  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2924:2931  _exists */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2924:2940  _exists(tokenId) */\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_446\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17887:17889   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17869:17890   */\n      mstore\n        /* \"#utility.yul\":17926:17928   */\n      0x2f\n        /* \"#utility.yul\":17906:17924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17899:17929   */\n      mstore\n        /* \"#utility.yul\":17965:17999   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":17945:17963   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17938:18000   */\n      mstore\n      shl(0x89, 0x3732bc34b9ba32b73a103a37b5b2b7)\n        /* \"#utility.yul\":18016:18034   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18009:18054   */\n      mstore\n        /* \"#utility.yul\":18071:18090   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_151\n        /* \"#utility.yul\":17685:18096   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2916:2992  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n    tag_446:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3024  string memory baseURI */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n      tag_449\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3474  return \"\" */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3389:3481  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3027:3037  _baseURI() */\n    tag_449:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3003:3037  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3078:3079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3060:3067  baseURI */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3075  bytes(baseURI).length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3079  bytes(baseURI).length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_450\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_451)\n    tag_450:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3106:3113  baseURI */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      tag_452\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3122  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3131  tokenId.toString */\n      tag_453\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3115:3133  tokenId.toString() */\n      jump\t// in\n    tag_452:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3089:3134  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_454\n      swap3\n      swap2\n      swap1\n      tag_393\n      jump\t// in\n    tag_454:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3054:3140  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_451:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3047:3140  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2818:3147  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2624:3196  function _beforeTokenTransfer(... */\n    tag_407:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2823:2841  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2819:3002  if (from == address(0)) {... */\n      tag_459\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2857:2897  _addTokenToAllTokensEnumeration(tokenId) */\n      tag_460\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2889:2896  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4005:4015  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4005:4022  _allTokens.length */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:4002  _allTokensIndex[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:3993  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:4002  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3978:4022  _allTokensIndex[tokenId] = _allTokens.length */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4032:4056  _allTokens.push(tokenId) */\n      0x01\n      dup3\n      add\n      dup4\n      sstore\n      swap2\n      swap1\n      swap2\n      mstore\n      0xf3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3\n      add\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3902:4063  function _addTokenToAllTokensEnumeration(uint256 tokenId) private {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2857:2897  _addTokenToAllTokensEnumeration(tokenId) */\n    tag_460:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2819:3002  if (from == address(0)) {... */\n      jump(tag_464)\n    tag_459:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2926:2928  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:2928  from != to */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:2922  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2918:2928  from != to */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2914:3002  if (from != to) {... */\n      tag_464\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2944:2991  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      tag_464\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2977:2981  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2983:2990  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2944:2976  _removeTokenFromOwnerEnumeration */\n      tag_465\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":2944:2991  _removeTokenFromOwnerEnumeration(from, tokenId) */\n      jump\t// in\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3015:3031  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3011:3190  if (to == address(0)) {... */\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3047:3092  _removeTokenFromAllTokensEnumeration(tokenId) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3084:3091  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3047:3083  _removeTokenFromAllTokensEnumeration */\n      tag_468\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3047:3092  _removeTokenFromAllTokensEnumeration(tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3011:3190  if (to == address(0)) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3119:3123  from */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3113:3123  to != from */\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3113:3115  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3113:3123  to != from */\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3109:3190  if (to != from) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3139:3179  _addTokenToOwnerEnumeration(to, tokenId) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3167:3169  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3171:3178  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3139:3166  _addTokenToOwnerEnumeration */\n      tag_472\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3139:3179  _addTokenToOwnerEnumeration(to, tokenId) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9723:10129  function _burn(uint256 tokenId) internal virtual {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9782:9795  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9798:9821  ERC721.ownerOf(tokenId) */\n      tag_474\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9813:9820  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9798:9812  ERC721.ownerOf */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9798:9821  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9782:9821  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9832:9880  _beforeTokenTransfer(owner, address(0), tokenId) */\n      tag_475\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9853:9858  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9868:9869  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9872:9879  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9832:9852  _beforeTokenTransfer */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9832:9880  _beforeTokenTransfer(owner, address(0), tokenId) */\n      jump\t// in\n    tag_475:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9918:9947  _approve(address(0), tokenId) */\n      tag_476\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9935:9936  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9939:9946  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9918:9926  _approve */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9918:9947  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_476:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9974  _balances[owner] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9967  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9974  _balances[owner] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9979  _balances[owner] -= 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9978:9979  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9974  _balances[owner] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9979  _balances[owner] -= 1 */\n      tag_477\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9978:9979  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9958:9979  _balances[owner] -= 1 */\n      tag_329\n      jump\t// in\n    tag_477:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10003  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9989:10012  delete _owners[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10028:10064  Transfer(owner, address(0), tokenId) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10004:10011  tokenId */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10028:10064  Transfer(owner, address(0), tokenId) */\n      dup5\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9996:10012  _owners[tokenId] */\n      dup4\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":10028:10064  Transfer(owner, address(0), tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9079:9506  function _mint(address to, uint256 tokenId) internal virtual {... */\n    tag_418:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9158:9174  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_480\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18303:18305   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18285:18306   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18322:18340   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18315:18345   */\n      mstore\n        /* \"#utility.yul\":18381:18415   */\n      0x4552433732313a206d696e7420746f20746865207a65726f2061646472657373\n        /* \"#utility.yul\":18361:18379   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18354:18416   */\n      mstore\n        /* \"#utility.yul\":18433:18451   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n      tag_151\n        /* \"#utility.yul\":18101:18457   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9150:9211  require(to != address(0), \"ERC721: mint to the zero address\") */\n    tag_480:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9230:9246  _exists(tokenId) */\n      tag_483\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9238:9245  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9230:9237  _exists */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9230:9246  _exists(tokenId) */\n      jump\t// in\n    tag_483:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9229:9246  !_exists(tokenId) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_484\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18664:18666   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18646:18667   */\n      mstore\n        /* \"#utility.yul\":18703:18705   */\n      0x1c\n        /* \"#utility.yul\":18683:18701   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18676:18706   */\n      mstore\n        /* \"#utility.yul\":18742:18772   */\n      0x4552433732313a20746f6b656e20616c7265616479206d696e74656400000000\n        /* \"#utility.yul\":18722:18740   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18715:18773   */\n      mstore\n        /* \"#utility.yul\":18790:18808   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n      tag_151\n        /* \"#utility.yul\":18462:18814   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9221:9279  require(!_exists(tokenId), \"ERC721: token already minted\") */\n    tag_484:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9290:9335  _beforeTokenTransfer(address(0), to, tokenId) */\n      tag_487\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9320  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9323:9325  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9327:9334  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9290:9310  _beforeTokenTransfer */\n      tag_326\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9290:9335  _beforeTokenTransfer(address(0), to, tokenId) */\n      jump\t// in\n    tag_487:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9355  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9363:9364  1 */\n      0x01\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9359  _balances[to] */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      tag_488\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9363:9364  1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9346:9364  _balances[to] += 1 */\n      tag_331\n      jump\t// in\n    tag_488:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9381  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9395  _owners[tokenId] = to */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      swap1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      dup4\n      swap3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9374:9390  _owners[tokenId] */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9411:9444  Transfer(address(0), to, tokenId) */\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4284:4437  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_453:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:606  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":610:611  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n      tag_492\n      jumpi\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":627:637  return \"0\" */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xfc, 0x03)\n      0x20\n      dup3\n      add\n      mstore\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":597:648  if (value == 0) {... */\n    tag_492:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":672:677  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_493:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":718:727  temp != 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":743:751  digits++ */\n      dup1\n      tag_495\n      dup2\n      tag_496\n      jump\t// in\n    tag_495:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      tag_497\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":765:775  temp /= 10 */\n      dup4\n      tag_498\n      jump\t// in\n    tag_497:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_493)\n    tag_494:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":827:833  digits */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_500\n      jumpi\n      tag_500\n      tag_501\n      jump\t// in\n    tag_500:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_502\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_502:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n    tag_503:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":851:861  value != 0 */\n      dup5\n      iszero\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      tag_315\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":887:888  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":877:888  digits -= 1 */\n      dup4\n      tag_329\n      jump\t// in\n    tag_505:\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_506\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:950  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":945:955  value % 10 */\n      tag_507\n      jump\t// in\n    tag_506:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_508\n      swap1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:934  48 */\n      0x30\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_331\n      jump\t// in\n    tag_508:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":909:915  digits */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_510\n      jumpi\n      tag_510\n      tag_209\n      jump\t// in\n    tag_510:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      tag_511\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":972:983  value /= 10 */\n      dup7\n      tag_498\n      jump\t// in\n    tag_511:\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_503)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4680:5650  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n    tag_465:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4942:4964  uint256 lastTokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4992:4993  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4989  ERC721.balanceOf(from) */\n      tag_516\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4984:4988  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4983  ERC721.balanceOf */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4989  ERC721.balanceOf(from) */\n      jump\t// in\n    tag_516:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4967:4993  ERC721.balanceOf(from) - 1 */\n      tag_517\n      swap2\n      swap1\n      tag_329\n      jump\t// in\n    tag_517:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5003:5021  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5024:5050  _ownedTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5024:5041  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5024:5050  _ownedTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4942:4993  uint256 lastTokenIndex = ERC721.balanceOf(from) - 1 */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5154:5182  tokenIndex != lastTokenIndex */\n      dup1\n      dup3\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5150:5473  if (tokenIndex != lastTokenIndex) {... */\n      tag_518\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5238  _ownedTokens[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5198:5217  uint256 lastTokenId */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5238  _ownedTokens[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5232  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5238  _ownedTokens[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5220:5254  _ownedTokens[from][lastTokenIndex] */\n      dup6\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5269:5299  _ownedTokens[from][tokenIndex] */\n      dup5\n      dup5\n      mstore\n      dup2\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5269:5313  _ownedTokens[from][tokenIndex] = lastTokenId */\n      dup2\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5415  _ownedTokensIndex[lastTokenId] */\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5402  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5415  _ownedTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5385:5428  _ownedTokensIndex[lastTokenId] = tokenIndex */\n      dup2\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5150:5473  if (tokenIndex != lastTokenIndex) {... */\n    tag_518:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5566:5592  _ownedTokensIndex[tokenId] */\n      0x00\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5566:5583  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5566:5592  _ownedTokensIndex[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5559:5592  delete _ownedTokensIndex[tokenId] */\n      dup5\n      swap1\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5627  _ownedTokens[from] */\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5621  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5627  _ownedTokens[from] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5609:5643  _ownedTokens[from][lastTokenIndex] */\n      swap2\n      dup4\n      mstore\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5602:5643  delete _ownedTokens[from][lastTokenIndex] */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":4680:5650  function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5938:6999  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n    tag_468:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6222  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6229  _allTokens.length */\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6187:6209  uint256 lastTokenIndex */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6233  _allTokens.length - 1 */\n      tag_520\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6232:6233  1 */\n      0x01\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6212:6233  _allTokens.length - 1 */\n      tag_329\n      jump\t// in\n    tag_520:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6243:6261  uint256 tokenIndex */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6288  _allTokensIndex[tokenId] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6279  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6288  _allTokensIndex[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6632:6642  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6632:6658  _allTokens[lastTokenIndex] */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6187:6233  uint256 lastTokenIndex = _allTokens.length - 1 */\n      swap4\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6264:6288  _allTokensIndex[tokenId] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6187:6233  uint256 lastTokenIndex = _allTokens.length - 1 */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6632:6658  _allTokens[lastTokenIndex] */\n      dup2\n      lt\n      tag_522\n      jumpi\n      tag_522\n      tag_209\n      jump\t// in\n    tag_522:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6610:6658  uint256 lastTokenId = _allTokens[lastTokenIndex] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6694:6705  lastTokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6669:6679  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6680:6690  tokenIndex */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6669:6691  _allTokens[tokenIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_525\n      jumpi\n      tag_525\n      tag_209\n      jump\t// in\n    tag_525:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6669:6705  _allTokens[tokenIndex] = lastTokenId */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6801  _allTokensIndex[lastTokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6788  _allTokensIndex */\n      0x09\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6801  _allTokensIndex[lastTokenId] */\n      swap1\n      swap2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6773:6814  _allTokensIndex[lastTokenId] = tokenIndex */\n      dup5\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6942:6966  _allTokensIndex[tokenId] */\n      dup6\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6935:6966  delete _allTokensIndex[tokenId] */\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6976:6986  _allTokens */\n      0x08\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6976:6992  _allTokens.pop() */\n      dup1\n      sload\n      dup1\n      tag_528\n      jumpi\n      tag_528\n      tag_529\n      jump\t// in\n    tag_528:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":6009:6999  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":5938:6999  function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3490:3707  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n    tag_472:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3574:3588  uint256 length */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3591:3611  ERC721.balanceOf(to) */\n      tag_532\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3608:3610  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3591:3607  ERC721.balanceOf */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3591:3611  ERC721.balanceOf(to) */\n      jump\t// in\n    tag_532:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3637  _ownedTokens[to] */\n      swap1\n      swap4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3633  _ownedTokens */\n      0x06\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3637  _ownedTokens[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3645  _ownedTokens[to][length] */\n      dup7\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3621:3655  _ownedTokens[to][length] = tokenId */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3691  _ownedTokensIndex[tokenId] */\n      swap4\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3682  _ownedTokensIndex */\n      0x07\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3691  _ownedTokensIndex[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3665:3700  _ownedTokensIndex[tokenId] = length */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":3490:3707  function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {... */\n      jump\t// out\n    tag_356:\n      dup3\n      dup1\n      sload\n      tag_533\n      swap1\n      tag_142\n      jump\t// in\n    tag_533:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_535\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_538)\n    tag_535:\n      dup3\n      0x1f\n      lt\n      tag_536\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_538)\n    tag_536:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_538\n      jumpi\n      swap2\n      dup3\n      add\n    tag_537:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_538\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_537)\n    tag_538:\n      pop\n      tag_539\n      swap3\n      swap2\n      pop\n      tag_540\n      jump\t// in\n    tag_539:\n      pop\n      swap1\n      jump\t// out\n    tag_415:\n      pop\n      dup1\n      sload\n      tag_541\n      swap1\n      tag_142\n      jump\t// in\n    tag_541:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_543\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_543:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_200\n      swap2\n      swap1\n    tag_540:\n    tag_545:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_539\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_545)\n        /* \"#utility.yul\":14:145   */\n    tag_547:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":88:120   */\n      dup2\n      and\n        /* \"#utility.yul\":78:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":68:139   */\n      tag_200\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:395   */\n    tag_38:\n        /* \"#utility.yul\":208:214   */\n      0x00\n        /* \"#utility.yul\":261:263   */\n      0x20\n        /* \"#utility.yul\":249:258   */\n      dup3\n        /* \"#utility.yul\":240:247   */\n      dup5\n        /* \"#utility.yul\":236:259   */\n      sub\n        /* \"#utility.yul\":232:264   */\n      slt\n        /* \"#utility.yul\":229:281   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":277:278   */\n      0x00\n        /* \"#utility.yul\":274:275   */\n      dup1\n        /* \"#utility.yul\":267:279   */\n      revert\n        /* \"#utility.yul\":229:281   */\n    tag_559:\n        /* \"#utility.yul\":316:325   */\n      dup2\n        /* \"#utility.yul\":303:326   */\n      calldataload\n        /* \"#utility.yul\":335:365   */\n      tag_451\n        /* \"#utility.yul\":359:364   */\n      dup2\n        /* \"#utility.yul\":335:365   */\n      tag_547\n      jump\t// in\n        /* \"#utility.yul\":592:850   */\n    tag_548:\n        /* \"#utility.yul\":664:665   */\n      0x00\n        /* \"#utility.yul\":674:787   */\n    tag_563:\n        /* \"#utility.yul\":688:694   */\n      dup4\n        /* \"#utility.yul\":685:686   */\n      dup2\n        /* \"#utility.yul\":682:695   */\n      lt\n        /* \"#utility.yul\":674:787   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":764:775   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":758:776   */\n      mload\n        /* \"#utility.yul\":745:756   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":738:777   */\n      mstore\n        /* \"#utility.yul\":710:712   */\n      0x20\n        /* \"#utility.yul\":703:713   */\n      add\n        /* \"#utility.yul\":674:787   */\n      jump(tag_563)\n    tag_565:\n        /* \"#utility.yul\":805:811   */\n      dup4\n        /* \"#utility.yul\":802:803   */\n      dup2\n        /* \"#utility.yul\":799:812   */\n      gt\n        /* \"#utility.yul\":796:844   */\n      iszero\n      tag_274\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":840:841   */\n      0x00\n        /* \"#utility.yul\":822:838   */\n      swap2\n      add\n        /* \"#utility.yul\":815:842   */\n      mstore\n        /* \"#utility.yul\":592:850   */\n      jump\t// out\n        /* \"#utility.yul\":855:1113   */\n    tag_549:\n        /* \"#utility.yul\":897:900   */\n      0x00\n        /* \"#utility.yul\":935:940   */\n      dup2\n        /* \"#utility.yul\":929:941   */\n      mload\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":957:960   */\n      dup5\n        /* \"#utility.yul\":950:969   */\n      mstore\n        /* \"#utility.yul\":978:1041   */\n      tag_568\n        /* \"#utility.yul\":1034:1040   */\n      dup2\n        /* \"#utility.yul\":1027:1031   */\n      0x20\n        /* \"#utility.yul\":1022:1025   */\n      dup7\n        /* \"#utility.yul\":1018:1032   */\n      add\n        /* \"#utility.yul\":1011:1015   */\n      0x20\n        /* \"#utility.yul\":1004:1009   */\n      dup7\n        /* \"#utility.yul\":1000:1016   */\n      add\n        /* \"#utility.yul\":978:1041   */\n      tag_548\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":1095:1097   */\n      0x1f\n        /* \"#utility.yul\":1074:1089   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1070:1099   */\n      and\n        /* \"#utility.yul\":1061:1100   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1102:1106   */\n      0x20\n        /* \"#utility.yul\":1057:1107   */\n      add\n      swap3\n        /* \"#utility.yul\":855:1113   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1118:1338   */\n    tag_45:\n        /* \"#utility.yul\":1267:1269   */\n      0x20\n        /* \"#utility.yul\":1256:1265   */\n      dup2\n        /* \"#utility.yul\":1249:1270   */\n      mstore\n        /* \"#utility.yul\":1230:1234   */\n      0x00\n        /* \"#utility.yul\":1287:1332   */\n      tag_451\n        /* \"#utility.yul\":1328:1330   */\n      0x20\n        /* \"#utility.yul\":1317:1326   */\n      dup4\n        /* \"#utility.yul\":1313:1331   */\n      add\n        /* \"#utility.yul\":1305:1311   */\n      dup5\n        /* \"#utility.yul\":1287:1332   */\n      tag_549\n      jump\t// in\n        /* \"#utility.yul\":1343:1523   */\n    tag_48:\n        /* \"#utility.yul\":1402:1408   */\n      0x00\n        /* \"#utility.yul\":1455:1457   */\n      0x20\n        /* \"#utility.yul\":1443:1452   */\n      dup3\n        /* \"#utility.yul\":1434:1441   */\n      dup5\n        /* \"#utility.yul\":1430:1453   */\n      sub\n        /* \"#utility.yul\":1426:1458   */\n      slt\n        /* \"#utility.yul\":1423:1475   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":1471:1472   */\n      0x00\n        /* \"#utility.yul\":1468:1469   */\n      dup1\n        /* \"#utility.yul\":1461:1473   */\n      revert\n        /* \"#utility.yul\":1423:1475   */\n    tag_572:\n      pop\n        /* \"#utility.yul\":1494:1517   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1343:1523   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1736:1909   */\n    tag_550:\n        /* \"#utility.yul\":1804:1824   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1853:1884   */\n      dup2\n      and\n        /* \"#utility.yul\":1843:1885   */\n      dup2\n      eq\n        /* \"#utility.yul\":1833:1903   */\n      tag_575\n      jumpi\n        /* \"#utility.yul\":1899:1900   */\n      0x00\n        /* \"#utility.yul\":1896:1897   */\n      dup1\n        /* \"#utility.yul\":1889:1901   */\n      revert\n        /* \"#utility.yul\":1833:1903   */\n    tag_575:\n        /* \"#utility.yul\":1736:1909   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1914:2168   */\n    tag_54:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":1990:1996   */\n      dup1\n        /* \"#utility.yul\":2043:2045   */\n      0x40\n        /* \"#utility.yul\":2031:2040   */\n      dup4\n        /* \"#utility.yul\":2022:2029   */\n      dup6\n        /* \"#utility.yul\":2018:2041   */\n      sub\n        /* \"#utility.yul\":2014:2046   */\n      slt\n        /* \"#utility.yul\":2011:2063   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":2059:2060   */\n      0x00\n        /* \"#utility.yul\":2056:2057   */\n      dup1\n        /* \"#utility.yul\":2049:2061   */\n      revert\n        /* \"#utility.yul\":2011:2063   */\n    tag_577:\n        /* \"#utility.yul\":2082:2111   */\n      tag_578\n        /* \"#utility.yul\":2101:2110   */\n      dup4\n        /* \"#utility.yul\":2082:2111   */\n      tag_550\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":2072:2111   */\n      swap5\n        /* \"#utility.yul\":2158:2160   */\n      0x20\n        /* \"#utility.yul\":2143:2161   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2130:2162   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1914:2168   */\n      jump\t// out\n        /* \"#utility.yul\":2355:2683   */\n    tag_62:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_581\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_581:\n        /* \"#utility.yul\":2540:2569   */\n      tag_582\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_550\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2588:2626   */\n      tag_583\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2611:2620   */\n      dup6\n        /* \"#utility.yul\":2607:2625   */\n      add\n        /* \"#utility.yul\":2588:2626   */\n      tag_550\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":2578:2626   */\n      swap2\n      pop\n        /* \"#utility.yul\":2673:2675   */\n      0x40\n        /* \"#utility.yul\":2662:2671   */\n      dup5\n        /* \"#utility.yul\":2658:2676   */\n      add\n        /* \"#utility.yul\":2645:2677   */\n      calldataload\n        /* \"#utility.yul\":2635:2677   */\n      swap1\n      pop\n        /* \"#utility.yul\":2355:2683   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2688:2815   */\n    tag_501:\n        /* \"#utility.yul\":2749:2759   */\n      0x4e487b71\n        /* \"#utility.yul\":2744:2747   */\n      0xe0\n        /* \"#utility.yul\":2740:2760   */\n      shl\n        /* \"#utility.yul\":2737:2738   */\n      0x00\n        /* \"#utility.yul\":2730:2761   */\n      mstore\n        /* \"#utility.yul\":2780:2784   */\n      0x41\n        /* \"#utility.yul\":2777:2778   */\n      0x04\n        /* \"#utility.yul\":2770:2785   */\n      mstore\n        /* \"#utility.yul\":2804:2808   */\n      0x24\n        /* \"#utility.yul\":2801:2802   */\n      0x00\n        /* \"#utility.yul\":2794:2809   */\n      revert\n        /* \"#utility.yul\":2820:3452   */\n    tag_551:\n        /* \"#utility.yul\":2885:2890   */\n      0x00\n        /* \"#utility.yul\":2915:2933   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2956:2958   */\n      dup1\n        /* \"#utility.yul\":2948:2954   */\n      dup5\n        /* \"#utility.yul\":2945:2959   */\n      gt\n        /* \"#utility.yul\":2942:2982   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":2962:2980   */\n      tag_587\n      tag_501\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":3037:3039   */\n      0x40\n        /* \"#utility.yul\":3031:3040   */\n      mload\n        /* \"#utility.yul\":3005:3007   */\n      0x1f\n        /* \"#utility.yul\":3091:3106   */\n      dup6\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3087:3111   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3113:3115   */\n      0x3f\n        /* \"#utility.yul\":3083:3116   */\n      add\n        /* \"#utility.yul\":3079:3121   */\n      and\n        /* \"#utility.yul\":3067:3122   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3137:3155   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":3157:3179   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":3134:3180   */\n      or\n        /* \"#utility.yul\":3131:3203   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":3183:3201   */\n      tag_589\n      tag_501\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":3223:3233   */\n      dup2\n        /* \"#utility.yul\":3219:3221   */\n      0x40\n        /* \"#utility.yul\":3212:3234   */\n      mstore\n        /* \"#utility.yul\":3252:3258   */\n      dup1\n        /* \"#utility.yul\":3243:3258   */\n      swap4\n      pop\n        /* \"#utility.yul\":3282:3288   */\n      dup6\n        /* \"#utility.yul\":3274:3280   */\n      dup2\n        /* \"#utility.yul\":3267:3289   */\n      mstore\n        /* \"#utility.yul\":3322:3325   */\n      dup7\n        /* \"#utility.yul\":3313:3319   */\n      dup7\n        /* \"#utility.yul\":3308:3311   */\n      dup7\n        /* \"#utility.yul\":3304:3320   */\n      add\n        /* \"#utility.yul\":3301:3326   */\n      gt\n        /* \"#utility.yul\":3298:3343   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":3339:3340   */\n      0x00\n        /* \"#utility.yul\":3336:3337   */\n      dup1\n        /* \"#utility.yul\":3329:3341   */\n      revert\n        /* \"#utility.yul\":3298:3343   */\n    tag_590:\n        /* \"#utility.yul\":3389:3395   */\n      dup6\n        /* \"#utility.yul\":3384:3387   */\n      dup6\n        /* \"#utility.yul\":3377:3381   */\n      0x20\n        /* \"#utility.yul\":3369:3375   */\n      dup4\n        /* \"#utility.yul\":3365:3382   */\n      add\n        /* \"#utility.yul\":3352:3396   */\n      calldatacopy\n        /* \"#utility.yul\":3444:3445   */\n      0x00\n        /* \"#utility.yul\":3437:3441   */\n      0x20\n        /* \"#utility.yul\":3428:3434   */\n      dup8\n        /* \"#utility.yul\":3420:3426   */\n      dup4\n        /* \"#utility.yul\":3416:3435   */\n      add\n        /* \"#utility.yul\":3412:3442   */\n      add\n        /* \"#utility.yul\":3405:3446   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2820:3452   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3457:3679   */\n    tag_552:\n        /* \"#utility.yul\":3500:3505   */\n      0x00\n        /* \"#utility.yul\":3553:3556   */\n      dup3\n        /* \"#utility.yul\":3546:3550   */\n      0x1f\n        /* \"#utility.yul\":3538:3544   */\n      dup4\n        /* \"#utility.yul\":3534:3551   */\n      add\n        /* \"#utility.yul\":3530:3557   */\n      slt\n        /* \"#utility.yul\":3520:3575   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":3571:3572   */\n      0x00\n        /* \"#utility.yul\":3568:3569   */\n      dup1\n        /* \"#utility.yul\":3561:3573   */\n      revert\n        /* \"#utility.yul\":3520:3575   */\n    tag_592:\n        /* \"#utility.yul\":3593:3673   */\n      tag_451\n        /* \"#utility.yul\":3669:3672   */\n      dup4\n        /* \"#utility.yul\":3660:3666   */\n      dup4\n        /* \"#utility.yul\":3647:3667   */\n      calldataload\n        /* \"#utility.yul\":3640:3644   */\n      0x20\n        /* \"#utility.yul\":3632:3638   */\n      dup6\n        /* \"#utility.yul\":3628:3645   */\n      add\n        /* \"#utility.yul\":3593:3673   */\n      tag_551\n      jump\t// in\n        /* \"#utility.yul\":3684:4227   */\n    tag_82:\n        /* \"#utility.yul\":3772:3778   */\n      0x00\n        /* \"#utility.yul\":3780:3786   */\n      dup1\n        /* \"#utility.yul\":3833:3835   */\n      0x40\n        /* \"#utility.yul\":3821:3830   */\n      dup4\n        /* \"#utility.yul\":3812:3819   */\n      dup6\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3853   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":3849:3850   */\n      0x00\n        /* \"#utility.yul\":3846:3847   */\n      dup1\n        /* \"#utility.yul\":3839:3851   */\n      revert\n        /* \"#utility.yul\":3801:3853   */\n    tag_595:\n        /* \"#utility.yul\":3889:3898   */\n      dup3\n        /* \"#utility.yul\":3876:3899   */\n      calldataload\n        /* \"#utility.yul\":3918:3936   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3959:3961   */\n      dup1\n        /* \"#utility.yul\":3951:3957   */\n      dup3\n        /* \"#utility.yul\":3948:3962   */\n      gt\n        /* \"#utility.yul\":3945:3979   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":3975:3976   */\n      0x00\n        /* \"#utility.yul\":3972:3973   */\n      dup1\n        /* \"#utility.yul\":3965:3977   */\n      revert\n        /* \"#utility.yul\":3945:3979   */\n    tag_596:\n        /* \"#utility.yul\":3998:4048   */\n      tag_597\n        /* \"#utility.yul\":4040:4047   */\n      dup7\n        /* \"#utility.yul\":4031:4037   */\n      dup4\n        /* \"#utility.yul\":4020:4029   */\n      dup8\n        /* \"#utility.yul\":4016:4038   */\n      add\n        /* \"#utility.yul\":3998:4048   */\n      tag_552\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":3988:4048   */\n      swap4\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4090:4099   */\n      dup6\n        /* \"#utility.yul\":4086:4104   */\n      add\n        /* \"#utility.yul\":4073:4105   */\n      calldataload\n        /* \"#utility.yul\":4057:4105   */\n      swap2\n      pop\n        /* \"#utility.yul\":4130:4132   */\n      dup1\n        /* \"#utility.yul\":4120:4128   */\n      dup3\n        /* \"#utility.yul\":4117:4133   */\n      gt\n        /* \"#utility.yul\":4114:4150   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":4146:4147   */\n      0x00\n        /* \"#utility.yul\":4143:4144   */\n      dup1\n        /* \"#utility.yul\":4136:4148   */\n      revert\n        /* \"#utility.yul\":4114:4150   */\n    tag_598:\n      pop\n        /* \"#utility.yul\":4169:4221   */\n      tag_599\n        /* \"#utility.yul\":4213:4220   */\n      dup6\n        /* \"#utility.yul\":4202:4210   */\n      dup3\n        /* \"#utility.yul\":4191:4200   */\n      dup7\n        /* \"#utility.yul\":4187:4211   */\n      add\n        /* \"#utility.yul\":4169:4221   */\n      tag_552\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":4159:4221   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3684:4227   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4232:4418   */\n    tag_93:\n        /* \"#utility.yul\":4291:4297   */\n      0x00\n        /* \"#utility.yul\":4344:4346   */\n      0x20\n        /* \"#utility.yul\":4332:4341   */\n      dup3\n        /* \"#utility.yul\":4323:4330   */\n      dup5\n        /* \"#utility.yul\":4319:4342   */\n      sub\n        /* \"#utility.yul\":4315:4347   */\n      slt\n        /* \"#utility.yul\":4312:4364   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":4360:4361   */\n      0x00\n        /* \"#utility.yul\":4357:4358   */\n      dup1\n        /* \"#utility.yul\":4350:4362   */\n      revert\n        /* \"#utility.yul\":4312:4364   */\n    tag_601:\n        /* \"#utility.yul\":4383:4412   */\n      tag_451\n        /* \"#utility.yul\":4402:4411   */\n      dup3\n        /* \"#utility.yul\":4383:4412   */\n      tag_550\n      jump\t// in\n        /* \"#utility.yul\":4423:4745   */\n    tag_100:\n        /* \"#utility.yul\":4492:4498   */\n      0x00\n        /* \"#utility.yul\":4545:4547   */\n      0x20\n        /* \"#utility.yul\":4533:4542   */\n      dup3\n        /* \"#utility.yul\":4524:4531   */\n      dup5\n        /* \"#utility.yul\":4520:4543   */\n      sub\n        /* \"#utility.yul\":4516:4548   */\n      slt\n        /* \"#utility.yul\":4513:4565   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":4561:4562   */\n      0x00\n        /* \"#utility.yul\":4558:4559   */\n      dup1\n        /* \"#utility.yul\":4551:4563   */\n      revert\n        /* \"#utility.yul\":4513:4565   */\n    tag_604:\n        /* \"#utility.yul\":4601:4610   */\n      dup2\n        /* \"#utility.yul\":4588:4611   */\n      calldataload\n        /* \"#utility.yul\":4634:4652   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4626:4632   */\n      dup2\n        /* \"#utility.yul\":4623:4653   */\n      gt\n        /* \"#utility.yul\":4620:4670   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":4666:4667   */\n      0x00\n        /* \"#utility.yul\":4663:4664   */\n      dup1\n        /* \"#utility.yul\":4656:4668   */\n      revert\n        /* \"#utility.yul\":4620:4670   */\n    tag_605:\n        /* \"#utility.yul\":4689:4739   */\n      tag_315\n        /* \"#utility.yul\":4731:4738   */\n      dup5\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup6\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4689:4739   */\n      tag_552\n      jump\t// in\n        /* \"#utility.yul\":4750:5097   */\n    tag_113:\n        /* \"#utility.yul\":4815:4821   */\n      0x00\n        /* \"#utility.yul\":4823:4829   */\n      dup1\n        /* \"#utility.yul\":4876:4878   */\n      0x40\n        /* \"#utility.yul\":4864:4873   */\n      dup4\n        /* \"#utility.yul\":4855:4862   */\n      dup6\n        /* \"#utility.yul\":4851:4874   */\n      sub\n        /* \"#utility.yul\":4847:4879   */\n      slt\n        /* \"#utility.yul\":4844:4896   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4889:4890   */\n      dup1\n        /* \"#utility.yul\":4882:4894   */\n      revert\n        /* \"#utility.yul\":4844:4896   */\n    tag_608:\n        /* \"#utility.yul\":4915:4944   */\n      tag_609\n        /* \"#utility.yul\":4934:4943   */\n      dup4\n        /* \"#utility.yul\":4915:4944   */\n      tag_550\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":4905:4944   */\n      swap2\n      pop\n        /* \"#utility.yul\":4994:4996   */\n      0x20\n        /* \"#utility.yul\":4983:4992   */\n      dup4\n        /* \"#utility.yul\":4979:4997   */\n      add\n        /* \"#utility.yul\":4966:4998   */\n      calldataload\n        /* \"#utility.yul\":5041:5046   */\n      dup1\n        /* \"#utility.yul\":5034:5047   */\n      iszero\n        /* \"#utility.yul\":5027:5048   */\n      iszero\n        /* \"#utility.yul\":5020:5025   */\n      dup2\n        /* \"#utility.yul\":5017:5049   */\n      eq\n        /* \"#utility.yul\":5007:5067   */\n      tag_610\n      jumpi\n        /* \"#utility.yul\":5063:5064   */\n      0x00\n        /* \"#utility.yul\":5060:5061   */\n      dup1\n        /* \"#utility.yul\":5053:5065   */\n      revert\n        /* \"#utility.yul\":5007:5067   */\n    tag_610:\n        /* \"#utility.yul\":5086:5091   */\n      dup1\n        /* \"#utility.yul\":5076:5091   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4750:5097   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5102:5769   */\n    tag_117:\n        /* \"#utility.yul\":5197:5203   */\n      0x00\n        /* \"#utility.yul\":5205:5211   */\n      dup1\n        /* \"#utility.yul\":5213:5219   */\n      0x00\n        /* \"#utility.yul\":5221:5227   */\n      dup1\n        /* \"#utility.yul\":5274:5277   */\n      0x80\n        /* \"#utility.yul\":5262:5271   */\n      dup6\n        /* \"#utility.yul\":5253:5260   */\n      dup8\n        /* \"#utility.yul\":5249:5272   */\n      sub\n        /* \"#utility.yul\":5245:5278   */\n      slt\n        /* \"#utility.yul\":5242:5295   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":5291:5292   */\n      0x00\n        /* \"#utility.yul\":5288:5289   */\n      dup1\n        /* \"#utility.yul\":5281:5293   */\n      revert\n        /* \"#utility.yul\":5242:5295   */\n    tag_612:\n        /* \"#utility.yul\":5314:5343   */\n      tag_613\n        /* \"#utility.yul\":5333:5342   */\n      dup6\n        /* \"#utility.yul\":5314:5343   */\n      tag_550\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":5304:5343   */\n      swap4\n      pop\n        /* \"#utility.yul\":5362:5400   */\n      tag_614\n        /* \"#utility.yul\":5396:5398   */\n      0x20\n        /* \"#utility.yul\":5385:5394   */\n      dup7\n        /* \"#utility.yul\":5381:5399   */\n      add\n        /* \"#utility.yul\":5362:5400   */\n      tag_550\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":5352:5400   */\n      swap3\n      pop\n        /* \"#utility.yul\":5447:5449   */\n      0x40\n        /* \"#utility.yul\":5436:5445   */\n      dup6\n        /* \"#utility.yul\":5432:5450   */\n      add\n        /* \"#utility.yul\":5419:5451   */\n      calldataload\n        /* \"#utility.yul\":5409:5451   */\n      swap2\n      pop\n        /* \"#utility.yul\":5502:5504   */\n      0x60\n        /* \"#utility.yul\":5491:5500   */\n      dup6\n        /* \"#utility.yul\":5487:5505   */\n      add\n        /* \"#utility.yul\":5474:5506   */\n      calldataload\n        /* \"#utility.yul\":5529:5547   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5521:5527   */\n      dup2\n        /* \"#utility.yul\":5518:5548   */\n      gt\n        /* \"#utility.yul\":5515:5565   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":5561:5562   */\n      0x00\n        /* \"#utility.yul\":5558:5559   */\n      dup1\n        /* \"#utility.yul\":5551:5563   */\n      revert\n        /* \"#utility.yul\":5515:5565   */\n    tag_615:\n        /* \"#utility.yul\":5584:5606   */\n      dup6\n      add\n        /* \"#utility.yul\":5637:5641   */\n      0x1f\n        /* \"#utility.yul\":5629:5642   */\n      dup2\n      add\n        /* \"#utility.yul\":5625:5652   */\n      dup8\n      sgt\n        /* \"#utility.yul\":5615:5670   */\n      tag_616\n      jumpi\n        /* \"#utility.yul\":5666:5667   */\n      0x00\n        /* \"#utility.yul\":5663:5664   */\n      dup1\n        /* \"#utility.yul\":5656:5668   */\n      revert\n        /* \"#utility.yul\":5615:5670   */\n    tag_616:\n        /* \"#utility.yul\":5689:5763   */\n      tag_617\n        /* \"#utility.yul\":5755:5762   */\n      dup8\n        /* \"#utility.yul\":5750:5752   */\n      dup3\n        /* \"#utility.yul\":5737:5753   */\n      calldataload\n        /* \"#utility.yul\":5732:5734   */\n      0x20\n        /* \"#utility.yul\":5728:5730   */\n      dup5\n        /* \"#utility.yul\":5724:5735   */\n      add\n        /* \"#utility.yul\":5689:5763   */\n      tag_551\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":5679:5763   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5102:5769   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5774:6034   */\n    tag_131:\n        /* \"#utility.yul\":5842:5848   */\n      0x00\n        /* \"#utility.yul\":5850:5856   */\n      dup1\n        /* \"#utility.yul\":5903:5905   */\n      0x40\n        /* \"#utility.yul\":5891:5900   */\n      dup4\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5878:5901   */\n      sub\n        /* \"#utility.yul\":5874:5906   */\n      slt\n        /* \"#utility.yul\":5871:5923   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":5919:5920   */\n      0x00\n        /* \"#utility.yul\":5916:5917   */\n      dup1\n        /* \"#utility.yul\":5909:5921   */\n      revert\n        /* \"#utility.yul\":5871:5923   */\n    tag_619:\n        /* \"#utility.yul\":5942:5971   */\n      tag_620\n        /* \"#utility.yul\":5961:5970   */\n      dup4\n        /* \"#utility.yul\":5942:5971   */\n      tag_550\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":5932:5971   */\n      swap2\n      pop\n        /* \"#utility.yul\":5990:6028   */\n      tag_621\n        /* \"#utility.yul\":6024:6026   */\n      0x20\n        /* \"#utility.yul\":6013:6022   */\n      dup5\n        /* \"#utility.yul\":6009:6027   */\n      add\n        /* \"#utility.yul\":5990:6028   */\n      tag_550\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":5980:6028   */\n      swap1\n      pop\n        /* \"#utility.yul\":5774:6034   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6039:6419   */\n    tag_142:\n        /* \"#utility.yul\":6118:6119   */\n      0x01\n        /* \"#utility.yul\":6114:6126   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":6161:6173   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":6182:6243   */\n      tag_623\n      jumpi\n        /* \"#utility.yul\":6236:6240   */\n      0x7f\n        /* \"#utility.yul\":6228:6234   */\n      dup3\n        /* \"#utility.yul\":6224:6241   */\n      and\n        /* \"#utility.yul\":6214:6241   */\n      swap2\n      pop\n        /* \"#utility.yul\":6182:6243   */\n    tag_623:\n        /* \"#utility.yul\":6289:6291   */\n      0x20\n        /* \"#utility.yul\":6281:6287   */\n      dup3\n        /* \"#utility.yul\":6278:6292   */\n      lt\n        /* \"#utility.yul\":6258:6276   */\n      dup2\n        /* \"#utility.yul\":6255:6293   */\n      sub\n        /* \"#utility.yul\":6252:6413   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":6335:6345   */\n      0x4e487b71\n        /* \"#utility.yul\":6330:6333   */\n      0xe0\n        /* \"#utility.yul\":6326:6346   */\n      shl\n        /* \"#utility.yul\":6323:6324   */\n      0x00\n        /* \"#utility.yul\":6316:6347   */\n      mstore\n        /* \"#utility.yul\":6370:6374   */\n      0x22\n        /* \"#utility.yul\":6367:6368   */\n      0x04\n        /* \"#utility.yul\":6360:6375   */\n      mstore\n        /* \"#utility.yul\":6398:6402   */\n      0x24\n        /* \"#utility.yul\":6395:6396   */\n      0x00\n        /* \"#utility.yul\":6388:6403   */\n      revert\n        /* \"#utility.yul\":6252:6413   */\n    tag_624:\n      pop\n        /* \"#utility.yul\":6039:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7664:8077   */\n    tag_175:\n        /* \"#utility.yul\":7866:7868   */\n      0x20\n        /* \"#utility.yul\":7848:7869   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7905:7907   */\n      0x31\n        /* \"#utility.yul\":7885:7903   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7878:7908   */\n      mstore\n        /* \"#utility.yul\":7944:7978   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":7939:7941   */\n      0x40\n        /* \"#utility.yul\":7924:7942   */\n      dup3\n      add\n        /* \"#utility.yul\":7917:7979   */\n      mstore\n      shl(0x7a, 0x1ddb995c881b9bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":8010:8012   */\n      0x60\n        /* \"#utility.yul\":7995:8013   */\n      dup3\n      add\n        /* \"#utility.yul\":7988:8035   */\n      mstore\n        /* \"#utility.yul\":8067:8070   */\n      0x80\n        /* \"#utility.yul\":8052:8071   */\n      add\n      swap1\n        /* \"#utility.yul\":7664:8077   */\n      jump\t// out\n        /* \"#utility.yul\":8494:8850   */\n    tag_188:\n        /* \"#utility.yul\":8696:8698   */\n      0x20\n        /* \"#utility.yul\":8678:8699   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8715:8733   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8708:8738   */\n      mstore\n        /* \"#utility.yul\":8774:8808   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8769:8771   */\n      0x40\n        /* \"#utility.yul\":8754:8772   */\n      dup3\n      add\n        /* \"#utility.yul\":8747:8809   */\n      mstore\n        /* \"#utility.yul\":8841:8843   */\n      0x60\n        /* \"#utility.yul\":8826:8844   */\n      add\n      swap1\n        /* \"#utility.yul\":8494:8850   */\n      jump\t// out\n        /* \"#utility.yul\":9685:9812   */\n    tag_209:\n        /* \"#utility.yul\":9746:9756   */\n      0x4e487b71\n        /* \"#utility.yul\":9741:9744   */\n      0xe0\n        /* \"#utility.yul\":9737:9757   */\n      shl\n        /* \"#utility.yul\":9734:9735   */\n      0x00\n        /* \"#utility.yul\":9727:9758   */\n      mstore\n        /* \"#utility.yul\":9777:9781   */\n      0x32\n        /* \"#utility.yul\":9774:9775   */\n      0x04\n        /* \"#utility.yul\":9767:9782   */\n      mstore\n        /* \"#utility.yul\":9801:9805   */\n      0x24\n        /* \"#utility.yul\":9798:9799   */\n      0x00\n        /* \"#utility.yul\":9791:9806   */\n      revert\n        /* \"#utility.yul\":9817:10093   */\n    tag_218:\n        /* \"#utility.yul\":9948:9951   */\n      0x00\n        /* \"#utility.yul\":9986:9992   */\n      dup3\n        /* \"#utility.yul\":9980:9993   */\n      mload\n        /* \"#utility.yul\":10002:10055   */\n      tag_635\n        /* \"#utility.yul\":10048:10054   */\n      dup2\n        /* \"#utility.yul\":10043:10046   */\n      dup5\n        /* \"#utility.yul\":10036:10040   */\n      0x20\n        /* \"#utility.yul\":10028:10034   */\n      dup8\n        /* \"#utility.yul\":10024:10041   */\n      add\n        /* \"#utility.yul\":10002:10055   */\n      tag_548\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":10071:10087   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":9817:10093   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10505:10959   */\n    tag_232:\n        /* \"#utility.yul\":10730:10736   */\n      dup4\n        /* \"#utility.yul\":10719:10728   */\n      dup2\n        /* \"#utility.yul\":10712:10737   */\n      mstore\n        /* \"#utility.yul\":10773:10775   */\n      0x60\n        /* \"#utility.yul\":10768:10770   */\n      0x20\n        /* \"#utility.yul\":10757:10766   */\n      dup3\n        /* \"#utility.yul\":10753:10771   */\n      add\n        /* \"#utility.yul\":10746:10776   */\n      mstore\n        /* \"#utility.yul\":10693:10697   */\n      0x00\n        /* \"#utility.yul\":10799:10844   */\n      tag_638\n        /* \"#utility.yul\":10840:10842   */\n      0x60\n        /* \"#utility.yul\":10829:10838   */\n      dup4\n        /* \"#utility.yul\":10825:10843   */\n      add\n        /* \"#utility.yul\":10817:10823   */\n      dup6\n        /* \"#utility.yul\":10799:10844   */\n      tag_549\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":10892:10901   */\n      dup3\n        /* \"#utility.yul\":10884:10890   */\n      dup2\n        /* \"#utility.yul\":10880:10902   */\n      sub\n        /* \"#utility.yul\":10875:10877   */\n      0x40\n        /* \"#utility.yul\":10864:10873   */\n      dup5\n        /* \"#utility.yul\":10860:10878   */\n      add\n        /* \"#utility.yul\":10853:10903   */\n      mstore\n        /* \"#utility.yul\":10920:10953   */\n      tag_639\n        /* \"#utility.yul\":10946:10952   */\n      dup2\n        /* \"#utility.yul\":10938:10944   */\n      dup6\n        /* \"#utility.yul\":10920:10953   */\n      tag_549\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":10912:10953   */\n      swap7\n        /* \"#utility.yul\":10505:10959   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13767:13894   */\n    tag_553:\n        /* \"#utility.yul\":13828:13838   */\n      0x4e487b71\n        /* \"#utility.yul\":13823:13826   */\n      0xe0\n        /* \"#utility.yul\":13819:13839   */\n      shl\n        /* \"#utility.yul\":13816:13817   */\n      0x00\n        /* \"#utility.yul\":13809:13840   */\n      mstore\n        /* \"#utility.yul\":13859:13863   */\n      0x11\n        /* \"#utility.yul\":13856:13857   */\n      0x04\n        /* \"#utility.yul\":13849:13864   */\n      mstore\n        /* \"#utility.yul\":13883:13887   */\n      0x24\n        /* \"#utility.yul\":13880:13881   */\n      0x00\n        /* \"#utility.yul\":13873:13888   */\n      revert\n        /* \"#utility.yul\":13899:14024   */\n    tag_329:\n        /* \"#utility.yul\":13939:13943   */\n      0x00\n        /* \"#utility.yul\":13967:13968   */\n      dup3\n        /* \"#utility.yul\":13964:13965   */\n      dup3\n        /* \"#utility.yul\":13961:13969   */\n      lt\n        /* \"#utility.yul\":13958:13992   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":13972:13990   */\n      tag_650\n      tag_553\n      jump\t// in\n    tag_650:\n      pop\n        /* \"#utility.yul\":14009:14018   */\n      sub\n      swap1\n        /* \"#utility.yul\":13899:14024   */\n      jump\t// out\n        /* \"#utility.yul\":14029:14157   */\n    tag_331:\n        /* \"#utility.yul\":14069:14072   */\n      0x00\n        /* \"#utility.yul\":14100:14101   */\n      dup3\n        /* \"#utility.yul\":14096:14102   */\n      not\n        /* \"#utility.yul\":14093:14094   */\n      dup3\n        /* \"#utility.yul\":14090:14103   */\n      gt\n        /* \"#utility.yul\":14087:14126   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":14106:14124   */\n      tag_653\n      tag_553\n      jump\t// in\n    tag_653:\n      pop\n        /* \"#utility.yul\":14142:14151   */\n      add\n      swap1\n        /* \"#utility.yul\":14029:14157   */\n      jump\t// out\n        /* \"#utility.yul\":15625:16039   */\n    tag_377:\n        /* \"#utility.yul\":15827:15829   */\n      0x20\n        /* \"#utility.yul\":15809:15830   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15866:15868   */\n      0x32\n        /* \"#utility.yul\":15846:15864   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15839:15869   */\n      mstore\n        /* \"#utility.yul\":15905:15939   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":15900:15902   */\n      0x40\n        /* \"#utility.yul\":15885:15903   */\n      dup3\n      add\n        /* \"#utility.yul\":15878:15940   */\n      mstore\n      shl(0x71, 0x31b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":15971:15973   */\n      0x60\n        /* \"#utility.yul\":15956:15974   */\n      dup3\n      add\n        /* \"#utility.yul\":15949:15997   */\n      mstore\n        /* \"#utility.yul\":16029:16032   */\n      0x80\n        /* \"#utility.yul\":16014:16033   */\n      add\n      swap1\n        /* \"#utility.yul\":15625:16039   */\n      jump\t// out\n        /* \"#utility.yul\":16462:16932   */\n    tag_393:\n        /* \"#utility.yul\":16641:16644   */\n      0x00\n        /* \"#utility.yul\":16679:16685   */\n      dup4\n        /* \"#utility.yul\":16673:16686   */\n      mload\n        /* \"#utility.yul\":16695:16748   */\n      tag_661\n        /* \"#utility.yul\":16741:16747   */\n      dup2\n        /* \"#utility.yul\":16736:16739   */\n      dup5\n        /* \"#utility.yul\":16729:16733   */\n      0x20\n        /* \"#utility.yul\":16721:16727   */\n      dup9\n        /* \"#utility.yul\":16717:16734   */\n      add\n        /* \"#utility.yul\":16695:16748   */\n      tag_548\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":16811:16824   */\n      dup4\n      mload\n        /* \"#utility.yul\":16770:16786   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":16833:16890   */\n      tag_662\n        /* \"#utility.yul\":16811:16824   */\n      dup2\n        /* \"#utility.yul\":16770:16786   */\n      dup4\n        /* \"#utility.yul\":16867:16871   */\n      0x20\n        /* \"#utility.yul\":16855:16872   */\n      dup9\n      add\n        /* \"#utility.yul\":16833:16890   */\n      tag_548\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":16906:16926   */\n      add\n      swap5\n        /* \"#utility.yul\":16462:16932   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16937:17426   */\n    tag_428:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17206:17221   */\n      dup6\n      dup2\n      and\n        /* \"#utility.yul\":17188:17222   */\n      dup3\n      mstore\n        /* \"#utility.yul\":17258:17273   */\n      dup5\n      and\n        /* \"#utility.yul\":17253:17255   */\n      0x20\n        /* \"#utility.yul\":17238:17256   */\n      dup3\n      add\n        /* \"#utility.yul\":17231:17274   */\n      mstore\n        /* \"#utility.yul\":17305:17307   */\n      0x40\n        /* \"#utility.yul\":17290:17308   */\n      dup2\n      add\n        /* \"#utility.yul\":17283:17317   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":17353:17356   */\n      0x80\n        /* \"#utility.yul\":17348:17350   */\n      0x60\n        /* \"#utility.yul\":17333:17351   */\n      dup3\n      add\n        /* \"#utility.yul\":17326:17357   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":17131:17135   */\n      0x00\n      swap1\n        /* \"#utility.yul\":17374:17420   */\n      tag_639\n      swap1\n        /* \"#utility.yul\":17400:17419   */\n      dup4\n      add\n        /* \"#utility.yul\":17392:17398   */\n      dup5\n        /* \"#utility.yul\":17374:17420   */\n      tag_549\n      jump\t// in\n        /* \"#utility.yul\":17431:17680   */\n    tag_431:\n        /* \"#utility.yul\":17500:17506   */\n      0x00\n        /* \"#utility.yul\":17553:17555   */\n      0x20\n        /* \"#utility.yul\":17541:17550   */\n      dup3\n        /* \"#utility.yul\":17532:17539   */\n      dup5\n        /* \"#utility.yul\":17528:17551   */\n      sub\n        /* \"#utility.yul\":17524:17556   */\n      slt\n        /* \"#utility.yul\":17521:17573   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":17569:17570   */\n      0x00\n        /* \"#utility.yul\":17566:17567   */\n      dup1\n        /* \"#utility.yul\":17559:17571   */\n      revert\n        /* \"#utility.yul\":17521:17573   */\n    tag_666:\n        /* \"#utility.yul\":17601:17610   */\n      dup2\n        /* \"#utility.yul\":17595:17611   */\n      mload\n        /* \"#utility.yul\":17620:17650   */\n      tag_451\n        /* \"#utility.yul\":17644:17649   */\n      dup2\n        /* \"#utility.yul\":17620:17650   */\n      tag_547\n      jump\t// in\n        /* \"#utility.yul\":18819:18954   */\n    tag_496:\n        /* \"#utility.yul\":18858:18861   */\n      0x00\n        /* \"#utility.yul\":18879:18896   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":18876:18919   */\n      tag_673\n      jumpi\n        /* \"#utility.yul\":18899:18917   */\n      tag_673\n      tag_553\n      jump\t// in\n    tag_673:\n      pop\n        /* \"#utility.yul\":18946:18947   */\n      0x01\n        /* \"#utility.yul\":18935:18948   */\n      add\n      swap1\n        /* \"#utility.yul\":18819:18954   */\n      jump\t// out\n        /* \"#utility.yul\":18959:19086   */\n    tag_554:\n        /* \"#utility.yul\":19020:19030   */\n      0x4e487b71\n        /* \"#utility.yul\":19015:19018   */\n      0xe0\n        /* \"#utility.yul\":19011:19031   */\n      shl\n        /* \"#utility.yul\":19008:19009   */\n      0x00\n        /* \"#utility.yul\":19001:19032   */\n      mstore\n        /* \"#utility.yul\":19051:19055   */\n      0x12\n        /* \"#utility.yul\":19048:19049   */\n      0x04\n        /* \"#utility.yul\":19041:19056   */\n      mstore\n        /* \"#utility.yul\":19075:19079   */\n      0x24\n        /* \"#utility.yul\":19072:19073   */\n      0x00\n        /* \"#utility.yul\":19065:19080   */\n      revert\n        /* \"#utility.yul\":19091:19211   */\n    tag_498:\n        /* \"#utility.yul\":19131:19132   */\n      0x00\n        /* \"#utility.yul\":19157:19158   */\n      dup3\n        /* \"#utility.yul\":19147:19182   */\n      tag_677\n      jumpi\n        /* \"#utility.yul\":19162:19180   */\n      tag_677\n      tag_554\n      jump\t// in\n    tag_677:\n      pop\n        /* \"#utility.yul\":19196:19205   */\n      div\n      swap1\n        /* \"#utility.yul\":19091:19211   */\n      jump\t// out\n        /* \"#utility.yul\":19216:19328   */\n    tag_507:\n        /* \"#utility.yul\":19248:19249   */\n      0x00\n        /* \"#utility.yul\":19274:19275   */\n      dup3\n        /* \"#utility.yul\":19264:19299   */\n      tag_680\n      jumpi\n        /* \"#utility.yul\":19279:19297   */\n      tag_680\n      tag_554\n      jump\t// in\n    tag_680:\n      pop\n        /* \"#utility.yul\":19313:19322   */\n      mod\n      swap1\n        /* \"#utility.yul\":19216:19328   */\n      jump\t// out\n        /* \"#utility.yul\":19333:19460   */\n    tag_529:\n        /* \"#utility.yul\":19394:19404   */\n      0x4e487b71\n        /* \"#utility.yul\":19389:19392   */\n      0xe0\n        /* \"#utility.yul\":19385:19405   */\n      shl\n        /* \"#utility.yul\":19382:19383   */\n      0x00\n        /* \"#utility.yul\":19375:19406   */\n      mstore\n        /* \"#utility.yul\":19425:19429   */\n      0x31\n        /* \"#utility.yul\":19422:19423   */\n      0x04\n        /* \"#utility.yul\":19415:19430   */\n      mstore\n        /* \"#utility.yul\":19449:19453   */\n      0x24\n        /* \"#utility.yul\":19446:19447   */\n      0x00\n        /* \"#utility.yul\":19439:19454   */\n      revert\n\n    auxdata: 0xa264697066735822122091209a5b1acf5c322c97b7a096220c9df9df1979b4e9d68995169190d5940f9e64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2448": {
									"entryPoint": null,
									"id": 2448,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_259": {
									"entryPoint": null,
									"id": 259,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2057": {
									"entryPoint": null,
									"id": 2057,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 299,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1042:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:17"
															},
															"nodeType": "YulIf",
															"src": "105:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:17"
															},
															"nodeType": "YulIf",
															"src": "204:70:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:17",
														"type": ""
													}
												],
												"src": "14:290:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "483:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "500:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "511:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "493:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "493:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "493:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "534:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "545:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "530:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "530:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "573:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "584:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "569:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "569:18:17"
																	},
																	{
																		"hexValue": "496e76616c696420686f6c6465722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "589:24:17",
																		"type": "",
																		"value": "Invalid holder address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "623:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "635:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "646:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "631:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "631:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "623:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "460:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "474:4:17",
														"type": ""
													}
												],
												"src": "309:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "725:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "742:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "735:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "735:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "725:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "756:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "786:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "792:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "782:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "760:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "833:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "835:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "845:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "835:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "813:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "806:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:26:17"
															},
															"nodeType": "YulIf",
															"src": "803:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "923:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "944:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "951:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "956:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "947:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "947:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "937:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "937:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "988:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "991:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "981:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "981:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1016:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1019:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1009:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1009:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "879:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "902:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "910:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "899:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "876:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:38:17"
															},
															"nodeType": "YulIf",
															"src": "873:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "695:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "704:6:17",
														"type": ""
													}
												],
												"src": "660:380:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid holder address\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620026973803806200269783398101604081905262000034916200022b565b604080518082018252600d8082526c151c9a58985b1c1d5b9ad39195609a1b6020808401828152855180870190965292855284015281519192916200007c9160009162000185565b5080516200009290600190602084019062000185565b5050600b805460ff1916905550620000aa336200012b565b6001600160a01b038116620001055760405162461bcd60e51b815260206004820152601660248201527f496e76616c696420686f6c646572206164647265737300000000000000000000604482015260640160405180910390fd5b600e80546001600160a01b0319166001600160a01b039290921691909117905562000299565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000193906200025d565b90600052602060002090601f016020900481019282620001b7576000855562000202565b82601f10620001d257805160ff191683800117855562000202565b8280016001018555821562000202579182015b8281111562000202578251825591602001919060010190620001e5565b506200021092915062000214565b5090565b5b8082111562000210576000815560010162000215565b6000602082840312156200023e57600080fd5b81516001600160a01b03811681146200025657600080fd5b9392505050565b600181811c908216806200027257607f821691505b6020821081036200029357634e487b7160e01b600052602260045260246000fd5b50919050565b6123ee80620002a96000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636352211e116100f9578063a22cb46511610097578063d979f5aa11610071578063d979f5aa1461037d578063e534155d14610390578063e985e9c5146103a3578063f2fde38b146103df57600080fd5b8063a22cb46514610344578063b88d4fde14610357578063c87b56dd1461036a57600080fd5b80637c90b182116100d35780637c90b182146102f05780638456cb591461031e5780638da5cb5b1461032657806395d89b411461033c57600080fd5b80636352211e146102c257806370a08231146102d5578063715018a6146102e857600080fd5b80632f745c591161016657806342966c681161014057806342966c681461027e5780634f6ccce7146102915780634fa1f7ae146102a45780635c975abb146102b757600080fd5b80632f745c59146102505780633f4ba83a1461026357806342842e0e1461026b57600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806318160ddd1461022b57806323b872dd1461023d575b600080fd5b6101c16101bc366004611da0565b6103f2565b60405190151581526020015b60405180910390f35b6101de610403565b6040516101cd9190611e15565b6101fe6101f9366004611e28565b610495565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611e5d565b610522565b005b6008545b6040519081526020016101cd565b61022961024b366004611e87565b610637565b61022f61025e366004611e5d565b610669565b6102296106ff565b610229610279366004611e87565b610739565b61022961028c366004611e28565b610754565b61022f61029f366004611e28565b6107ce565b6102296102b2366004611f6f565b610861565b600b5460ff166101c1565b6101fe6102d0366004611e28565b6109c9565b61022f6102e3366004611fd3565b610a40565b610229610ac7565b6101c16102fe366004611fee565b8051602081830181018051600d8252928201919093012091525460ff1681565b610229610b01565b600b5461010090046001600160a01b03166101fe565b6101de610b39565b610229610352366004612023565b610b48565b61022961036536600461205f565b610b57565b6101de610378366004611e28565b610b8f565b61022961038b366004611fd3565b610b9a565b600e546101fe906001600160a01b031681565b6101c16103b13660046120db565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102296103ed366004611fd3565b610c3b565b60006103fd82610cd9565b92915050565b6060600080546104129061210e565b80601f016020809104026020016040519081016040528092919081815260200182805461043e9061210e565b801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b5050505050905090565b60006104a082610cfe565b6105065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061052d826109c9565b9050806001600160a01b0316836001600160a01b03160361059a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104fd565b336001600160a01b03821614806105b657506105b681336103b1565b6106285760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104fd565b6106328383610d1b565b505050565b610642335b82610d89565b61065e5760405162461bcd60e51b81526004016104fd90612148565b610632838383610e73565b600061067483610a40565b82106106d65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104fd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600b546001600160a01b0361010090910416331461072f5760405162461bcd60e51b81526004016104fd90612199565b61073761101a565b565b61063283838360405180602001604052806000815250610b57565b61075d3361063c565b6107c25760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016104fd565b6107cb816110ad565b50565b60006107d960085490565b821061083c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104fd565b6008828154811061084f5761084f6121ce565b90600052602060002001549050919050565b600b546001600160a01b036101009091041633146108915760405162461bcd60e51b81526004016104fd90612199565b600d826040516108a191906121e4565b9081526040519081900360200190205460ff16156109105760405162461bcd60e51b815260206004820152602660248201527f54726962616c70756e6b4e46543a206865726f20616c726561647920776173206044820152651b5a5b9d195960d21b60648201526084016104fd565b600061091b600c5490565b905061092b600c80546001019055565b600e54610941906001600160a01b0316826110b6565b61094b81846110d0565b6001600d8460405161095d91906121e4565b908152604051908190036020018120805492151560ff1990931692909217909155600e546001600160a01b0316907f0372de3fa001ec655fcb2f8096e13cb1f68d1b8b9bb9d2674fc7d880de7e8045906109bc90849087908790612200565b60405180910390a2505050565b6000818152600260205260408120546001600160a01b0316806103fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104fd565b60006001600160a01b038216610aab5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104fd565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b03610100909104163314610af75760405162461bcd60e51b81526004016104fd90612199565b610737600061115b565b600b546001600160a01b03610100909104163314610b315760405162461bcd60e51b81526004016104fd90612199565b6107376111b5565b6060600180546104129061210e565b610b53338383611230565b5050565b610b613383610d89565b610b7d5760405162461bcd60e51b81526004016104fd90612148565b610b89848484846112fe565b50505050565b60606103fd82611331565b600b546001600160a01b03610100909104163314610bca5760405162461bcd60e51b81526004016104fd90612199565b6001600160a01b038116610c195760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420686f6c646572206164647265737360501b60448201526064016104fd565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03610100909104163314610c6b5760405162461bcd60e51b81526004016104fd90612199565b6001600160a01b038116610cd05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fd565b6107cb8161115b565b60006001600160e01b0319821663780e9d6360e01b14806103fd57506103fd8261149f565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d50826109c9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d9482610cfe565b610df55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104fd565b6000610e00836109c9565b9050806001600160a01b0316846001600160a01b03161480610e4757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e6b5750836001600160a01b0316610e6084610495565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e86826109c9565b6001600160a01b031614610eea5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104fd565b6001600160a01b038216610f4c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104fd565b610f578383836114ef565b610f62600082610d1b565b6001600160a01b0383166000908152600360205260408120805460019290610f8b90849061224b565b90915550506001600160a01b0382166000908152600360205260408120805460019290610fb9908490612262565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b5460ff166110635760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104fd565b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6107cb81611540565b610b53828260405180602001604052806000815250611580565b6110d982610cfe565b61113c5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104fd565b6000828152600a60209081526040909120825161063292840190611cbb565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600b5460ff16156111fb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104fd565b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110903390565b816001600160a01b0316836001600160a01b0316036112915760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104fd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611309848484610e73565b611315848484846115b3565b610b895760405162461bcd60e51b81526004016104fd9061227a565b606061133c82610cfe565b6113a25760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104fd565b6000828152600a6020526040812080546113bb9061210e565b80601f01602080910402602001604051908101604052809291908181526020018280546113e79061210e565b80156114345780601f1061140957610100808354040283529160200191611434565b820191906000526020600020905b81548152906001019060200180831161141757829003601f168201915b50505050509050600061145260408051602081019091526000815290565b90508051600003611464575092915050565b81511561149657808260405160200161147e9291906122cc565b60405160208183030381529060405292505050919050565b610e6b846116b4565b60006001600160e01b031982166380ac58cd60e01b14806114d057506001600160e01b03198216635b5e139f60e01b145b806103fd57506301ffc9a760e01b6001600160e01b03198316146103fd565b600b5460ff16156115355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104fd565b61063283838361178c565b61154981611844565b6000818152600a6020526040902080546115629061210e565b1590506107cb576000818152600a602052604081206107cb91611d3f565b61158a83836118eb565b61159760008484846115b3565b6106325760405162461bcd60e51b81526004016104fd9061227a565b60006001600160a01b0384163b156116a957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115f79033908990889088906004016122fb565b6020604051808303816000875af1925050508015611632575060408051601f3d908101601f1916820190925261162f9181019061232e565b60015b61168f573d808015611660576040519150601f19603f3d011682016040523d82523d6000602084013e611665565b606091505b5080516000036116875760405162461bcd60e51b81526004016104fd9061227a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e6b565b506001949350505050565b60606116bf82610cfe565b6117235760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104fd565b600061173a60408051602081019091526000815290565b9050600081511161175a5760405180602001604052806000815250611785565b8061176484611a2a565b6040516020016117759291906122cc565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166117e7576117e281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61180a565b816001600160a01b0316836001600160a01b03161461180a5761180a8382611b2b565b6001600160a01b0382166118215761063281611bc8565b826001600160a01b0316826001600160a01b031614610632576106328282611c77565b600061184f826109c9565b905061185d816000846114ef565b611868600083610d1b565b6001600160a01b038116600090815260036020526040812080546001929061189190849061224b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166119415760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104fd565b61194a81610cfe565b156119975760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fd565b6119a3600083836114ef565b6001600160a01b03821660009081526003602052604081208054600192906119cc908490612262565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606081600003611a515750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a7b5780611a658161234b565b9150611a749050600a8361237a565b9150611a55565b60008167ffffffffffffffff811115611a9657611a96611ec3565b6040519080825280601f01601f191660200182016040528015611ac0576020820181803683370190505b5090505b8415610e6b57611ad560018361224b565b9150611ae2600a8661238e565b611aed906030612262565b60f81b818381518110611b0257611b026121ce565b60200101906001600160f81b031916908160001a905350611b24600a8661237a565b9450611ac4565b60006001611b3884610a40565b611b42919061224b565b600083815260076020526040902054909150808214611b95576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611bda9060019061224b565b60008381526009602052604081205460088054939450909284908110611c0257611c026121ce565b906000526020600020015490508060088381548110611c2357611c236121ce565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c5b57611c5b6123a2565b6001900381819060005260206000200160009055905550505050565b6000611c8283610a40565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611cc79061210e565b90600052602060002090601f016020900481019282611ce95760008555611d2f565b82601f10611d0257805160ff1916838001178555611d2f565b82800160010185558215611d2f579182015b82811115611d2f578251825591602001919060010190611d14565b50611d3b929150611d75565b5090565b508054611d4b9061210e565b6000825580601f10611d5b575050565b601f0160209004906000526020600020908101906107cb91905b5b80821115611d3b5760008155600101611d76565b6001600160e01b0319811681146107cb57600080fd5b600060208284031215611db257600080fd5b813561178581611d8a565b60005b83811015611dd8578181015183820152602001611dc0565b83811115610b895750506000910152565b60008151808452611e01816020860160208601611dbd565b601f01601f19169290920160200192915050565b6020815260006117856020830184611de9565b600060208284031215611e3a57600080fd5b5035919050565b80356001600160a01b0381168114611e5857600080fd5b919050565b60008060408385031215611e7057600080fd5b611e7983611e41565b946020939093013593505050565b600080600060608486031215611e9c57600080fd5b611ea584611e41565b9250611eb360208501611e41565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ef457611ef4611ec3565b604051601f8501601f19908116603f01168101908282118183101715611f1c57611f1c611ec3565b81604052809350858152868686011115611f3557600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611f6057600080fd5b61178583833560208501611ed9565b60008060408385031215611f8257600080fd5b823567ffffffffffffffff80821115611f9a57600080fd5b611fa686838701611f4f565b93506020850135915080821115611fbc57600080fd5b50611fc985828601611f4f565b9150509250929050565b600060208284031215611fe557600080fd5b61178582611e41565b60006020828403121561200057600080fd5b813567ffffffffffffffff81111561201757600080fd5b610e6b84828501611f4f565b6000806040838503121561203657600080fd5b61203f83611e41565b91506020830135801515811461205457600080fd5b809150509250929050565b6000806000806080858703121561207557600080fd5b61207e85611e41565b935061208c60208601611e41565b925060408501359150606085013567ffffffffffffffff8111156120af57600080fd5b8501601f810187136120c057600080fd5b6120cf87823560208401611ed9565b91505092959194509250565b600080604083850312156120ee57600080fd5b6120f783611e41565b915061210560208401611e41565b90509250929050565b600181811c9082168061212257607f821691505b60208210810361214257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082516121f6818460208701611dbd565b9190910192915050565b8381526060602082015260006122196060830185611de9565b828103604084015261222b8185611de9565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561225d5761225d612235565b500390565b6000821982111561227557612275612235565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600083516122de818460208801611dbd565b8351908301906122f2818360208801611dbd565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061222b90830184611de9565b60006020828403121561234057600080fd5b815161178581611d8a565b60006001820161235d5761235d612235565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261238957612389612364565b500490565b60008261239d5761239d612364565b500690565b634e487b7160e01b600052603160045260246000fdfea264697066735822122091209a5b1acf5c322c97b7a096220c9df9df1979b4e9d68995169190d5940f9e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2697 CODESIZE SUB DUP1 PUSH3 0x2697 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x22B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0xD DUP1 DUP3 MSTORE PUSH13 0x151C9A58985B1C1D5B9AD39195 PUSH1 0x9A SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 DUP8 ADD SWAP1 SWAP7 MSTORE SWAP3 DUP6 MSTORE DUP5 ADD MSTORE DUP2 MLOAD SWAP2 SWAP3 SWAP2 PUSH3 0x7C SWAP2 PUSH1 0x0 SWAP2 PUSH3 0x185 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x92 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x185 JUMP JUMPDEST POP POP PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0xAA CALLER PUSH3 0x12B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x105 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420686F6C646572206164647265737300000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x299 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x193 SWAP1 PUSH3 0x25D JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1B7 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x202 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1D2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x202 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x202 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x202 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1E5 JUMP JUMPDEST POP PUSH3 0x210 SWAP3 SWAP2 POP PUSH3 0x214 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x210 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x215 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x23E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x272 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x293 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23EE DUP1 PUSH3 0x2A9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD979F5AA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD979F5AA EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xE534155D EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C90B182 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7C90B182 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x4FA1F7AE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x229 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F6F JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xD DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x1DE PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x2023 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x229 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xB9A JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD DUP3 PUSH2 0xCD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x460 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5B6 JUMPI POP PUSH2 0x5B6 DUP2 CALLER PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0xD1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x642 CALLER JUMPDEST DUP3 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x674 DUP4 PUSH2 0xA40 JUMP JUMPDEST DUP3 LT PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x737 PUSH2 0x101A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x75D CALLER PUSH2 0x63C JUMP JUMPDEST PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x10AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84F JUMPI PUSH2 0x84F PUSH2 0x21CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726962616C70756E6B4E46543A206865726F20616C72656164792077617320 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B5A5B9D1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91B PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x92B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x941 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x94B DUP2 DUP5 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD DUP5 PUSH1 0x40 MLOAD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x372DE3FA001EC655FCB2F8096E13CB1F68D1B8B9BB9D2674FC7D880DE7E8045 SWAP1 PUSH2 0x9BC SWAP1 DUP5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x737 PUSH1 0x0 PUSH2 0x115B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xB31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x737 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH2 0xB53 CALLER DUP4 DUP4 PUSH2 0x1230 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB61 CALLER DUP4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xB89 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FD DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420686F6C6465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xC6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FD DUP3 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD50 DUP3 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD94 DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE00 DUP4 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE47 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xE6B JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE60 DUP5 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE86 DUP3 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0xF57 DUP4 DUP4 DUP4 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0xF62 PUSH1 0x0 DUP3 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF8B SWAP1 DUP5 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xFB9 SWAP1 DUP5 SWAP1 PUSH2 0x2262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x1540 JUMP JUMPDEST PUSH2 0xB53 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x10D9 DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x632 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1090 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1291 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1309 DUP5 DUP5 DUP5 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x1315 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x133C DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x13BB SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13E7 SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1434 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1409 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1417 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1452 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1464 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1496 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x147E SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6B DUP5 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x14D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3FD JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x1549 DUP2 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1562 SWAP1 PUSH2 0x210E JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x7CB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7CB SWAP2 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x158A DUP4 DUP4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1597 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x15F7 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1632 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x162F SWAP2 DUP2 ADD SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x168F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1660 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1687 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x227A JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xE6B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16BF DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x175A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1785 JUMP JUMPDEST DUP1 PUSH2 0x1764 DUP5 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1775 SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17E7 JUMPI PUSH2 0x17E2 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x180A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x180A JUMPI PUSH2 0x180A DUP4 DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1821 JUMPI PUSH2 0x632 DUP2 PUSH2 0x1BC8 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x632 JUMPI PUSH2 0x632 DUP3 DUP3 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP3 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x185D DUP2 PUSH1 0x0 DUP5 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x1868 PUSH1 0x0 DUP4 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1891 SWAP1 DUP5 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0xCFE JUMP JUMPDEST ISZERO PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x19A3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x19CC SWAP1 DUP5 SWAP1 PUSH2 0x2262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1A51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A7B JUMPI DUP1 PUSH2 0x1A65 DUP2 PUSH2 0x234B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A74 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x237A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A96 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE6B JUMPI PUSH2 0x1AD5 PUSH1 0x1 DUP4 PUSH2 0x224B JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE2 PUSH1 0xA DUP7 PUSH2 0x238E JUMP JUMPDEST PUSH2 0x1AED SWAP1 PUSH1 0x30 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B02 JUMPI PUSH2 0x1B02 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B24 PUSH1 0xA DUP7 PUSH2 0x237A JUMP JUMPDEST SWAP5 POP PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B38 DUP5 PUSH2 0xA40 JUMP JUMPDEST PUSH2 0x1B42 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1B95 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1BDA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1C02 JUMPI PUSH2 0x1C02 PUSH2 0x21CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1C23 JUMPI PUSH2 0x1C23 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C82 DUP4 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1CC7 SWAP1 PUSH2 0x210E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D2F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D2F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D2F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D14 JUMP JUMPDEST POP PUSH2 0x1D3B SWAP3 SWAP2 POP PUSH2 0x1D75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1D4B SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1D5B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D3B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1785 DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DD8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DC0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB89 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E01 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1785 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E79 DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA5 DUP5 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EB3 PUSH1 0x20 DUP6 ADD PUSH2 0x1E41 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF4 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1C PUSH2 0x1EC3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1785 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA6 DUP7 DUP4 DUP8 ADD PUSH2 0x1F4F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1785 DUP3 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6B DUP5 DUP3 DUP6 ADD PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x203F DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207E DUP6 PUSH2 0x1E41 JUMP JUMPDEST SWAP4 POP PUSH2 0x208C PUSH1 0x20 DUP7 ADD PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x20C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20CF DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1ED9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F7 DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP2 POP PUSH2 0x2105 PUSH1 0x20 DUP5 ADD PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2122 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2142 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x21F6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1DBD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2219 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1DE9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x222B DUP2 DUP6 PUSH2 0x1DE9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x225D JUMPI PUSH2 0x225D PUSH2 0x2235 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2275 PUSH2 0x2235 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x22DE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1DBD JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x22F2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1DBD JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x222B SWAP1 DUP4 ADD DUP5 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1785 DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x235D JUMPI PUSH2 0x235D PUSH2 0x2235 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2389 JUMPI PUSH2 0x2389 PUSH2 0x2364 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x239D JUMPI PUSH2 0x239D PUSH2 0x2364 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 KECCAK256 SWAP11 JUMPDEST BYTE 0xCF 0x5C ORIGIN 0x2C SWAP8 0xB7 LOG0 SWAP7 0x22 0xC SWAP14 0xF9 0xDF NOT PUSH26 0xB4E9D68995169190D5940F9E64736F6C634300080D0033000000 ",
							"sourceMap": "513:2244:16:-:0;;;944:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:2;;;;;;;;;;;;-1:-1:-1;;;1390:113:2;;;;;;;;;;;;;;;;;;;;;1456:13;;1390:113;;;1456:13;;-1:-1:-1;;1456:13:2;:::i;:::-;-1:-1:-1;1479:17:2;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;981:7:1;:15;;-1:-1:-1;;981:15:1;;;-1:-1:-1;921:32:0;719:10:11;921:18:0;:32::i;:::-;-1:-1:-1;;;;;1032:21:16;::::1;1024:56;;;::::0;-1:-1:-1;;;1024:56:16;;511:2:17;1024:56:16::1;::::0;::::1;493:21:17::0;550:2;530:18;;;523:30;589:24;569:18;;;562:52;631:18;;1024:56:16::1;;;;;;;;1090:6;:16:::0;;-1:-1:-1;;;;;;1090:16:16::1;-1:-1:-1::0;;;;;1090:16:16;;;::::1;::::0;;;::::1;::::0;;513:2244;;2270:187:0;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;513:2244:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;513:2244:16;;;-1:-1:-1;513:2244:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:290:17;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:17;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:17:o;660:380::-;739:1;735:12;;;;782;;;803:61;;857:4;849:6;845:17;835:27;;803:61;910:2;902:6;899:14;879:18;876:38;873:161;;956:10;951:3;947:20;944:1;937:31;991:4;988:1;981:15;1019:4;1016:1;1009:15;873:161;;660:380;;;:::o;:::-;513:2244:16;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addTokenToAllTokensEnumeration_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_addTokenToOwnerEnumeration_1432": {
									"entryPoint": 7287,
									"id": 1432,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1061": {
									"entryPoint": null,
									"id": 1061,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_945": {
									"entryPoint": 3355,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_413": {
									"entryPoint": null,
									"id": 413,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1050": {
									"entryPoint": null,
									"id": 1050,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1402": {
									"entryPoint": 6028,
									"id": 1402,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2563": {
									"entryPoint": 5359,
									"id": 2563,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1691": {
									"entryPoint": 5440,
									"id": 1691,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_2578": {
									"entryPoint": 4269,
									"id": 2578,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_burn_846": {
									"entryPoint": 6212,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1039": {
									"entryPoint": 5555,
									"id": 1039,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_635": {
									"entryPoint": 3326,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_676": {
									"entryPoint": 3465,
									"id": 676,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_786": {
									"entryPoint": 6379,
									"id": 786,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_2057": {
									"entryPoint": null,
									"id": 2057,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 4533,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_removeTokenFromAllTokensEnumeration_1563": {
									"entryPoint": 7112,
									"id": 1563,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_removeTokenFromOwnerEnumeration_1515": {
									"entryPoint": 6955,
									"id": 1515,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_691": {
									"entryPoint": 4278,
									"id": 691,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_safeMint_720": {
									"entryPoint": 5504,
									"id": 720,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransfer_617": {
									"entryPoint": 4862,
									"id": 617,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_977": {
									"entryPoint": 4656,
									"id": 977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1661": {
									"entryPoint": 4304,
									"id": 1661,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 4443,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_921": {
									"entryPoint": 3699,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 4122,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@approve_456": {
									"entryPoint": 1314,
									"id": 456,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_314": {
									"entryPoint": 2624,
									"id": 314,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1225": {
									"entryPoint": 1876,
									"id": 1225,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_2085": {
									"entryPoint": null,
									"id": 2085,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_477": {
									"entryPoint": 1173,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holder_2414": {
									"entryPoint": null,
									"id": 2414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increment_2099": {
									"entryPoint": null,
									"id": 2099,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1768": {
									"entryPoint": null,
									"id": 1768,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintedHeroIds_2412": {
									"entryPoint": null,
									"id": 2412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_352": {
									"entryPoint": 1027,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_342": {
									"entryPoint": 2505,
									"id": 342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2457": {
									"entryPoint": 2817,
									"id": 2457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2759,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeMint_2540": {
									"entryPoint": 2145,
									"id": 2540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_558": {
									"entryPoint": 1849,
									"id": 558,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_588": {
									"entryPoint": 2903,
									"id": 588,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_494": {
									"entryPoint": 2888,
									"id": 494,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setHolder_2488": {
									"entryPoint": 2970,
									"id": 2488,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1276": {
									"entryPoint": 3289,
									"id": 1276,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2367": {
									"entryPoint": null,
									"id": 2367,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2610": {
									"entryPoint": 1010,
									"id": 2610,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_290": {
									"entryPoint": 5279,
									"id": 290,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_362": {
									"entryPoint": 2873,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2226": {
									"entryPoint": 6698,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenByIndex_1338": {
									"entryPoint": 1998,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenOfOwnerByIndex_1304": {
									"entryPoint": 1641,
									"id": 1304,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenURI_1639": {
									"entryPoint": 4913,
									"id": 1639,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2594": {
									"entryPoint": 2959,
									"id": 2594,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_404": {
									"entryPoint": 5812,
									"id": 404,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1315": {
									"entryPoint": null,
									"id": 1315,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_539": {
									"entryPoint": 1591,
									"id": 539,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3131,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2466": {
									"entryPoint": 1791,
									"id": 2466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 8015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 8047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8955,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c7e9122fb2cfa5343d1ce6125ef2ab5549aafcc79bd0089e4348b9110940b56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8704,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8757,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7875,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 7562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19462:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "58:87:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "103:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "108:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "99:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "99:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "88:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "78:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "71:51:17"
															},
															"nodeType": "YulIf",
															"src": "68:71:17"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "47:5:17",
														"type": ""
													}
												],
												"src": "14:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "219:176:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "265:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "274:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "277:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "267:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "267:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "267:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "240:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "249:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "236:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "236:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "232:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:32:17"
															},
															"nodeType": "YulIf",
															"src": "229:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "290:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "316:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "303:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "294:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "359:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "335:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "335:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "335:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "374:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "185:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "196:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "208:6:17",
														"type": ""
													}
												],
												"src": "150:245:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "495:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "505:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "517:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "528:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "513:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "513:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "505:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "547:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "572:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "565:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "565:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "558:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "540:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "540:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "464:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "475:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "486:4:17",
														"type": ""
													}
												],
												"src": "400:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "645:205:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "655:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "664:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "659:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "724:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "749:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "754:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "745:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "745:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "768:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "773:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "764:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "764:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "758:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "758:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "738:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "738:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "738:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "685:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "688:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "682:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "696:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "698:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "707:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "703:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "703:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "698:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "678:3:17",
																"statements": []
															},
															"src": "674:113:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "813:31:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "826:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "831:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "822:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "822:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "815:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "815:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "815:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "802:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "805:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "799:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "799:13:17"
															},
															"nodeType": "YulIf",
															"src": "796:48:17"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "623:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "628:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "633:6:17",
														"type": ""
													}
												],
												"src": "592:258:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "905:208:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "915:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "935:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "929:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "929:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "919:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "957:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "962:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "950:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "950:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "950:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1004:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1011:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1000:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1000:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1022:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1027:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1018:14:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1034:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "978:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:63:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "978:63:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1050:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1065:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1078:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1086:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1074:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1074:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1095:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1091:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1091:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1070:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1070:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:39:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1102:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1050:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "882:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "889:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "897:3:17",
														"type": ""
													}
												],
												"src": "855:258:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1239:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1256:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1267:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1249:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1249:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1249:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1279:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1305:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1317:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1328:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1287:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1287:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1279:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1208:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1219:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1230:4:17",
														"type": ""
													}
												],
												"src": "1118:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1413:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1459:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1468:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1471:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1461:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1461:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1461:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1434:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1443:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1430:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1430:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1455:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1426:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1426:32:17"
															},
															"nodeType": "YulIf",
															"src": "1423:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1484:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1507:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1494:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1484:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1379:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1390:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1402:6:17",
														"type": ""
													}
												],
												"src": "1343:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1629:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1639:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1651:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1647:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1647:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1639:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1681:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1712:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1717:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1708:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1708:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1721:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1704:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1674:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1598:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1609:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1620:4:17",
														"type": ""
													}
												],
												"src": "1528:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1795:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1795:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1887:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1896:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1889:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1889:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1889:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1846:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1857:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1872:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1877:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1868:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1868:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1881:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1864:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1864:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1853:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1853:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1843:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1836:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:50:17"
															},
															"nodeType": "YulIf",
															"src": "1833:70:17"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1764:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1775:5:17",
														"type": ""
													}
												],
												"src": "1736:173:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2001:167:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2047:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2056:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2059:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2049:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2049:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2049:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2022:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2031:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2043:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2014:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2014:32:17"
															},
															"nodeType": "YulIf",
															"src": "2011:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2072:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2082:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2072:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2147:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2158:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2130:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1959:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1970:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1982:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1990:6:17",
														"type": ""
													}
												],
												"src": "1914:254:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2274:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2284:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2296:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2307:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2292:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2292:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2284:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2326:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2337:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2243:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2254:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2265:4:17",
														"type": ""
													}
												],
												"src": "2173:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2459:224:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2472:32:17"
															},
															"nodeType": "YulIf",
															"src": "2469:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2530:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2578:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2611:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2622:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2607:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2607:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2588:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2588:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2635:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2645:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2645:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2635:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2409:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2420:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2432:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2440:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2448:6:17",
														"type": ""
													}
												],
												"src": "2355:328:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2720:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2737:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2744:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2749:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2740:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2740:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2730:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2730:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2777:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2770:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2770:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2801:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2804:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2794:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2794:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2794:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2688:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2895:557:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2905:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2915:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2909:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2960:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2962:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2962:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2962:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2948:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2956:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2945:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:14:17"
															},
															"nodeType": "YulIf",
															"src": "2942:40:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2991:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3005:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3001:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:7:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2995:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3017:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3037:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3031:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3031:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3021:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3049:73:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3071:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nodeType": "YulIdentifier",
																										"src": "3095:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3103:2:17",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3091:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3091:15:17"
																							},
																							{
																								"name": "_2",
																								"nodeType": "YulIdentifier",
																								"src": "3108:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "3087:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3087:24:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3113:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3083:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3083:33:17"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3118:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3079:42:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3067:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:55:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3053:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3181:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3183:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3183:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3183:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3140:10:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3152:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3137:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3160:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3172:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3134:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3134:46:17"
															},
															"nodeType": "YulIf",
															"src": "3131:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3219:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3223:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3212:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3212:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3212:22:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3243:15:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3252:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3243:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3274:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3282:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3267:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3267:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3267:22:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3327:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3336:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3339:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3329:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3329:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3329:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3308:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3313:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3304:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3304:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3322:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3301:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3301:25:17"
															},
															"nodeType": "YulIf",
															"src": "3298:45:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3369:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3377:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3365:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3365:17:17"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3384:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3389:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3352:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:44:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3420:6:17"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3428:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3416:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3416:19:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3412:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3412:30:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3444:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3405:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3405:41:17"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2864:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2869:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2877:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2885:5:17",
														"type": ""
													}
												],
												"src": "2820:632:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3510:169:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3559:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3568:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3571:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3561:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3561:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3561:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3538:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3546:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3534:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3534:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3553:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3530:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3523:35:17"
															},
															"nodeType": "YulIf",
															"src": "3520:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3584:89:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3632:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3640:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3628:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3628:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3660:6:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3647:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:20:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3669:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "3593:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:80:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3584:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3484:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3492:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3500:5:17",
														"type": ""
													}
												],
												"src": "3457:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3791:436:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3837:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3846:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3849:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3839:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3839:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:32:17"
															},
															"nodeType": "YulIf",
															"src": "3801:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3889:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3876:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3876:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3866:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3908:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3918:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3912:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3963:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3972:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3965:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3965:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3965:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3951:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3959:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3948:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3948:14:17"
															},
															"nodeType": "YulIf",
															"src": "3945:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3988:60:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4020:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4031:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4016:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4016:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4040:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3998:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3998:50:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4057:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4090:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4101:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4073:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:32:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4061:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4134:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4143:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4146:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4136:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4136:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4136:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4120:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4130:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4117:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4117:16:17"
															},
															"nodeType": "YulIf",
															"src": "4114:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4191:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4202:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4187:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4187:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4213:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4169:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4169:52:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4159:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3749:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3760:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3772:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3780:6:17",
														"type": ""
													}
												],
												"src": "3684:543:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:116:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4348:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4357:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4360:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4350:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4350:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4350:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4323:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4332:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4319:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4319:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4315:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4315:32:17"
															},
															"nodeType": "YulIf",
															"src": "4312:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4373:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4402:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4383:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4383:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4373:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4268:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4279:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4291:6:17",
														"type": ""
													}
												],
												"src": "4232:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4503:242:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4549:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4558:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4561:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4551:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4551:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4551:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4524:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4533:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4520:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4520:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4545:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:32:17"
															},
															"nodeType": "YulIf",
															"src": "4513:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4574:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4601:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4588:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4588:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4578:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4654:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4663:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4666:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4656:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4656:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4656:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4626:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4634:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4623:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4623:30:17"
															},
															"nodeType": "YulIf",
															"src": "4620:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4679:60:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4711:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4722:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4707:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4707:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4731:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4689:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4689:50:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4679:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4469:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4480:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4492:6:17",
														"type": ""
													}
												],
												"src": "4423:322:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4834:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4880:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4889:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4892:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4882:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4882:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4855:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4864:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4851:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4851:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4876:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4847:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:32:17"
															},
															"nodeType": "YulIf",
															"src": "4844:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4905:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4934:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4915:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4915:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4905:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4953:45:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4983:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4994:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4979:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4979:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4966:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4966:32:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4957:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5051:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5060:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5063:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5053:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5053:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5053:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5020:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5041:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5034:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5034:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5027:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5027:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5017:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5017:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5010:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:40:17"
															},
															"nodeType": "YulIf",
															"src": "5007:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5076:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5086:5:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5076:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4792:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4803:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4815:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4823:6:17",
														"type": ""
													}
												],
												"src": "4750:347:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5232:537:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5279:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5288:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5291:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5281:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5281:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5281:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5253:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5249:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5274:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5245:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:33:17"
															},
															"nodeType": "YulIf",
															"src": "5242:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5304:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5333:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5314:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5314:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5304:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5352:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5385:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5396:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5381:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5362:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5362:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5352:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5409:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5436:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5447:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5432:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5432:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5419:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5419:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5409:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5460:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5491:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5502:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5487:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5474:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5464:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5549:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5558:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5561:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5551:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5551:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5551:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5521:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5529:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5518:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5518:30:17"
															},
															"nodeType": "YulIf",
															"src": "5515:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5574:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5588:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5599:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5578:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5654:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5663:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5666:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5656:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5656:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5656:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "5633:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5637:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5629:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5629:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5644:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5625:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5625:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5618:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:35:17"
															},
															"nodeType": "YulIf",
															"src": "5615:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5679:84:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5728:2:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5732:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5724:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5724:11:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5750:2:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5737:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:16:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5755:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nodeType": "YulIdentifier",
																	"src": "5689:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5689:74:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5174:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5185:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5197:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5205:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5213:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5221:6:17",
														"type": ""
													}
												],
												"src": "5102:667:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5861:173:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5907:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5916:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5919:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5909:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5909:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5891:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5878:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5878:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5903:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5874:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5874:32:17"
															},
															"nodeType": "YulIf",
															"src": "5871:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5932:39:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5961:9:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5942:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:29:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5932:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5980:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6013:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6024:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6009:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6009:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5990:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:38:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5980:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5819:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5830:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5842:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5850:6:17",
														"type": ""
													}
												],
												"src": "5774:260:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6094:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6104:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6118:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6121:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6114:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6104:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6135:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6165:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6171:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6161:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6161:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6139:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6212:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6214:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6228:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6236:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6224:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6224:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6214:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6192:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:26:17"
															},
															"nodeType": "YulIf",
															"src": "6182:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6302:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6323:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6330:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6335:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6326:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6316:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6316:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6316:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6367:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6370:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6360:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6360:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6360:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6395:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6398:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6388:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6388:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6388:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6258:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6281:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6289:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6278:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6278:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6255:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:38:17"
															},
															"nodeType": "YulIf",
															"src": "6252:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6074:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6083:6:17",
														"type": ""
													}
												],
												"src": "6039:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6598:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6615:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6608:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6608:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6660:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6645:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6665:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6638:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6638:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6638:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6688:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6699:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6684:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6684:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6704:34:17",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6677:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6677:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6759:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6770:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:18:17"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6775:14:17",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6799:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6811:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6822:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6807:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6807:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6799:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6575:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6589:4:17",
														"type": ""
													}
												],
												"src": "6424:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7011:223:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7028:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7039:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7021:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7021:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7021:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7062:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7073:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7058:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7078:2:17",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7051:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7051:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7051:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7101:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7112:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7097:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7097:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7117:34:17",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7090:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7172:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7183:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7168:18:17"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7188:3:17",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7161:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7161:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7161:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7201:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7213:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7224:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7209:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7209:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7201:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6988:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7002:4:17",
														"type": ""
													}
												],
												"src": "6837:397:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7413:246:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7430:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7441:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7423:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7464:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7475:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7460:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7460:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7480:2:17",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7453:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7453:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7453:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7514:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7519:34:17",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7492:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7492:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7574:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7585:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7570:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7570:18:17"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7590:26:17",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7563:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7563:54:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7563:54:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7626:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7638:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7649:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7634:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7626:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7390:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7404:4:17",
														"type": ""
													}
												],
												"src": "7239:420:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7838:239:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7855:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7866:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7848:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7848:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7848:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7889:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7900:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7885:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7885:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7905:2:17",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7878:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7878:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7878:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7928:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7939:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7924:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7924:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7944:34:17",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7917:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7917:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7917:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7999:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8010:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7995:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7995:18:17"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8015:19:17",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7988:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7988:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7988:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8044:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8056:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8067:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8052:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8044:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7815:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7829:4:17",
														"type": ""
													}
												],
												"src": "7664:413:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8256:233:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8273:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8284:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8266:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8266:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8266:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8307:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8318:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8303:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8303:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8323:2:17",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8296:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8296:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8296:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8346:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8357:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8342:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8342:18:17"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f75",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8362:34:17",
																		"type": "",
																		"value": "ERC721Enumerable: owner index ou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8335:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8335:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8335:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8428:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8413:18:17"
																	},
																	{
																		"hexValue": "74206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8433:13:17",
																		"type": "",
																		"value": "t of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8406:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8406:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8456:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8468:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8479:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8464:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8464:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8456:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8233:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8247:4:17",
														"type": ""
													}
												],
												"src": "8082:407:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8668:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8685:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8696:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8678:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8678:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8678:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8719:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8730:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8715:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8715:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8735:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8708:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8708:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8758:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8769:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8754:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8754:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8774:34:17",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8747:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8747:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8747:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8818:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8830:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8841:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8826:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8826:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8818:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8645:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8659:4:17",
														"type": ""
													}
												],
												"src": "8494:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9029:238:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9046:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9039:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9039:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9039:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9080:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9091:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9076:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9076:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9096:2:17",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9069:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9069:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9119:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9130:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9115:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9115:18:17"
																	},
																	{
																		"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9135:34:17",
																		"type": "",
																		"value": "ERC721Burnable: caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9108:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9108:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9108:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9190:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9201:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9186:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9186:18:17"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9206:18:17",
																		"type": "",
																		"value": "ner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9179:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9179:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9179:46:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9234:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9246:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9257:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9242:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9242:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9006:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9020:4:17",
														"type": ""
													}
												],
												"src": "8855:412:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9446:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9463:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9474:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9456:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9497:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9513:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9536:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9547:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9532:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9532:18:17"
																	},
																	{
																		"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9552:34:17",
																		"type": "",
																		"value": "ERC721Enumerable: global index o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9525:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9525:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9525:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:18:17"
																	},
																	{
																		"hexValue": "7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9623:14:17",
																		"type": "",
																		"value": "ut of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9647:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9659:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9670:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9655:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9655:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9647:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9423:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9437:4:17",
														"type": ""
													}
												],
												"src": "9272:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9717:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9734:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9741:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9746:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9737:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9737:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9727:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9727:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9777:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9767:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9767:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9767:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9798:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9791:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9791:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9791:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9685:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9956:137:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9966:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9986:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9980:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9980:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9970:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10028:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10036:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10024:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10024:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10043:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10048:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "10002:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10064:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10075:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10080:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10071:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10071:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9932:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9937:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9948:3:17",
														"type": ""
													}
												],
												"src": "9817:276:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10272:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10289:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10300:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10282:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10282:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10282:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10323:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10334:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10319:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10319:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10339:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10312:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10312:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10312:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10362:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10373:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10358:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10358:18:17"
																	},
																	{
																		"hexValue": "54726962616c70756e6b4e46543a206865726f20616c72656164792077617320",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10378:34:17",
																		"type": "",
																		"value": "TribalpunkNFT: hero already was "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10351:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10351:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10351:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10433:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10444:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10429:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10429:18:17"
																	},
																	{
																		"hexValue": "6d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10449:8:17",
																		"type": "",
																		"value": "minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10422:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10422:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10422:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10467:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10479:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10490:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10475:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10475:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10467:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c7e9122fb2cfa5343d1ce6125ef2ab5549aafcc79bd0089e4348b9110940b56__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10249:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10263:4:17",
														"type": ""
													}
												],
												"src": "10098:402:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10702:257:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10719:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10730:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10712:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10712:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10712:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10757:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10768:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10753:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10753:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10773:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10746:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10746:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10746:30:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10785:59:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10817:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10829:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10840:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10825:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10825:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10799:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:45:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10789:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10864:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10875:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10860:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10860:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "10884:6:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10892:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10880:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10880:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10853:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10853:50:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10853:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10912:41:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10938:6:17"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10946:6:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10920:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10920:33:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10912:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10655:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10666:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10674:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10682:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10693:4:17",
														"type": ""
													}
												],
												"src": "10505:454:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11138:231:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11155:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11166:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11148:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11148:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11148:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11189:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11200:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11185:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11185:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11205:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11178:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11178:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11178:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11228:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11239:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11224:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11224:18:17"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11244:34:17",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11217:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11217:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11217:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11299:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11310:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11295:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11295:18:17"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11315:11:17",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11288:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11288:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11288:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11336:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11348:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11359:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11344:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11344:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11336:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11115:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11129:4:17",
														"type": ""
													}
												],
												"src": "10964:405:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11548:232:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11565:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11576:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11558:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11558:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11558:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11599:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11610:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11595:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11595:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11615:2:17",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11588:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11588:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11588:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11638:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11649:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11634:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11634:18:17"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11654:34:17",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11627:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11709:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11720:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11705:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11705:18:17"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11725:12:17",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11698:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11698:40:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11698:40:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11747:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11759:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11770:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11755:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11747:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11525:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11539:4:17",
														"type": ""
													}
												],
												"src": "11374:406:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11959:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11976:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11987:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11969:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11969:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11969:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12010:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12021:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12006:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12006:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12026:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11999:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11999:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11999:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12049:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12060:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12045:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12045:18:17"
																	},
																	{
																		"hexValue": "496e76616c696420686f6c6465722061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12065:24:17",
																		"type": "",
																		"value": "Invalid holder address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12038:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12038:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12038:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12099:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12111:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12122:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12107:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12099:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11936:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11950:4:17",
														"type": ""
													}
												],
												"src": "11785:346:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12310:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12327:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12338:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12320:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12320:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12320:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12361:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12372:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12357:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12357:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12377:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12350:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12350:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12400:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12411:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12396:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12396:18:17"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12416:34:17",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12389:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12389:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12389:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12471:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12482:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12467:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12467:18:17"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12487:8:17",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12460:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12460:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12460:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12505:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12517:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12528:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12513:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12513:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12505:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12287:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12301:4:17",
														"type": ""
													}
												],
												"src": "12136:402:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12717:234:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12734:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12745:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12727:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12727:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12727:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12768:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12779:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12764:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12764:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12784:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12757:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12757:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12757:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12807:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12818:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12803:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12803:18:17"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12823:34:17",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12796:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12796:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12796:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12878:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12889:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12874:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12874:18:17"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12894:14:17",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12867:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12867:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12867:42:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12918:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12930:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12941:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12926:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12926:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12918:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12694:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12708:4:17",
														"type": ""
													}
												],
												"src": "12543:408:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13130:227:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13147:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13158:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13140:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13140:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13140:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13181:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13192:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13177:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13177:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13197:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13170:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13170:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13170:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13220:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13231:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13216:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13216:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13236:34:17",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13209:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13209:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13209:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13291:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13302:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13287:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13287:18:17"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13307:7:17",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13280:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13280:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13280:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13324:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13336:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13347:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13332:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13324:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13107:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13121:4:17",
														"type": ""
													}
												],
												"src": "12956:401:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13536:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13553:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13564:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13546:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13546:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13546:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13587:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13598:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13583:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13583:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13603:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13576:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13576:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13576:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13626:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13637:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13622:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13622:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13642:34:17",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13615:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13615:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13615:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13697:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13708:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13693:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:18:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13713:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13686:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13686:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13686:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13729:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13741:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13752:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13737:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13737:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13729:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13513:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13527:4:17",
														"type": ""
													}
												],
												"src": "13362:400:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13799:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13816:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13823:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13828:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13819:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13819:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13809:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13809:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13809:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13856:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13859:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13849:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13849:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13849:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13880:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13883:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13873:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13873:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13873:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13767:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13948:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13970:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13972:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13972:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13972:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13964:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13967:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13961:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13961:8:17"
															},
															"nodeType": "YulIf",
															"src": "13958:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14001:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14013:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14016:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14009:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14009:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14001:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13930:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13933:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13939:4:17",
														"type": ""
													}
												],
												"src": "13899:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14077:80:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14104:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14106:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14106:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14106:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14093:1:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14100:1:17"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "14096:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14096:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14090:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14090:13:17"
															},
															"nodeType": "YulIf",
															"src": "14087:39:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14135:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14146:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14149:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14142:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14142:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14135:3:17"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14060:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14063:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14069:3:17",
														"type": ""
													}
												],
												"src": "14029:128:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14336:170:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14353:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14364:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14346:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14346:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14346:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14387:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14398:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14383:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14383:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14403:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14376:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14376:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14376:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14426:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14437:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14422:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14422:18:17"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14442:22:17",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14415:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14415:50:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14415:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14474:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14486:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14497:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14482:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14482:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14474:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14313:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14327:4:17",
														"type": ""
													}
												],
												"src": "14162:344:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14685:236:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14702:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14713:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14695:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14736:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14747:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14732:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14732:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14752:2:17",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14725:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14725:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14725:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14775:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14786:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14771:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14771:18:17"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14791:34:17",
																		"type": "",
																		"value": "ERC721URIStorage: URI set of non"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14764:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14764:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14764:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14846:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14857:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14842:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14842:18:17"
																	},
																	{
																		"hexValue": "6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14862:16:17",
																		"type": "",
																		"value": "existent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14835:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14835:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14835:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14888:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14900:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14911:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14896:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14896:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14888:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14662:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14676:4:17",
														"type": ""
													}
												],
												"src": "14511:410:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15100:166:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15117:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15128:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15110:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15110:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15110:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15151:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15162:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15147:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15147:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15167:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15140:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15140:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15140:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15190:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15201:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15186:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15186:18:17"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15206:18:17",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15179:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15179:46:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15179:46:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15234:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15246:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15257:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15242:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15242:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15234:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15077:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15091:4:17",
														"type": ""
													}
												],
												"src": "14926:340:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15445:175:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15462:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15473:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15455:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15455:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15455:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15496:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15507:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15492:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15492:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15512:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15485:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15485:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15485:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15535:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15546:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15531:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15531:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15551:27:17",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15524:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15524:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15524:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15588:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15600:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15611:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15596:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15596:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15588:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15422:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15436:4:17",
														"type": ""
													}
												],
												"src": "15271:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15799:240:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15816:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15827:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15809:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15809:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15809:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15850:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15861:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15846:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15846:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15866:2:17",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15839:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15839:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15839:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15889:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15900:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15885:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15885:18:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15905:34:17",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15878:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15878:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15878:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15960:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15971:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15956:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15956:18:17"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15976:20:17",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15949:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15949:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15949:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16006:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16018:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16029:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16014:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16014:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16006:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15776:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15790:4:17",
														"type": ""
													}
												],
												"src": "15625:414:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16218:239:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16235:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16246:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16228:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16228:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16228:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16269:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16280:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16265:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16265:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16285:2:17",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16258:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16258:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16258:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16308:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16319:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16304:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16304:18:17"
																	},
																	{
																		"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f7220",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16324:34:17",
																		"type": "",
																		"value": "ERC721URIStorage: URI query for "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16297:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16297:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16297:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16379:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16390:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16375:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16375:18:17"
																	},
																	{
																		"hexValue": "6e6f6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16395:19:17",
																		"type": "",
																		"value": "nonexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16368:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16368:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16368:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16424:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16436:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16447:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16432:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16432:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16424:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16195:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16209:4:17",
														"type": ""
													}
												],
												"src": "16044:413:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16649:283:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16659:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16679:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16673:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16663:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16721:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16729:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16717:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16717:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16736:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16741:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16695:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16695:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16695:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16757:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16774:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16779:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16770:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16770:16:17"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nodeType": "YulTypedName",
																	"src": "16761:5:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16795:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16817:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16811:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16811:13:17"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "16799:8:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "16859:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16867:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16855:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16855:17:17"
																	},
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "16874:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "16881:8:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16833:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16833:57:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16833:57:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16899:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nodeType": "YulIdentifier",
																		"src": "16910:5:17"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "16917:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16906:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16906:20:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16899:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16617:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16622:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16630:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16641:3:17",
														"type": ""
													}
												],
												"src": "16462:470:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17140:286:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17150:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17168:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17173:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17164:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17164:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17177:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "17160:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17160:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "17154:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17195:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17210:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17218:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17206:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17206:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17188:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17188:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17188:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17242:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17253:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17238:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17238:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17262:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "17270:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17258:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17258:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17231:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17231:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17231:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17294:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17305:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17290:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17290:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "17310:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17283:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17283:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17283:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17337:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17348:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17333:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17333:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17353:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17326:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17326:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17326:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17366:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "17392:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17404:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17415:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17400:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17400:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "17374:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17374:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17366:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17085:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "17096:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "17104:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17112:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17120:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17131:4:17",
														"type": ""
													}
												],
												"src": "16937:489:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17511:169:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17557:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17566:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17569:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17559:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17559:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17559:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17532:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17541:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17528:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17528:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17553:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "17524:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17524:32:17"
															},
															"nodeType": "YulIf",
															"src": "17521:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17582:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17601:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17595:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17595:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "17586:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17644:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "17620:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17620:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17620:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17659:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "17669:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "17659:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17477:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "17488:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17500:6:17",
														"type": ""
													}
												],
												"src": "17431:249:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17859:237:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17876:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17887:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17869:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17869:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17869:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17910:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17921:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17906:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17906:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17926:2:17",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17899:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17899:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17899:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17949:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17960:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17945:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17945:18:17"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17965:34:17",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17938:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17938:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17938:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18020:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18031:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18016:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18016:18:17"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18036:17:17",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18009:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18009:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18009:45:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18063:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18075:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18086:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18071:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18071:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18063:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17836:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17850:4:17",
														"type": ""
													}
												],
												"src": "17685:411:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18275:182:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18292:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18303:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18285:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18285:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18285:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18326:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18337:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18322:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18322:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18342:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18315:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18315:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18315:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18365:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18376:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18361:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18361:18:17"
																	},
																	{
																		"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18381:34:17",
																		"type": "",
																		"value": "ERC721: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18354:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18354:62:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18354:62:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18425:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18437:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18448:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18433:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18433:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18425:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18252:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18266:4:17",
														"type": ""
													}
												],
												"src": "18101:356:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18636:178:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18653:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18664:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18646:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18646:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18646:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18687:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18698:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18683:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18683:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18703:2:17",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18676:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18676:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18676:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18726:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18737:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18722:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18722:18:17"
																	},
																	{
																		"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18742:30:17",
																		"type": "",
																		"value": "ERC721: token already minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18715:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18715:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18715:58:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18782:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18794:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18805:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18790:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18790:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18782:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18613:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18627:4:17",
														"type": ""
													}
												],
												"src": "18462:352:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18866:88:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18897:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "18899:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18899:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18899:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18882:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18893:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "18889:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18889:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18879:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18879:17:17"
															},
															"nodeType": "YulIf",
															"src": "18876:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18928:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18939:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18946:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18935:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18935:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "18928:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18848:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18858:3:17",
														"type": ""
													}
												],
												"src": "18819:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18991:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19008:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19015:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19020:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19011:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19011:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19001:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19001:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19001:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19048:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19051:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19041:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19041:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19041:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19072:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19075:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19065:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19065:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19065:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "18959:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19137:74:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19160:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19162:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19162:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19162:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19157:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19150:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19150:9:17"
															},
															"nodeType": "YulIf",
															"src": "19147:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19191:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19200:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19203:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "19196:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19196:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19191:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19122:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19125:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19131:1:17",
														"type": ""
													}
												],
												"src": "19091:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19254:74:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19277:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "19279:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19279:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19279:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19274:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19267:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19267:9:17"
															},
															"nodeType": "YulIf",
															"src": "19264:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19308:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "19317:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "19320:1:17"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "19313:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19313:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "19308:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19239:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19242:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "19248:1:17",
														"type": ""
													}
												],
												"src": "19216:112:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19365:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19382:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19389:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19394:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "19385:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19385:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19375:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19375:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19375:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19422:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19425:4:17",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19415:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19415:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19415:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19446:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19449:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "19439:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19439:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19439:15:17"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "19333:127:17"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value3 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"ERC721Enumerable: owner index ou\")\n        mstore(add(headStart, 96), \"t of bounds\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"ERC721Burnable: caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721Enumerable: global index o\")\n        mstore(add(headStart, 96), \"ut of bounds\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_2c7e9122fb2cfa5343d1ce6125ef2ab5549aafcc79bd0089e4348b9110940b56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"TribalpunkNFT: hero already was \")\n        mstore(add(headStart, 96), \"minted\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid holder address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC721: transfer from incorrect \")\n        mstore(add(headStart, 96), \"owner\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI set of non\")\n        mstore(add(headStart, 96), \"existent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721URIStorage: URI query for \")\n        mstore(add(headStart, 96), \"nonexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80636352211e116100f9578063a22cb46511610097578063d979f5aa11610071578063d979f5aa1461037d578063e534155d14610390578063e985e9c5146103a3578063f2fde38b146103df57600080fd5b8063a22cb46514610344578063b88d4fde14610357578063c87b56dd1461036a57600080fd5b80637c90b182116100d35780637c90b182146102f05780638456cb591461031e5780638da5cb5b1461032657806395d89b411461033c57600080fd5b80636352211e146102c257806370a08231146102d5578063715018a6146102e857600080fd5b80632f745c591161016657806342966c681161014057806342966c681461027e5780634f6ccce7146102915780634fa1f7ae146102a45780635c975abb146102b757600080fd5b80632f745c59146102505780633f4ba83a1461026357806342842e0e1461026b57600080fd5b806301ffc9a7146101ae57806306fdde03146101d6578063081812fc146101eb578063095ea7b31461021657806318160ddd1461022b57806323b872dd1461023d575b600080fd5b6101c16101bc366004611da0565b6103f2565b60405190151581526020015b60405180910390f35b6101de610403565b6040516101cd9190611e15565b6101fe6101f9366004611e28565b610495565b6040516001600160a01b0390911681526020016101cd565b610229610224366004611e5d565b610522565b005b6008545b6040519081526020016101cd565b61022961024b366004611e87565b610637565b61022f61025e366004611e5d565b610669565b6102296106ff565b610229610279366004611e87565b610739565b61022961028c366004611e28565b610754565b61022f61029f366004611e28565b6107ce565b6102296102b2366004611f6f565b610861565b600b5460ff166101c1565b6101fe6102d0366004611e28565b6109c9565b61022f6102e3366004611fd3565b610a40565b610229610ac7565b6101c16102fe366004611fee565b8051602081830181018051600d8252928201919093012091525460ff1681565b610229610b01565b600b5461010090046001600160a01b03166101fe565b6101de610b39565b610229610352366004612023565b610b48565b61022961036536600461205f565b610b57565b6101de610378366004611e28565b610b8f565b61022961038b366004611fd3565b610b9a565b600e546101fe906001600160a01b031681565b6101c16103b13660046120db565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102296103ed366004611fd3565b610c3b565b60006103fd82610cd9565b92915050565b6060600080546104129061210e565b80601f016020809104026020016040519081016040528092919081815260200182805461043e9061210e565b801561048b5780601f106104605761010080835404028352916020019161048b565b820191906000526020600020905b81548152906001019060200180831161046e57829003601f168201915b5050505050905090565b60006104a082610cfe565b6105065760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061052d826109c9565b9050806001600160a01b0316836001600160a01b03160361059a5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016104fd565b336001600160a01b03821614806105b657506105b681336103b1565b6106285760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016104fd565b6106328383610d1b565b505050565b610642335b82610d89565b61065e5760405162461bcd60e51b81526004016104fd90612148565b610632838383610e73565b600061067483610a40565b82106106d65760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b60648201526084016104fd565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b600b546001600160a01b0361010090910416331461072f5760405162461bcd60e51b81526004016104fd90612199565b61073761101a565b565b61063283838360405180602001604052806000815250610b57565b61075d3361063c565b6107c25760405162461bcd60e51b815260206004820152603060248201527f4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f7760448201526f1b995c881b9bdc88185c1c1c9bdd995960821b60648201526084016104fd565b6107cb816110ad565b50565b60006107d960085490565b821061083c5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b60648201526084016104fd565b6008828154811061084f5761084f6121ce565b90600052602060002001549050919050565b600b546001600160a01b036101009091041633146108915760405162461bcd60e51b81526004016104fd90612199565b600d826040516108a191906121e4565b9081526040519081900360200190205460ff16156109105760405162461bcd60e51b815260206004820152602660248201527f54726962616c70756e6b4e46543a206865726f20616c726561647920776173206044820152651b5a5b9d195960d21b60648201526084016104fd565b600061091b600c5490565b905061092b600c80546001019055565b600e54610941906001600160a01b0316826110b6565b61094b81846110d0565b6001600d8460405161095d91906121e4565b908152604051908190036020018120805492151560ff1990931692909217909155600e546001600160a01b0316907f0372de3fa001ec655fcb2f8096e13cb1f68d1b8b9bb9d2674fc7d880de7e8045906109bc90849087908790612200565b60405180910390a2505050565b6000818152600260205260408120546001600160a01b0316806103fd5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016104fd565b60006001600160a01b038216610aab5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016104fd565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b03610100909104163314610af75760405162461bcd60e51b81526004016104fd90612199565b610737600061115b565b600b546001600160a01b03610100909104163314610b315760405162461bcd60e51b81526004016104fd90612199565b6107376111b5565b6060600180546104129061210e565b610b53338383611230565b5050565b610b613383610d89565b610b7d5760405162461bcd60e51b81526004016104fd90612148565b610b89848484846112fe565b50505050565b60606103fd82611331565b600b546001600160a01b03610100909104163314610bca5760405162461bcd60e51b81526004016104fd90612199565b6001600160a01b038116610c195760405162461bcd60e51b8152602060048201526016602482015275496e76616c696420686f6c646572206164647265737360501b60448201526064016104fd565b600e80546001600160a01b0319166001600160a01b0392909216919091179055565b600b546001600160a01b03610100909104163314610c6b5760405162461bcd60e51b81526004016104fd90612199565b6001600160a01b038116610cd05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fd565b6107cb8161115b565b60006001600160e01b0319821663780e9d6360e01b14806103fd57506103fd8261149f565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d50826109c9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610d9482610cfe565b610df55760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016104fd565b6000610e00836109c9565b9050806001600160a01b0316846001600160a01b03161480610e4757506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610e6b5750836001600160a01b0316610e6084610495565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e86826109c9565b6001600160a01b031614610eea5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016104fd565b6001600160a01b038216610f4c5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016104fd565b610f578383836114ef565b610f62600082610d1b565b6001600160a01b0383166000908152600360205260408120805460019290610f8b90849061224b565b90915550506001600160a01b0382166000908152600360205260408120805460019290610fb9908490612262565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600b5460ff166110635760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104fd565b600b805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6107cb81611540565b610b53828260405180602001604052806000815250611580565b6110d982610cfe565b61113c5760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084016104fd565b6000828152600a60209081526040909120825161063292840190611cbb565b600b80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600b5460ff16156111fb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104fd565b600b805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110903390565b816001600160a01b0316836001600160a01b0316036112915760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016104fd565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611309848484610e73565b611315848484846115b3565b610b895760405162461bcd60e51b81526004016104fd9061227a565b606061133c82610cfe565b6113a25760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b60648201526084016104fd565b6000828152600a6020526040812080546113bb9061210e565b80601f01602080910402602001604051908101604052809291908181526020018280546113e79061210e565b80156114345780601f1061140957610100808354040283529160200191611434565b820191906000526020600020905b81548152906001019060200180831161141757829003601f168201915b50505050509050600061145260408051602081019091526000815290565b90508051600003611464575092915050565b81511561149657808260405160200161147e9291906122cc565b60405160208183030381529060405292505050919050565b610e6b846116b4565b60006001600160e01b031982166380ac58cd60e01b14806114d057506001600160e01b03198216635b5e139f60e01b145b806103fd57506301ffc9a760e01b6001600160e01b03198316146103fd565b600b5460ff16156115355760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104fd565b61063283838361178c565b61154981611844565b6000818152600a6020526040902080546115629061210e565b1590506107cb576000818152600a602052604081206107cb91611d3f565b61158a83836118eb565b61159760008484846115b3565b6106325760405162461bcd60e51b81526004016104fd9061227a565b60006001600160a01b0384163b156116a957604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115f79033908990889088906004016122fb565b6020604051808303816000875af1925050508015611632575060408051601f3d908101601f1916820190925261162f9181019061232e565b60015b61168f573d808015611660576040519150601f19603f3d011682016040523d82523d6000602084013e611665565b606091505b5080516000036116875760405162461bcd60e51b81526004016104fd9061227a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610e6b565b506001949350505050565b60606116bf82610cfe565b6117235760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016104fd565b600061173a60408051602081019091526000815290565b9050600081511161175a5760405180602001604052806000815250611785565b8061176484611a2a565b6040516020016117759291906122cc565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166117e7576117e281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61180a565b816001600160a01b0316836001600160a01b03161461180a5761180a8382611b2b565b6001600160a01b0382166118215761063281611bc8565b826001600160a01b0316826001600160a01b031614610632576106328282611c77565b600061184f826109c9565b905061185d816000846114ef565b611868600083610d1b565b6001600160a01b038116600090815260036020526040812080546001929061189190849061224b565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b0382166119415760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016104fd565b61194a81610cfe565b156119975760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016104fd565b6119a3600083836114ef565b6001600160a01b03821660009081526003602052604081208054600192906119cc908490612262565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b606081600003611a515750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a7b5780611a658161234b565b9150611a749050600a8361237a565b9150611a55565b60008167ffffffffffffffff811115611a9657611a96611ec3565b6040519080825280601f01601f191660200182016040528015611ac0576020820181803683370190505b5090505b8415610e6b57611ad560018361224b565b9150611ae2600a8661238e565b611aed906030612262565b60f81b818381518110611b0257611b026121ce565b60200101906001600160f81b031916908160001a905350611b24600a8661237a565b9450611ac4565b60006001611b3884610a40565b611b42919061224b565b600083815260076020526040902054909150808214611b95576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611bda9060019061224b565b60008381526009602052604081205460088054939450909284908110611c0257611c026121ce565b906000526020600020015490508060088381548110611c2357611c236121ce565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c5b57611c5b6123a2565b6001900381819060005260206000200160009055905550505050565b6000611c8283610a40565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b828054611cc79061210e565b90600052602060002090601f016020900481019282611ce95760008555611d2f565b82601f10611d0257805160ff1916838001178555611d2f565b82800160010185558215611d2f579182015b82811115611d2f578251825591602001919060010190611d14565b50611d3b929150611d75565b5090565b508054611d4b9061210e565b6000825580601f10611d5b575050565b601f0160209004906000526020600020908101906107cb91905b5b80821115611d3b5760008155600101611d76565b6001600160e01b0319811681146107cb57600080fd5b600060208284031215611db257600080fd5b813561178581611d8a565b60005b83811015611dd8578181015183820152602001611dc0565b83811115610b895750506000910152565b60008151808452611e01816020860160208601611dbd565b601f01601f19169290920160200192915050565b6020815260006117856020830184611de9565b600060208284031215611e3a57600080fd5b5035919050565b80356001600160a01b0381168114611e5857600080fd5b919050565b60008060408385031215611e7057600080fd5b611e7983611e41565b946020939093013593505050565b600080600060608486031215611e9c57600080fd5b611ea584611e41565b9250611eb360208501611e41565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ef457611ef4611ec3565b604051601f8501601f19908116603f01168101908282118183101715611f1c57611f1c611ec3565b81604052809350858152868686011115611f3557600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611f6057600080fd5b61178583833560208501611ed9565b60008060408385031215611f8257600080fd5b823567ffffffffffffffff80821115611f9a57600080fd5b611fa686838701611f4f565b93506020850135915080821115611fbc57600080fd5b50611fc985828601611f4f565b9150509250929050565b600060208284031215611fe557600080fd5b61178582611e41565b60006020828403121561200057600080fd5b813567ffffffffffffffff81111561201757600080fd5b610e6b84828501611f4f565b6000806040838503121561203657600080fd5b61203f83611e41565b91506020830135801515811461205457600080fd5b809150509250929050565b6000806000806080858703121561207557600080fd5b61207e85611e41565b935061208c60208601611e41565b925060408501359150606085013567ffffffffffffffff8111156120af57600080fd5b8501601f810187136120c057600080fd5b6120cf87823560208401611ed9565b91505092959194509250565b600080604083850312156120ee57600080fd5b6120f783611e41565b915061210560208401611e41565b90509250929050565b600181811c9082168061212257607f821691505b60208210810361214257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600082516121f6818460208701611dbd565b9190910192915050565b8381526060602082015260006122196060830185611de9565b828103604084015261222b8185611de9565b9695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008282101561225d5761225d612235565b500390565b6000821982111561227557612275612235565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b600083516122de818460208801611dbd565b8351908301906122f2818360208801611dbd565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061222b90830184611de9565b60006020828403121561234057600080fd5b815161178581611d8a565b60006001820161235d5761235d612235565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261238957612389612364565b500490565b60008261239d5761239d612364565b500690565b634e487b7160e01b600052603160045260246000fdfea264697066735822122091209a5b1acf5c322c97b7a096220c9df9df1979b4e9d68995169190d5940f9e64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD979F5AA GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD979F5AA EQ PUSH2 0x37D JUMPI DUP1 PUSH4 0xE534155D EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x36A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7C90B182 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x7C90B182 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x31E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x4FA1F7AE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH2 0x403 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1E15 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x1F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x495 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x522 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x229 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x637 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x25E CALLDATASIZE PUSH1 0x4 PUSH2 0x1E5D JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x6FF JUMP JUMPDEST PUSH2 0x229 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E87 JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x754 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F6F JUMP JUMPDEST PUSH2 0x861 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x1C1 JUMP JUMPDEST PUSH2 0x1FE PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST PUSH2 0x22F PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xA40 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xAC7 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1FEE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0xD DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FE JUMP JUMPDEST PUSH2 0x1DE PUSH2 0xB39 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x352 CALLDATASIZE PUSH1 0x4 PUSH2 0x2023 JUMP JUMPDEST PUSH2 0xB48 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x205F JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x1DE PUSH2 0x378 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E28 JUMP JUMPDEST PUSH2 0xB8F JUMP JUMPDEST PUSH2 0x229 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xB9A JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1FE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD3 JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD DUP3 PUSH2 0xCD9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x43E SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x48B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x460 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x48B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x46E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A0 DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x506 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52D DUP3 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x59A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x5B6 JUMPI POP PUSH2 0x5B6 DUP2 CALLER PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x628 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 PUSH2 0xD1B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x642 CALLER JUMPDEST DUP3 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x65E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x674 DUP4 PUSH2 0xA40 JUMP JUMPDEST DUP3 LT PUSH2 0x6D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A206F776E657220696E646578206F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x74206F6620626F756E6473 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x72F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x737 PUSH2 0x101A JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x75D CALLER PUSH2 0x63C JUMP JUMPDEST PUSH2 0x7C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x1B995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x82 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x10AD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D9 PUSH1 0x8 SLOAD SWAP1 JUMP JUMPDEST DUP3 LT PUSH2 0x83C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243373231456E756D657261626C653A20676C6F62616C20696E646578206F PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x7574206F6620626F756E6473 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x8 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84F JUMPI PUSH2 0x84F PUSH2 0x21CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x891 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0xD DUP3 PUSH1 0x40 MLOAD PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x910 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726962616C70756E6B4E46543A206865726F20616C72656164792077617320 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B5A5B9D1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91B PUSH1 0xC SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x92B PUSH1 0xC DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x941 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH2 0x10B6 JUMP JUMPDEST PUSH2 0x94B DUP2 DUP5 PUSH2 0x10D0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD DUP5 PUSH1 0x40 MLOAD PUSH2 0x95D SWAP2 SWAP1 PUSH2 0x21E4 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x372DE3FA001EC655FCB2F8096E13CB1F68D1B8B9BB9D2674FC7D880DE7E8045 SWAP1 PUSH2 0x9BC SWAP1 DUP5 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH2 0x2200 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x3FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x737 PUSH1 0x0 PUSH2 0x115B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xB31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x737 PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x412 SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH2 0xB53 CALLER DUP4 DUP4 PUSH2 0x1230 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB61 CALLER DUP4 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0xB7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2148 JUMP JUMPDEST PUSH2 0xB89 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12FE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x3FD DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xBCA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C696420686F6C6465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0xC6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x2199 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x115B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x780E9D63 PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x3FD JUMPI POP PUSH2 0x3FD DUP3 PUSH2 0x149F JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD50 DUP3 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD94 DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE00 DUP4 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xE47 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0xE6B JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE60 DUP5 PUSH2 0x495 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE86 DUP3 PUSH2 0x9C9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF4C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0xF57 DUP4 DUP4 DUP4 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0xF62 PUSH1 0x0 DUP3 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xF8B SWAP1 DUP5 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0xFB9 SWAP1 DUP5 SWAP1 PUSH2 0x2262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND PUSH2 0x1063 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x7CB DUP2 PUSH2 0x1540 JUMP JUMPDEST PUSH2 0xB53 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1580 JUMP JUMPDEST PUSH2 0x10D9 DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x32BC34B9BA32B73A103A37B5B2B7 PUSH1 0x91 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x632 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1090 CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1291 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1309 DUP5 DUP5 DUP5 PUSH2 0xE73 JUMP JUMPDEST PUSH2 0x1315 DUP5 DUP5 DUP5 DUP5 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0xB89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x133C DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x13A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524337323155524953746F726167653A2055524920717565727920666F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737B732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x13BB SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13E7 SWAP1 PUSH2 0x210E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1434 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1409 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1434 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1417 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1452 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1464 JUMPI POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1496 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x147E SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6B DUP5 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x14D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x3FD JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x3FD JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x632 DUP4 DUP4 DUP4 PUSH2 0x178C JUMP JUMPDEST PUSH2 0x1549 DUP2 PUSH2 0x1844 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1562 SWAP1 PUSH2 0x210E JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x7CB JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7CB SWAP2 PUSH2 0x1D3F JUMP JUMPDEST PUSH2 0x158A DUP4 DUP4 PUSH2 0x18EB JUMP JUMPDEST PUSH2 0x1597 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x15B3 JUMP JUMPDEST PUSH2 0x632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x227A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x15F7 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x22FB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1632 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x162F SWAP2 DUP2 ADD SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x168F JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1660 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1665 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x1687 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FD SWAP1 PUSH2 0x227A JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xE6B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16BF DUP3 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x1723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x173A PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x175A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1785 JUMP JUMPDEST DUP1 PUSH2 0x1764 DUP5 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1775 SWAP3 SWAP2 SWAP1 PUSH2 0x22CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x17E7 JUMPI PUSH2 0x17E2 DUP2 PUSH1 0x8 DUP1 SLOAD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD DUP4 SSTORE SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3 ADD SSTORE JUMP JUMPDEST PUSH2 0x180A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x180A JUMPI PUSH2 0x180A DUP4 DUP3 PUSH2 0x1B2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1821 JUMPI PUSH2 0x632 DUP2 PUSH2 0x1BC8 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x632 JUMPI PUSH2 0x632 DUP3 DUP3 PUSH2 0x1C77 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x184F DUP3 PUSH2 0x9C9 JUMP JUMPDEST SWAP1 POP PUSH2 0x185D DUP2 PUSH1 0x0 DUP5 PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x1868 PUSH1 0x0 DUP4 PUSH2 0xD1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1891 SWAP1 DUP5 SWAP1 PUSH2 0x224B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1941 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x194A DUP2 PUSH2 0xCFE JUMP JUMPDEST ISZERO PUSH2 0x1997 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FD JUMP JUMPDEST PUSH2 0x19A3 PUSH1 0x0 DUP4 DUP4 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x19CC SWAP1 DUP5 SWAP1 PUSH2 0x2262 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1A51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1A7B JUMPI DUP1 PUSH2 0x1A65 DUP2 PUSH2 0x234B JUMP JUMPDEST SWAP2 POP PUSH2 0x1A74 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x237A JUMP JUMPDEST SWAP2 POP PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A96 JUMPI PUSH2 0x1A96 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE6B JUMPI PUSH2 0x1AD5 PUSH1 0x1 DUP4 PUSH2 0x224B JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE2 PUSH1 0xA DUP7 PUSH2 0x238E JUMP JUMPDEST PUSH2 0x1AED SWAP1 PUSH1 0x30 PUSH2 0x2262 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1B02 JUMPI PUSH2 0x1B02 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1B24 PUSH1 0xA DUP7 PUSH2 0x237A JUMP JUMPDEST SWAP5 POP PUSH2 0x1AC4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x1B38 DUP5 PUSH2 0xA40 JUMP JUMPDEST PUSH2 0x1B42 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 DUP3 EQ PUSH2 0x1B95 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE DUP2 DUP5 KECCAK256 DUP2 SWAP1 SSTORE DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP2 SWAP1 SSTORE JUMPDEST POP PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 SWAP2 DUP4 MSTORE MSTORE SWAP1 DUP2 KECCAK256 SSTORE JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1BDA SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x8 DUP1 SLOAD SWAP4 SWAP5 POP SWAP1 SWAP3 DUP5 SWAP1 DUP2 LT PUSH2 0x1C02 JUMPI PUSH2 0x1C02 PUSH2 0x21CE JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x8 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1C23 JUMPI PUSH2 0x1C23 PUSH2 0x21CE JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP5 SWAP1 SSTORE DUP6 DUP3 MSTORE DUP2 KECCAK256 SSTORE PUSH1 0x8 DUP1 SLOAD DUP1 PUSH2 0x1C5B JUMPI PUSH2 0x1C5B PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C82 DUP4 PUSH2 0xA40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE SWAP4 DUP3 MSTORE PUSH1 0x7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1CC7 SWAP1 PUSH2 0x210E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1CE9 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1D2F JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D02 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1D2F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1D2F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1D2F JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D14 JUMP JUMPDEST POP PUSH2 0x1D3B SWAP3 SWAP2 POP PUSH2 0x1D75 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1D4B SWAP1 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1D5B JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x7CB SWAP2 SWAP1 JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D3B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1785 DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DD8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1DC0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB89 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1E01 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1785 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E79 DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA5 DUP5 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP PUSH2 0x1EB3 PUSH1 0x20 DUP6 ADD PUSH2 0x1E41 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF4 PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1F1C JUMPI PUSH2 0x1F1C PUSH2 0x1EC3 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x1F35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1785 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1F9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1FA6 DUP7 DUP4 DUP8 ADD PUSH2 0x1F4F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC9 DUP6 DUP3 DUP7 ADD PUSH2 0x1F4F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1785 DUP3 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2017 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6B DUP5 DUP3 DUP6 ADD PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2036 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x203F DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2054 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2075 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x207E DUP6 PUSH2 0x1E41 JUMP JUMPDEST SWAP4 POP PUSH2 0x208C PUSH1 0x20 DUP7 ADD PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x20C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20CF DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1ED9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20F7 DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP2 POP PUSH2 0x2105 PUSH1 0x20 DUP5 ADD PUSH2 0x1E41 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2122 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2142 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x21F6 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1DBD JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2219 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1DE9 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x222B DUP2 DUP6 PUSH2 0x1DE9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x225D JUMPI PUSH2 0x225D PUSH2 0x2235 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2275 PUSH2 0x2235 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x22DE DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1DBD JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x22F2 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1DBD JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x222B SWAP1 DUP4 ADD DUP5 PUSH2 0x1DE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2340 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1785 DUP2 PUSH2 0x1D8A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x235D JUMPI PUSH2 0x235D PUSH2 0x2235 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2389 JUMPI PUSH2 0x2389 PUSH2 0x2364 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x239D JUMPI PUSH2 0x239D PUSH2 0x2364 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 KECCAK256 SWAP11 JUMPDEST BYTE 0xCF 0x5C ORIGIN 0x2C SWAP8 0xB7 LOG0 SWAP7 0x22 0xC SWAP14 0xF9 0xDF NOT PUSH26 0xB4E9D68995169190D5940F9E64736F6C634300080D0033000000 ",
							"sourceMap": "513:2244:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2550:205;;;;;;:::i;:::-;;:::i;:::-;;;565:14:17;;558:22;540:41;;528:2;513:18;2550:205:16;;;;;;;;2488:98:2;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;4000:217:2;1528:203:17;3538:401:2;;;;;;:::i;:::-;;:::i;:::-;;1615:111:6;1702:10;:17;1615:111;;;2319:25:17;;;2307:2;2292:18;1615:111:6;2173:177:17;4727:330:2;;;;;;:::i;:::-;;:::i;1291:253:6:-;;;;;;:::i;:::-;;:::i;1184:63:16:-;;;:::i;5123:179:2:-;;;;;;:::i;:::-;;:::i;529:241:5:-;;;;;;:::i;:::-;;:::i;1798:230:6:-;;;;;;:::i;:::-;;:::i;1420:493:16:-;;;;;;:::i;:::-;;:::i;1098:84:1:-;1168:7;;;;1098:84;;2191:235:2;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;735:44:16:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1119:59;;;:::i;1036:85:0:-;1108:6;;;;;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:102:2;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2355:189:16:-;;;;;;:::i;:::-;;:::i;1253:161::-;;;;;;:::i;:::-;;:::i;785:21::-;;;;;-1:-1:-1;;;;;785:21:16;;;4503:162:2;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:2;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1918:198:0;;;;;;:::i;:::-;;:::i;2550:205:16:-;2685:4;2712:36;2736:11;2712:23;:36::i;:::-;2705:43;2550:205;-1:-1:-1;;2550:205:16:o;2488:98:2:-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;4103:16;4111:7;4103;:16::i;:::-;4095:73;;;;-1:-1:-1;;;4095:73:2;;6626:2:17;4095:73:2;;;6608:21:17;6665:2;6645:18;;;6638:30;6704:34;6684:18;;;6677:62;-1:-1:-1;;;6755:18:17;;;6748:42;6807:19;;4095:73:2;;;;;;;;;-1:-1:-1;4186:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:2;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:2;:2;-1:-1:-1;;;;;3675:11:2;;3667:57;;;;-1:-1:-1;;;3667:57:2;;7039:2:17;3667:57:2;;;7021:21:17;7078:2;7058:18;;;7051:30;7117:34;7097:18;;;7090:62;-1:-1:-1;;;7168:18:17;;;7161:31;7209:19;;3667:57:2;6837:397:17;3667:57:2;719:10:11;-1:-1:-1;;;;;3756:21:2;;;;:62;;-1:-1:-1;3781:37:2;3798:5;719:10:11;4503:162:2;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:2;;7441:2:17;3735:165:2;;;7423:21:17;7480:2;7460:18;;;7453:30;7519:34;7499:18;;;7492:62;7590:26;7570:18;;;7563:54;7634:19;;3735:165:2;7239:420:17;3735:165:2;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:11;4935:12:2;4949:7;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:2;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;1291:253:6:-;1388:7;1423:23;1440:5;1423:16;:23::i;:::-;1415:5;:31;1407:87;;;;-1:-1:-1;;;1407:87:6;;8284:2:17;1407:87:6;;;8266:21:17;8323:2;8303:18;;;8296:30;8362:34;8342:18;;;8335:62;-1:-1:-1;;;8413:18:17;;;8406:41;8464:19;;1407:87:6;8082:407:17;1407:87:6;-1:-1:-1;;;;;;1511:19:6;;;;;;;;:12;:19;;;;;;;;:26;;;;;;;;;1291:253::o;1184:63:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1230:10:16::1;:8;:10::i;:::-;1184:63::o:0;5123:179:2:-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;529:241:5:-;645:41;719:10:11;664:12:5;640:96:11;645:41:5;637:102;;;;-1:-1:-1;;;637:102:5;;9057:2:17;637:102:5;;;9039:21:17;9096:2;9076:18;;;9069:30;9135:34;9115:18;;;9108:62;-1:-1:-1;;;9186:18:17;;;9179:46;9242:19;;637:102:5;8855:412:17;637:102:5;749:14;755:7;749:5;:14::i;:::-;529:241;:::o;1798:230:6:-;1873:7;1908:30;1702:10;:17;;1615:111;1908:30;1900:5;:38;1892:95;;;;-1:-1:-1;;;1892:95:6;;9474:2:17;1892:95:6;;;9456:21:17;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:17;;;9596:42;9655:19;;1892:95:6;9272:408:17;1892:95:6;2004:10;2015:5;2004:17;;;;;;;;:::i;:::-;;;;;;;;;1997:24;;1798:230;;;:::o;1420:493:16:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1555:13:16::1;1569:6;1555:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;::::1;;1554:22;1533:107;;;::::0;-1:-1:-1;;;1533:107:16;;10300:2:17;1533:107:16::1;::::0;::::1;10282:21:17::0;10339:2;10319:18;;;10312:30;10378:34;10358:18;;;10351:62;-1:-1:-1;;;10429:18:17;;;10422:36;10475:19;;1533:107:16::1;10098:402:17::0;1533:107:16::1;1651:15;1669:25;:15;918:14:12::0;;827:112;1669:25:16::1;1651:43;;1704:27;:15;1032:19:12::0;;1050:1;1032:19;;;945:123;1704:27:16::1;1751:6;::::0;1741:26:::1;::::0;-1:-1:-1;;;;;1751:6:16::1;1759:7:::0;1741:9:::1;:26::i;:::-;1777:29;1790:7;1799:6;1777:12;:29::i;:::-;1840:4;1816:13;1830:6;1816:21;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:28;;;::::1;;-1:-1:-1::0;;1816:28:16;;::::1;::::0;;;::::1;::::0;;;1879:6:::1;::::0;-1:-1:-1;;;;;1879:6:16::1;::::0;1860:46:::1;::::0;::::1;::::0;1870:7;;1887:6;;1895:10;;1860:46:::1;:::i;:::-;;;;;;;;1523:390;1420:493:::0;;:::o;2191:235:2:-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:2;;2324:73;;;;-1:-1:-1;;;2324:73:2;;11166:2:17;2324:73:2;;;11148:21:17;11205:2;11185:18;;;11178:30;11244:34;11224:18;;;11217:62;-1:-1:-1;;;11295:18:17;;;11288:39;11344:19;;2324:73:2;10964:405:17;1929:205:2;2001:7;-1:-1:-1;;;;;2028:19:2;;2020:74;;;;-1:-1:-1;;;2020:74:2;;11576:2:17;2020:74:2;;;11558:21:17;11615:2;11595:18;;;11588:30;11654:34;11634:18;;;11627:62;-1:-1:-1;;;11705:18:17;;;11698:40;11755:19;;2020:74:2;11374:406:17;2020:74:2;-1:-1:-1;;;;;;2111:16:2;;;;;:9;:16;;;;;;;1929:205::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1119:59:16:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1163:8:16::1;:6;:8::i;2650:102:2:-:0;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:11;4411:8:2;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:11;5570:7:2;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:2;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2355:189:16:-;2478:13;2514:23;2529:7;2514:14;:23::i;1253:161::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1327:24:16;::::1;1319:59;;;::::0;-1:-1:-1;;;1319:59:16;;11987:2:17;1319:59:16::1;::::0;::::1;11969:21:17::0;12026:2;12006:18;;;11999:30;-1:-1:-1;;;12045:18:17;;;12038:52;12107:18;;1319:59:16::1;11785:346:17::0;1319:59:16::1;1388:6;:19:::0;;-1:-1:-1;;;;;;1388:19:16::1;-1:-1:-1::0;;;;;1388:19:16;;;::::1;::::0;;;::::1;::::0;;1253:161::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;;;;;719:10:11;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;12338:2:17;1998:73:0::1;::::0;::::1;12320:21:17::0;12377:2;12357:18;;;12350:30;12416:34;12396:18;;;12389:62;-1:-1:-1;;;12467:18:17;;;12460:36;12513:19;;1998:73:0::1;12136:402:17::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;990:222:6:-:0;1092:4;-1:-1:-1;;;;;;1115:50:6;;-1:-1:-1;;;1115:50:6;;:90;;;1169:36;1193:11;1169:23;:36::i;7160:125:2:-;7225:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:2;:30;;;7160:125::o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:2;-1:-1:-1;;;;;11243:29:2;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:2;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7560:16;7568:7;7560;:16::i;:::-;7552:73;;;;-1:-1:-1;;;7552:73:2;;12745:2:17;7552:73:2;;;12727:21:17;12784:2;12764:18;;;12757:30;12823:34;12803:18;;;12796:62;-1:-1:-1;;;12874:18:17;;;12867:42;12926:19;;7552:73:2;12543:408:17;7552:73:2;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:2;:7;-1:-1:-1;;;;;7692:16:2;;:52;;;-1:-1:-1;;;;;;4623:25:2;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7712:32;7692:87;;;;7772:7;-1:-1:-1;;;;;7748:31:2;:20;7760:7;7748:11;:20::i;:::-;-1:-1:-1;;;;;7748:31:2;;7692:87;7684:96;7443:344;-1:-1:-1;;;;7443:344:2:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:2;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:2;;10572:81;;;;-1:-1:-1;;;10572:81:2;;13158:2:17;10572:81:2;;;13140:21:17;13197:2;13177:18;;;13170:30;13236:34;13216:18;;;13209:62;-1:-1:-1;;;13287:18:17;;;13280:35;13332:19;;10572:81:2;12956:401:17;10572:81:2;-1:-1:-1;;;;;10671:16:2;;10663:65;;;;-1:-1:-1;;;10663:65:2;;13564:2:17;10663:65:2;;;13546:21:17;13603:2;13583:18;;;13576:30;13642:34;13622:18;;;13615:62;-1:-1:-1;;;13693:18:17;;;13686:34;13737:19;;10663:65:2;13362:400:17;10663:65:2;10739:39;10760:4;10766:2;10770:7;10739:20;:39::i;:::-;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:2;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:2;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:2;-1:-1:-1;;;;;10938:21:2;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;2110:117:1:-;1168:7;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;14364:2:17;1669:41:1;;;14346:21:17;14403:2;14383:18;;;14376:30;-1:-1:-1;;;14422:18:17;;;14415:50;14482:18;;1669:41:1;14162:344:17;1669:41:1;2168:7:::1;:15:::0;;-1:-1:-1;;2168:15:1::1;::::0;;2198:22:::1;719:10:11::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1692:32:17;;;1674:51;;1662:2;1647:18;2198:22:1::1;;;;;;;2110:117::o:0;2216:133:16:-;2322:20;2334:7;2322:11;:20::i;8117:108:2:-;8192:26;8202:2;8206:7;8192:26;;;;;;;;;;;;:9;:26::i;1277:214:7:-;1376:16;1384:7;1376;:16::i;:::-;1368:75;;;;-1:-1:-1;;;1368:75:7;;14713:2:17;1368:75:7;;;14695:21:17;14752:2;14732:18;;;14725:30;14791:34;14771:18;;;14764:62;-1:-1:-1;;;14842:18:17;;;14835:44;14896:19;;1368:75:7;14511:410:17;1368:75:7;1453:19;;;;:10;:19;;;;;;;;:31;;;;;;;;:::i;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;2362:6;2378:17;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1168:7;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;15128:2:17;1403:38:1;;;15110:21:17;15167:2;15147:18;;;15140:30;-1:-1:-1;;;15186:18:17;;;15179:46;15242:18;;1403:38:1;14926:340:17;1403:38:1;1922:7:::1;:14:::0;;-1:-1:-1;;1922:14:1::1;1932:4;1922:14;::::0;;1951:20:::1;1958:12;719:10:11::0;;640:96;11475:307:2;11625:8;-1:-1:-1;;;;;11616:17:2;:5;-1:-1:-1;;;;;11616:17:2;;11608:55;;;;-1:-1:-1;;;11608:55:2;;15473:2:17;11608:55:2;;;15455:21:17;15512:2;15492:18;;;15485:30;15551:27;15531:18;;;15524:55;15596:18;;11608:55:2;15271:349:17;11608:55:2;-1:-1:-1;;;;;11673:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:2;;;;;;;;;;11734:41;;540::17;;;11734::2;;513:18:17;11734:41:2;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:2;;;;;;;:::i;467:663:7:-;540:13;573:16;581:7;573;:16::i;:::-;565:78;;;;-1:-1:-1;;;565:78:7;;16246:2:17;565:78:7;;;16228:21:17;16285:2;16265:18;;;16258:30;16324:34;16304:18;;;16297:62;-1:-1:-1;;;16375:18:17;;;16368:47;16432:19;;565:78:7;16044:413:17;565:78:7;654:23;680:19;;;:10;:19;;;;;654:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;709:18;730:10;3465:9:2;;;;;;;;;-1:-1:-1;3465:9:2;;;3389:92;730:10:7;709:31;;819:4;813:18;835:1;813:23;809:70;;-1:-1:-1;859:9:7;467:663;-1:-1:-1;;467:663:7:o;809:70::-;981:23;;:27;977:106;;1055:4;1061:9;1038:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1024:48;;;;467:663;;;:::o;977:106::-;1100:23;1115:7;1100:14;:23::i;1570:300:2:-;1672:4;-1:-1:-1;;;;;;1707:40:2;;-1:-1:-1;;;1707:40:2;;:104;;-1:-1:-1;;;;;;;1763:48:2;;-1:-1:-1;;;1763:48:2;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:14;;;1827:36:2;829:155:14;1919:223:16;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;15128:2:17;1403:38:1;;;15110:21:17;15167:2;15147:18;;;15140:30;-1:-1:-1;;;15186:18:17;;;15179:46;15242:18;;1403:38:1;14926:340:17;1403:38:1;2090:45:16::1;2117:4;2123:2;2127:7;2090:26;:45::i;1708:200:7:-:0;1776:20;1788:7;1776:11;:20::i;:::-;1817:19;;;;:10;:19;;;;;1811:33;;;;;:::i;:::-;:38;;-1:-1:-1;1807:95:7;;1872:19;;;;:10;:19;;;;;1865:26;;;:::i;8446:311:2:-;8571:18;8577:2;8581:7;8571:5;:18::i;:::-;8620:54;8651:1;8655:2;8659:7;8668:5;8620:22;:54::i;:::-;8599:151;;;;-1:-1:-1;;;8599:151:2;;;;;;;:::i;12335:778::-;12485:4;-1:-1:-1;;;;;12505:13:2;;1465:19:10;:23;12501:606:2;;12540:72;;-1:-1:-1;;;12540:72:2;;-1:-1:-1;;;;;12540:36:2;;;;;:72;;719:10:11;;12591:4:2;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:2;;;;;;;;-1:-1:-1;;12540:72:2;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12779:6;:13;12796:1;12779:18;12775:266;;12821:60;;-1:-1:-1;;;12821:60:2;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:2;-1:-1:-1;;;12662:51:2;;-1:-1:-1;12655:58:2;;12501:606;-1:-1:-1;13092:4:2;12335:778;;;;;;:::o;2818:329::-;2891:13;2924:16;2932:7;2924;:16::i;:::-;2916:76;;;;-1:-1:-1;;;2916:76:2;;17887:2:17;2916:76:2;;;17869:21:17;17926:2;17906:18;;;17899:30;17965:34;17945:18;;;17938:62;-1:-1:-1;;;18016:18:17;;;18009:45;18071:19;;2916:76:2;17685:411:17;2916:76:2;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:2;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:2:o;2624:572:6:-;-1:-1:-1;;;;;2823:18:6;;2819:183;;2857:40;2889:7;4005:10;:17;;3978:24;;;;:15;:24;;;;;:44;;;4032:24;;;;;;;;;;;;3902:161;2857:40;2819:183;;;2926:2;-1:-1:-1;;;;;2918:10:6;:4;-1:-1:-1;;;;;2918:10:6;;2914:88;;2944:47;2977:4;2983:7;2944:32;:47::i;:::-;-1:-1:-1;;;;;3015:16:6;;3011:179;;3047:45;3084:7;3047:36;:45::i;3011:179::-;3119:4;-1:-1:-1;;;;;3113:10:6;:2;-1:-1:-1;;;;;3113:10:6;;3109:81;;3139:40;3167:2;3171:7;3139:27;:40::i;9723:406:2:-;9782:13;9798:23;9813:7;9798:14;:23::i;:::-;9782:39;;9832:48;9853:5;9868:1;9872:7;9832:20;:48::i;:::-;9918:29;9935:1;9939:7;9918:8;:29::i;:::-;-1:-1:-1;;;;;9958:16:2;;;;;;:9;:16;;;;;:21;;9978:1;;9958:16;:21;;9978:1;;9958:21;:::i;:::-;;;;-1:-1:-1;;9996:16:2;;;;:7;:16;;;;;;9989:23;;-1:-1:-1;;;;;;9989:23:2;;;10028:36;10004:7;;9996:16;-1:-1:-1;;;;;10028:36:2;;;;;9996:16;;10028:36;4284:153;;:::o;9079:427::-;-1:-1:-1;;;;;9158:16:2;;9150:61;;;;-1:-1:-1;;;9150:61:2;;18303:2:17;9150:61:2;;;18285:21:17;;;18322:18;;;18315:30;18381:34;18361:18;;;18354:62;18433:18;;9150:61:2;18101:356:17;9150:61:2;9230:16;9238:7;9230;:16::i;:::-;9229:17;9221:58;;;;-1:-1:-1;;;9221:58:2;;18664:2:17;9221:58:2;;;18646:21:17;18703:2;18683:18;;;18676:30;18742;18722:18;;;18715:58;18790:18;;9221:58:2;18462:352:17;9221:58:2;9290:45;9319:1;9323:2;9327:7;9290:20;:45::i;:::-;-1:-1:-1;;;;;9346:13:2;;;;;;:9;:13;;;;;:18;;9363:1;;9346:13;:18;;9363:1;;9346:18;:::i;:::-;;;;-1:-1:-1;;9374:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9374:21:2;-1:-1:-1;;;;;9374:21:2;;;;;;;;9411:33;;9374:16;;;9411:33;;9374:16;;9411:33;4284:153;;:::o;328:703:13:-;384:13;601:5;610:1;601:10;597:51;;-1:-1:-1;;627:10:13;;;;;;;;;;;;-1:-1:-1;;;627:10:13;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:13;;-1:-1:-1;773:2:13;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:13;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:13;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:13;;;;;;;;-1:-1:-1;972:11:13;981:2;972:11;;:::i;:::-;;;844:150;;4680:970:6;4942:22;4992:1;4967:22;4984:4;4967:16;:22::i;:::-;:26;;;;:::i;:::-;5003:18;5024:26;;;:17;:26;;;;;;4942:51;;-1:-1:-1;5154:28:6;;;5150:323;;-1:-1:-1;;;;;5220:18:6;;5198:19;5220:18;;;:12;:18;;;;;;;;:34;;;;;;;;;5269:30;;;;;;:44;;;5385:30;;:17;:30;;;;;:43;;;5150:323;-1:-1:-1;5566:26:6;;;;:17;:26;;;;;;;;5559:33;;;-1:-1:-1;;;;;5609:18:6;;;;;:12;:18;;;;;:34;;;;;;;5602:41;4680:970::o;5938:1061::-;6212:10;:17;6187:22;;6212:21;;6232:1;;6212:21;:::i;:::-;6243:18;6264:24;;;:15;:24;;;;;;6632:10;:26;;6187:46;;-1:-1:-1;6264:24:6;;6187:46;;6632:26;;;;;;:::i;:::-;;;;;;;;;6610:48;;6694:11;6669:10;6680;6669:22;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;;6773:28;;;:15;:28;;;;;;;:41;;;6942:24;;;;;6935:31;6976:10;:16;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6009:990;;;5938:1061;:::o;3490:217::-;3574:14;3591:20;3608:2;3591:16;:20::i;:::-;-1:-1:-1;;;;;3621:16:6;;;;;;;:12;:16;;;;;;;;:24;;;;;;;;:34;;;3665:26;;;:17;:26;;;;;;:35;;;;-1:-1:-1;3490:217:6:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:17;-1:-1:-1;;;;;;88:32:17;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:17;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:17;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:17:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:17;;1343:180;-1:-1:-1;1343:180:17:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:17;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:17:o;2355:328::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2673:2;2662:9;2658:18;2645:32;2635:42;;2355:328;;;;;:::o;2688:127::-;2749:10;2744:3;2740:20;2737:1;2730:31;2780:4;2777:1;2770:15;2804:4;2801:1;2794:15;2820:632;2885:5;2915:18;2956:2;2948:6;2945:14;2942:40;;;2962:18;;:::i;:::-;3037:2;3031:9;3005:2;3091:15;;-1:-1:-1;;3087:24:17;;;3113:2;3083:33;3079:42;3067:55;;;3137:18;;;3157:22;;;3134:46;3131:72;;;3183:18;;:::i;:::-;3223:10;3219:2;3212:22;3252:6;3243:15;;3282:6;3274;3267:22;3322:3;3313:6;3308:3;3304:16;3301:25;3298:45;;;3339:1;3336;3329:12;3298:45;3389:6;3384:3;3377:4;3369:6;3365:17;3352:44;3444:1;3437:4;3428:6;3420;3416:19;3412:30;3405:41;;;;2820:632;;;;;:::o;3457:222::-;3500:5;3553:3;3546:4;3538:6;3534:17;3530:27;3520:55;;3571:1;3568;3561:12;3520:55;3593:80;3669:3;3660:6;3647:20;3640:4;3632:6;3628:17;3593:80;:::i;3684:543::-;3772:6;3780;3833:2;3821:9;3812:7;3808:23;3804:32;3801:52;;;3849:1;3846;3839:12;3801:52;3889:9;3876:23;3918:18;3959:2;3951:6;3948:14;3945:34;;;3975:1;3972;3965:12;3945:34;3998:50;4040:7;4031:6;4020:9;4016:22;3998:50;:::i;:::-;3988:60;;4101:2;4090:9;4086:18;4073:32;4057:48;;4130:2;4120:8;4117:16;4114:36;;;4146:1;4143;4136:12;4114:36;;4169:52;4213:7;4202:8;4191:9;4187:24;4169:52;:::i;:::-;4159:62;;;3684:543;;;;;:::o;4232:186::-;4291:6;4344:2;4332:9;4323:7;4319:23;4315:32;4312:52;;;4360:1;4357;4350:12;4312:52;4383:29;4402:9;4383:29;:::i;4423:322::-;4492:6;4545:2;4533:9;4524:7;4520:23;4516:32;4513:52;;;4561:1;4558;4551:12;4513:52;4601:9;4588:23;4634:18;4626:6;4623:30;4620:50;;;4666:1;4663;4656:12;4620:50;4689;4731:7;4722:6;4711:9;4707:22;4689:50;:::i;4750:347::-;4815:6;4823;4876:2;4864:9;4855:7;4851:23;4847:32;4844:52;;;4892:1;4889;4882:12;4844:52;4915:29;4934:9;4915:29;:::i;:::-;4905:39;;4994:2;4983:9;4979:18;4966:32;5041:5;5034:13;5027:21;5020:5;5017:32;5007:60;;5063:1;5060;5053:12;5007:60;5086:5;5076:15;;;4750:347;;;;;:::o;5102:667::-;5197:6;5205;5213;5221;5274:3;5262:9;5253:7;5249:23;5245:33;5242:53;;;5291:1;5288;5281:12;5242:53;5314:29;5333:9;5314:29;:::i;:::-;5304:39;;5362:38;5396:2;5385:9;5381:18;5362:38;:::i;:::-;5352:48;;5447:2;5436:9;5432:18;5419:32;5409:42;;5502:2;5491:9;5487:18;5474:32;5529:18;5521:6;5518:30;5515:50;;;5561:1;5558;5551:12;5515:50;5584:22;;5637:4;5629:13;;5625:27;-1:-1:-1;5615:55:17;;5666:1;5663;5656:12;5615:55;5689:74;5755:7;5750:2;5737:16;5732:2;5728;5724:11;5689:74;:::i;:::-;5679:84;;;5102:667;;;;;;;:::o;5774:260::-;5842:6;5850;5903:2;5891:9;5882:7;5878:23;5874:32;5871:52;;;5919:1;5916;5909:12;5871:52;5942:29;5961:9;5942:29;:::i;:::-;5932:39;;5990:38;6024:2;6013:9;6009:18;5990:38;:::i;:::-;5980:48;;5774:260;;;;;:::o;6039:380::-;6118:1;6114:12;;;;6161;;;6182:61;;6236:4;6228:6;6224:17;6214:27;;6182:61;6289:2;6281:6;6278:14;6258:18;6255:38;6252:161;;6335:10;6330:3;6326:20;6323:1;6316:31;6370:4;6367:1;6360:15;6398:4;6395:1;6388:15;6252:161;;6039:380;;;:::o;7664:413::-;7866:2;7848:21;;;7905:2;7885:18;;;7878:30;7944:34;7939:2;7924:18;;7917:62;-1:-1:-1;;;8010:2:17;7995:18;;7988:47;8067:3;8052:19;;7664:413::o;8494:356::-;8696:2;8678:21;;;8715:18;;;8708:30;8774:34;8769:2;8754:18;;8747:62;8841:2;8826:18;;8494:356::o;9685:127::-;9746:10;9741:3;9737:20;9734:1;9727:31;9777:4;9774:1;9767:15;9801:4;9798:1;9791:15;9817:276;9948:3;9986:6;9980:13;10002:53;10048:6;10043:3;10036:4;10028:6;10024:17;10002:53;:::i;:::-;10071:16;;;;;9817:276;-1:-1:-1;;9817:276:17:o;10505:454::-;10730:6;10719:9;10712:25;10773:2;10768;10757:9;10753:18;10746:30;10693:4;10799:45;10840:2;10829:9;10825:18;10817:6;10799:45;:::i;:::-;10892:9;10884:6;10880:22;10875:2;10864:9;10860:18;10853:50;10920:33;10946:6;10938;10920:33;:::i;:::-;10912:41;10505:454;-1:-1:-1;;;;;;10505:454:17:o;13767:127::-;13828:10;13823:3;13819:20;13816:1;13809:31;13859:4;13856:1;13849:15;13883:4;13880:1;13873:15;13899:125;13939:4;13967:1;13964;13961:8;13958:34;;;13972:18;;:::i;:::-;-1:-1:-1;14009:9:17;;13899:125::o;14029:128::-;14069:3;14100:1;14096:6;14093:1;14090:13;14087:39;;;14106:18;;:::i;:::-;-1:-1:-1;14142:9:17;;14029:128::o;15625:414::-;15827:2;15809:21;;;15866:2;15846:18;;;15839:30;15905:34;15900:2;15885:18;;15878:62;-1:-1:-1;;;15971:2:17;15956:18;;15949:48;16029:3;16014:19;;15625:414::o;16462:470::-;16641:3;16679:6;16673:13;16695:53;16741:6;16736:3;16729:4;16721:6;16717:17;16695:53;:::i;:::-;16811:13;;16770:16;;;;16833:57;16811:13;16770:16;16867:4;16855:17;;16833:57;:::i;:::-;16906:20;;16462:470;-1:-1:-1;;;;16462:470:17:o;16937:489::-;-1:-1:-1;;;;;17206:15:17;;;17188:34;;17258:15;;17253:2;17238:18;;17231:43;17305:2;17290:18;;17283:34;;;17353:3;17348:2;17333:18;;17326:31;;;17131:4;;17374:46;;17400:19;;17392:6;17374:46;:::i;17431:249::-;17500:6;17553:2;17541:9;17532:7;17528:23;17524:32;17521:52;;;17569:1;17566;17559:12;17521:52;17601:9;17595:16;17620:30;17644:5;17620:30;:::i;18819:135::-;18858:3;18879:17;;;18876:43;;18899:18;;:::i;:::-;-1:-1:-1;18946:1:17;18935:13;;18819:135::o;18959:127::-;19020:10;19015:3;19011:20;19008:1;19001:31;19051:4;19048:1;19041:15;19075:4;19072:1;19065:15;19091:120;19131:1;19157;19147:35;;19162:18;;:::i;:::-;-1:-1:-1;19196:9:17;;19091:120::o;19216:112::-;19248:1;19274;19264:35;;19279:18;;:::i;:::-;-1:-1:-1;19313:9:17;;19216:112::o;19333:127::-;19394:10;19389:3;19385:20;19382:1;19375:31;19425:4;19422:1;19415:15;19449:4;19446:1;19439:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1839600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2657",
								"burn(uint256)": "infinite",
								"getApproved(uint256)": "4799",
								"holder()": "2403",
								"isApprovedForAll(address,address)": "infinite",
								"mintedHeroIds(string)": "infinite",
								"name()": "infinite",
								"owner()": "2431",
								"ownerOf(uint256)": "2602",
								"pause()": "29831",
								"paused()": "2404",
								"renounceOwnership()": "28240",
								"safeMint(string,string)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26728",
								"setHolder(address)": "26804",
								"supportsInterface(bytes4)": "infinite",
								"symbol()": "infinite",
								"tokenByIndex(uint256)": "6782",
								"tokenOfOwnerByIndex(address,uint256)": "4976",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "2393",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28455",
								"unpause()": "29809"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "CODESIZE",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSHSIZE",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "tag",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 944,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "D"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "151C9A58985B1C1D5B9AD39195"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP7",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1032,
									"end": 1053,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1032,
									"end": 1053,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 511,
									"end": 513,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 493,
									"end": 514,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 550,
									"end": 552,
									"name": "PUSH",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 530,
									"end": 548,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 530,
									"end": 548,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 523,
									"end": 553,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 589,
									"end": 613,
									"name": "PUSH",
									"source": 17,
									"value": "496E76616C696420686F6C646572206164647265737300000000000000000000"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "PUSH",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 569,
									"end": 587,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 569,
									"end": 587,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 562,
									"end": 614,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 631,
									"end": 649,
									"name": "PUSH",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 631,
									"end": 649,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1024,
									"end": 1080,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 16,
									"value": "E"
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "AND",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1090,
									"end": 1106,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "FF"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16,
									"value": "[in]"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16,
									"value": "[out]"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 17,
									"value": "39"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 739,
									"end": 740,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 735,
									"end": 747,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 735,
									"end": 747,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 735,
									"end": 747,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 782,
									"end": 794,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 782,
									"end": 794,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 782,
									"end": 794,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 803,
									"end": 864,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 803,
									"end": 864,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 849,
									"end": 855,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 845,
									"end": 862,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 835,
									"end": 862,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 835,
									"end": 862,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 803,
									"end": 864,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 803,
									"end": 864,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 910,
									"end": 912,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 902,
									"end": 908,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 899,
									"end": 913,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 879,
									"end": 897,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 876,
									"end": 914,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 956,
									"end": 966,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 951,
									"end": 954,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 947,
									"end": 967,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 944,
									"end": 945,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 937,
									"end": 968,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 991,
									"end": 995,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1019,
									"end": 1023,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1016,
									"end": 1017,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1024,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "tag",
									"source": 17,
									"value": "43"
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 873,
									"end": 1034,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 660,
									"end": 1040,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 2757,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122091209a5b1acf5c322c97b7a096220c9df9df1979b4e9d68995169190d5940f9e64736f6c634300080d0033",
									".code": [
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "D979F5AA"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "D979F5AA"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "E534155D"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "E985E9C5"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "F2FDE38B"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "A22CB465"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "B88D4FDE"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "C87B56DD"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "7C90B182"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "7C90B182"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "8456CB59"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "8DA5CB5B"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "95D89B41"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "70A08231"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "715018A6"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "2F745C59"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "42966C68"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "42966C68"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "4F6CCCE7"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "4FA1F7AE"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "5C975ABB"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "2F745C59"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "3F4BA83A"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "6FDDE03"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "81812FC"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "95EA7B3"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "18160DDD"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 513,
											"end": 2757,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 565,
											"end": 579,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 565,
											"end": 579,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 558,
											"end": 580,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 528,
											"end": 530,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "tag",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1528,
											"end": 1731,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2319,
											"end": 2344,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2307,
											"end": 2309,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2310,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2350,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 529,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "tag",
											"source": 16,
											"value": "81"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "tag",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH",
											"source": 16,
											"value": "D"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 735,
											"end": 779,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 735,
											"end": 779,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "93"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "tag",
											"source": 16,
											"value": "124"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH",
											"source": 16,
											"value": "E"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 785,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "46"
										},
										{
											"begin": 785,
											"end": 806,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 785,
											"end": 806,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 785,
											"end": 806,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 785,
											"end": 806,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2685,
											"end": 2689,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 2736,
											"end": 2747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "139"
										},
										{
											"begin": 2712,
											"end": 2748,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2712,
											"end": 2748,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 2712,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2748,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2550,
											"end": 2755,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2574,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2586,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4111,
											"end": 4118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4103,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6665,
											"end": 6667,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6645,
											"end": 6663,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6638,
											"end": 6668,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6704,
											"end": 6738,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6684,
											"end": 6702,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6755,
											"end": 6773,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6748,
											"end": 6790,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 6807,
											"end": 6826,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4095,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4000,
											"end": 4217,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3631,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3649,
											"end": 3656,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3634,
											"end": 3657,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3618,
											"end": 3657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3677,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3675,
											"end": 3686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7039,
											"end": 7041,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7042,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7078,
											"end": 7080,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7058,
											"end": 7076,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7051,
											"end": 7081,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7117,
											"end": 7151,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 7097,
											"end": 7115,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7097,
											"end": 7115,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7097,
											"end": 7115,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7090,
											"end": 7152,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7168,
											"end": 7186,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7161,
											"end": 7192,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7209,
											"end": 7228,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6837,
											"end": 7234,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 3667,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3777,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3756,
											"end": 3818,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3798,
											"end": 3803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 4503,
											"end": 4665,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 3781,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7441,
											"end": 7443,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 7460,
											"end": 7478,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7460,
											"end": 7478,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7460,
											"end": 7478,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7453,
											"end": 7483,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7519,
											"end": 7553,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7492,
											"end": 7554,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "PUSH",
											"source": 17,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7570,
											"end": 7588,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7563,
											"end": 7617,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7634,
											"end": 7653,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 7634,
											"end": 7653,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 7239,
											"end": 7659,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3735,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3920,
											"end": 3922,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3911,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 3911,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4727,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4935,
											"end": 4947,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4935,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4956,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4916,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4908,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5032,
											"end": 5036,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5022,
											"end": 5050,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1440,
											"end": 1445,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1423,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 1423,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1420,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1415,
											"end": 1446,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8266,
											"end": 8287,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8323,
											"end": 8325,
											"name": "PUSH",
											"source": 17,
											"value": "2B"
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8303,
											"end": 8321,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8296,
											"end": 8326,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8362,
											"end": 8396,
											"name": "PUSH",
											"source": 17,
											"value": "455243373231456E756D657261626C653A206F776E657220696E646578206F75"
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8342,
											"end": 8360,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8335,
											"end": 8397,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8413,
											"end": 8431,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8406,
											"end": 8447,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8464,
											"end": 8483,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 8464,
											"end": 8483,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8082,
											"end": 8489,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 1407,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1530,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1511,
											"end": 1537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1291,
											"end": 1544,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "tag",
											"source": 16,
											"value": "69"
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1230,
											"end": 1238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1230,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1184,
											"end": 1247,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5123,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 5273,
											"end": 5277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5279,
											"end": 5281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5256,
											"end": 5295,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 645,
											"end": 686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 664,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 645,
											"end": 686,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 645,
											"end": 686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 637,
											"end": 739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 637,
											"end": 739,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9059,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 637,
											"end": 739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9039,
											"end": 9060,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9096,
											"end": 9098,
											"name": "PUSH",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9069,
											"end": 9099,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9135,
											"end": 9169,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732314275726E61626C653A2063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9115,
											"end": 9133,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9108,
											"end": 9170,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9186,
											"end": 9204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9179,
											"end": 9225,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9242,
											"end": 9261,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 637,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 8855,
											"end": 9267,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 637,
											"end": 739,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 637,
											"end": 739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 755,
											"end": 762,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 749,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 749,
											"end": 763,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 749,
											"end": 763,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 749,
											"end": 763,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 529,
											"end": 770,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 529,
											"end": 770,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1702,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1615,
											"end": 1726,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1908,
											"end": 1938,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1908,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1938,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9474,
											"end": 9476,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9456,
											"end": 9477,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9513,
											"end": 9515,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9486,
											"end": 9516,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9552,
											"end": 9586,
											"name": "PUSH",
											"source": 17,
											"value": "455243373231456E756D657261626C653A20676C6F62616C20696E646578206F"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9532,
											"end": 9550,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9525,
											"end": 9587,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9603,
											"end": 9621,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9596,
											"end": 9638,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9655,
											"end": 9674,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 9655,
											"end": 9674,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 9272,
											"end": 9680,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1892,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2014,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1997,
											"end": 2021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2028,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "tag",
											"source": 16,
											"value": "83"
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1568,
											"name": "PUSH",
											"source": 16,
											"value": "D"
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 1555,
											"end": 1576,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10300,
											"end": 10302,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10282,
											"end": 10303,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10339,
											"end": 10341,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10319,
											"end": 10337,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10312,
											"end": 10342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10378,
											"end": 10412,
											"name": "PUSH",
											"source": 17,
											"value": "54726962616C70756E6B4E46543A206865726F20616C72656164792077617320"
										},
										{
											"begin": 10358,
											"end": 10376,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10358,
											"end": 10376,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10358,
											"end": 10376,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10351,
											"end": 10413,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B5A5B9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10429,
											"end": 10447,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10422,
											"end": 10458,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 10475,
											"end": 10494,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 10098,
											"end": 10500,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "tag",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 1533,
											"end": 1640,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1651,
											"end": 1666,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 1669,
											"end": 1684,
											"name": "PUSH",
											"source": 16,
											"value": "C"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 1669,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1651,
											"end": 1694,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1704,
											"end": 1731,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 1704,
											"end": 1719,
											"name": "PUSH",
											"source": 16,
											"value": "C"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1704,
											"end": 1731,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 1704,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "PUSH",
											"source": 16,
											"value": "E"
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1759,
											"end": 1766,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "227"
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "tag",
											"source": 16,
											"value": "226"
										},
										{
											"begin": 1741,
											"end": 1767,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1777,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 1777,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1840,
											"end": 1844,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1816,
											"end": 1829,
											"name": "PUSH",
											"source": 16,
											"value": "D"
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1837,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1844,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "PUSH",
											"source": 16,
											"value": "E"
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1879,
											"end": 1885,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "PUSH",
											"source": 16,
											"value": "372DE3FA001EC655FCB2F8096E13CB1F68D1B8B9BB9D2674FC7D880DE7E8045"
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1905,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1895,
											"end": 1905,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "232"
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "tag",
											"source": 16,
											"value": "231"
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 1906,
											"name": "LOG2",
											"source": 16
										},
										{
											"begin": 1523,
											"end": 1913,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1420,
											"end": 1913,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2191,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2305,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2298,
											"end": 2314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11166,
											"end": 11168,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11148,
											"end": 11169,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11205,
											"end": 11207,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11185,
											"end": 11203,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11178,
											"end": 11208,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11244,
											"end": 11278,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11224,
											"end": 11242,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11217,
											"end": 11279,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11288,
											"end": 11327,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11344,
											"end": 11363,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 11344,
											"end": 11363,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2324,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 10964,
											"end": 11369,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2047,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11576,
											"end": 11578,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11558,
											"end": 11579,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11615,
											"end": 11617,
											"name": "PUSH",
											"source": 17,
											"value": "2A"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11595,
											"end": 11613,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11588,
											"end": 11618,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11654,
											"end": 11688,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11634,
											"end": 11652,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11627,
											"end": 11689,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11705,
											"end": 11723,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 11705,
											"end": 11723,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11705,
											"end": 11723,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11698,
											"end": 11738,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11755,
											"end": 11774,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 11755,
											"end": 11774,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11374,
											"end": 11780,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 2020,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2111,
											"end": 2127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 2134,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "tag",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 1119,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "257"
										},
										{
											"begin": 1163,
											"end": 1171,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2650,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2706,
											"end": 2719,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2738,
											"end": 2745,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4411,
											"end": 4419,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4378,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5537,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5537,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5529,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5664,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5666,
											"end": 5673,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5675,
											"end": 5680,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5642,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 5642,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5368,
											"end": 5688,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 2355,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 2514,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 2529,
											"end": 2536,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2514,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 2514,
											"end": 2537,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "tag",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1327,
											"end": 1351,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11987,
											"end": 11989,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11969,
											"end": 11990,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12026,
											"end": 12028,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 12006,
											"end": 12024,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12006,
											"end": 12024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12006,
											"end": 12024,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11999,
											"end": 12029,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420686F6C6465722061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12045,
											"end": 12063,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 12045,
											"end": 12063,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12045,
											"end": 12063,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12038,
											"end": 12090,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12107,
											"end": 12125,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 12107,
											"end": 12125,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 11785,
											"end": 12131,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "tag",
											"source": 16,
											"value": "285"
										},
										{
											"begin": 1319,
											"end": 1378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1394,
											"name": "PUSH",
											"source": 16,
											"value": "E"
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1388,
											"end": 1407,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 1253,
											"end": 1414,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12338,
											"end": 12340,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12320,
											"end": 12341,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12377,
											"end": 12379,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12350,
											"end": 12380,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12416,
											"end": 12450,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12396,
											"end": 12414,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12389,
											"end": 12451,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12467,
											"end": 12485,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 12467,
											"end": 12485,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12467,
											"end": 12485,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12460,
											"end": 12496,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12513,
											"end": 12532,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 12513,
											"end": 12532,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 12136,
											"end": 12538,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 990,
											"end": 1212,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 990,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1092,
											"end": 1096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "780E9D63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1165,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1115,
											"end": 1205,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1193,
											"end": 1204,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1169,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 1169,
											"end": 1205,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7160,
											"end": 7285,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 7160,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7225,
											"end": 7229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7255,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7248,
											"end": 7264,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7248,
											"end": 7278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7160,
											"end": 7285,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11272,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 11243,
											"end": 11267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11296,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 11296,
											"end": 11319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11287,
											"end": 11333,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11169,
											"end": 11340,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7560,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 7560,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12745,
											"end": 12747,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12727,
											"end": 12748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12784,
											"end": 12786,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12764,
											"end": 12782,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12757,
											"end": 12787,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12823,
											"end": 12857,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 12803,
											"end": 12821,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 12803,
											"end": 12821,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12803,
											"end": 12821,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12796,
											"end": 12858,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12874,
											"end": 12892,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12867,
											"end": 12909,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12926,
											"end": 12945,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 12926,
											"end": 12945,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 12543,
											"end": 12951,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 7552,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7648,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 7666,
											"end": 7673,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7651,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "tag",
											"source": 2,
											"value": "312"
										},
										{
											"begin": 7651,
											"end": 7674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7635,
											"end": 7674,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7703,
											"end": 7708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7699,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7708,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 7692,
											"end": 7744,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4648,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4623,
											"end": 4658,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "tag",
											"source": 2,
											"value": "314"
										},
										{
											"begin": 7712,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7772,
											"end": 7779,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7760,
											"end": 7767,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 7748,
											"end": 7768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7692,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7684,
											"end": 7780,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7787,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 10453,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10607,
											"end": 10611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 10595,
											"end": 10602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "tag",
											"source": 2,
											"value": "318"
										},
										{
											"begin": 10580,
											"end": 10603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10611,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13158,
											"end": 13160,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13140,
											"end": 13161,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13197,
											"end": 13199,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13177,
											"end": 13195,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13170,
											"end": 13200,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13236,
											"end": 13270,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13216,
											"end": 13234,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13209,
											"end": 13271,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13287,
											"end": 13305,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13280,
											"end": 13315,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13351,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 13332,
											"end": 13351,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 12956,
											"end": 13357,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 10572,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10671,
											"end": 10687,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13564,
											"end": 13566,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13546,
											"end": 13567,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13603,
											"end": 13605,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13583,
											"end": 13601,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13583,
											"end": 13601,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13583,
											"end": 13601,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13576,
											"end": 13606,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13642,
											"end": 13676,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13615,
											"end": 13677,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13693,
											"end": 13711,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13686,
											"end": 13720,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13737,
											"end": 13756,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 13737,
											"end": 13756,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 13362,
											"end": 13762,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 10663,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 10760,
											"end": 10764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10766,
											"end": 10768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10770,
											"end": 10777,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10739,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 10739,
											"end": 10778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10840,
											"end": 10848,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 10840,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10889,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10899,
											"end": 10900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 10900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10919,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10923,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10927,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10910,
											"end": 10928,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10945,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10959,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10954,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10975,
											"end": 11002,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14366,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14346,
											"end": 14367,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14403,
											"end": 14405,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14383,
											"end": 14401,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14376,
											"end": 14406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14422,
											"end": 14440,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14415,
											"end": 14465,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14482,
											"end": 14500,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 14482,
											"end": 14500,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14162,
											"end": 14506,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1724,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1674,
											"end": 1725,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1665,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2216,
											"end": 2349,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 2216,
											"end": 2349,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2342,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 2334,
											"end": 2341,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2322,
											"end": 2342,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8225,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 8117,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 8202,
											"end": 8204,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8192,
											"end": 8201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 8192,
											"end": 8218,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 1277,
											"end": 1491,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 1384,
											"end": 1391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1376,
											"end": 1383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 1376,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14713,
											"end": 14715,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14695,
											"end": 14716,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14752,
											"end": 14754,
											"name": "PUSH",
											"source": 17,
											"value": "2E"
										},
										{
											"begin": 14732,
											"end": 14750,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14732,
											"end": 14750,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14732,
											"end": 14750,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14725,
											"end": 14755,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14791,
											"end": 14825,
											"name": "PUSH",
											"source": 17,
											"value": "45524337323155524953746F726167653A2055524920736574206F66206E6F6E"
										},
										{
											"begin": 14771,
											"end": 14789,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 14771,
											"end": 14789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14771,
											"end": 14789,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14764,
											"end": 14826,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14842,
											"end": 14860,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 14842,
											"end": 14860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14842,
											"end": 14860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14835,
											"end": 14879,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14896,
											"end": 14915,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 14896,
											"end": 14915,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 14511,
											"end": 14921,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 1368,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1472,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1453,
											"end": 1484,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15128,
											"end": 15130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15110,
											"end": 15131,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15167,
											"end": 15169,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15140,
											"end": 15170,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15179,
											"end": 15225,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14926,
											"end": 15266,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11625,
											"end": 11633,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11616,
											"end": 11621,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11616,
											"end": 11633,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15473,
											"end": 15475,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15455,
											"end": 15476,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15512,
											"end": 15514,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 15492,
											"end": 15510,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15492,
											"end": 15510,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15492,
											"end": 15510,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15485,
											"end": 15515,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15551,
											"end": 15578,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15531,
											"end": 15549,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15524,
											"end": 15579,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15596,
											"end": 15614,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 15596,
											"end": 15614,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 15271,
											"end": 15620,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "tag",
											"source": 2,
											"value": "367"
										},
										{
											"begin": 11608,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11691,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11698,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11708,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11673,
											"end": 11719,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 540,
											"end": 581,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 540,
											"end": 581,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 513,
											"end": 531,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11734,
											"end": 11775,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11475,
											"end": 11782,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6550,
											"end": 6857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6711,
											"end": 6715,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 6701,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6770,
											"end": 6774,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6776,
											"end": 6778,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6780,
											"end": 6787,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6747,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 6747,
											"end": 6795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 6739,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 540,
											"end": 553,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 581,
											"end": 588,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 573,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 573,
											"end": 589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 565,
											"end": 643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16246,
											"end": 16248,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 565,
											"end": 643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16228,
											"end": 16249,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16285,
											"end": 16287,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16265,
											"end": 16283,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16258,
											"end": 16288,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16324,
											"end": 16358,
											"name": "PUSH",
											"source": 17,
											"value": "45524337323155524953746F726167653A2055524920717565727920666F7220"
										},
										{
											"begin": 16304,
											"end": 16322,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 16304,
											"end": 16322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16304,
											"end": 16322,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16297,
											"end": 16359,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737B732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "79"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16375,
											"end": 16393,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 16375,
											"end": 16393,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16375,
											"end": 16393,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16368,
											"end": 16415,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16432,
											"end": 16451,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 16432,
											"end": 16451,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 565,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 16044,
											"end": 16457,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 565,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 565,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 677,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 680,
											"end": 690,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 680,
											"end": 699,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "384"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 654,
											"end": 699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 654,
											"end": 699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 709,
											"end": 727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3481,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 730,
											"end": 740,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 730,
											"end": 740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 709,
											"end": 740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 819,
											"end": 823,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 813,
											"end": 831,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 809,
											"end": 879,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 868,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 809,
											"end": 879,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1004,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 981,
											"end": 1008,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1071,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1024,
											"end": 1072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 467,
											"end": 1130,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 977,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5B5E139F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 937,
											"end": 977,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1919,
											"end": 2142,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 1919,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15128,
											"end": 15130,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15110,
											"end": 15131,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15167,
											"end": 15169,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15147,
											"end": 15165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15140,
											"end": 15170,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15179,
											"end": 15225,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 15242,
											"end": 15260,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 14926,
											"end": 15266,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2090,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 2117,
											"end": 2121,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2123,
											"end": 2125,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2127,
											"end": 2134,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2090,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 2090,
											"end": 2135,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1708,
											"end": 1908,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 1708,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 1776,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1827,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1836,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1811,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1849,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1807,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1807,
											"end": 1902,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1882,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1891,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 1865,
											"end": 1891,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 8446,
											"end": 8757,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 8446,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8581,
											"end": 8588,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8571,
											"end": 8576,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "tag",
											"source": 2,
											"value": "417"
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 8651,
											"end": 8652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8655,
											"end": 8657,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8659,
											"end": 8666,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8668,
											"end": 8673,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8620,
											"end": 8642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 8620,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 8599,
											"end": 8750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "tag",
											"source": 2,
											"value": "374"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12485,
											"end": 12489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12505,
											"end": 12518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 12540,
											"end": 12576,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 12591,
											"end": 12595,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 12606,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "428"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 2,
											"value": "427"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 2,
											"value": "430"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "tag",
											"source": 2,
											"value": "429"
										},
										{
											"begin": 12540,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "437"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "436"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12779,
											"end": 12792,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12796,
											"end": 12797,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12779,
											"end": 12797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 12821,
											"end": 12881,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 12775,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12993,
											"end": 12999,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12987,
											"end": 13000,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12978,
											"end": 12984,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12974,
											"end": 12976,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12963,
											"end": 13001,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "tag",
											"source": 2,
											"value": "432"
										},
										{
											"begin": 12536,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 12662,
											"end": 12713,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 12655,
											"end": 12713,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "tag",
											"source": 2,
											"value": "425"
										},
										{
											"begin": 12501,
											"end": 13107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13092,
											"end": 13096,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12335,
											"end": 13113,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2891,
											"end": 2904,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 2932,
											"end": 2939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "tag",
											"source": 2,
											"value": "445"
										},
										{
											"begin": 2924,
											"end": 2940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17869,
											"end": 17890,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17926,
											"end": 17928,
											"name": "PUSH",
											"source": 17,
											"value": "2F"
										},
										{
											"begin": 17906,
											"end": 17924,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 17906,
											"end": 17924,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17906,
											"end": 17924,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17899,
											"end": 17929,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17965,
											"end": 17999,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 17945,
											"end": 17963,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 17945,
											"end": 17963,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17945,
											"end": 17963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17938,
											"end": 18000,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3732BC34B9BA32B73A103A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18016,
											"end": 18034,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 18016,
											"end": 18034,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18016,
											"end": 18034,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18009,
											"end": 18054,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18071,
											"end": 18090,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 18071,
											"end": 18090,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 17685,
											"end": 18096,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "tag",
											"source": 2,
											"value": "446"
										},
										{
											"begin": 2916,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3389,
											"end": 3481,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 3027,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3003,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3079,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3106,
											"end": 3113,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 3115,
											"end": 3122,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "453"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "tag",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "tag",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3089,
											"end": 3134,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "tag",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 3054,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3047,
											"end": 3140,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2818,
											"end": 3147,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2624,
											"end": 3196,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 2624,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 2889,
											"end": 2896,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4015,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4002,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3978,
											"end": 4022,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "PUSH",
											"source": 6,
											"value": "F3F7A9FE364FAAB93B216DA50A3214154F22A0A2B415B23A84C8169E8B636EE3"
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4032,
											"end": 4056,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3902,
											"end": 4063,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 2857,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 2819,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2914,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2914,
											"end": 3002,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2977,
											"end": 2981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2983,
											"end": 2990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 2944,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3015,
											"end": 3031,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3084,
											"end": 3091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3047,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 3047,
											"end": 3092,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 3011,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3119,
											"end": 3123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3123,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3109,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3109,
											"end": 3190,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 3167,
											"end": 3169,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3178,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3139,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 3139,
											"end": 3179,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9723,
											"end": 10129,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9723,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 9813,
											"end": 9820,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9798,
											"end": 9812,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "tag",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 9798,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9821,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9782,
											"end": 9821,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9832,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 9853,
											"end": 9858,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9868,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9879,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9832,
											"end": 9852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 9832,
											"end": 9880,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9832,
											"end": 9880,
											"name": "tag",
											"source": 2,
											"value": "475"
										},
										{
											"begin": 9832,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "476"
										},
										{
											"begin": 9935,
											"end": 9936,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9939,
											"end": 9946,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 9926,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "tag",
											"source": 2,
											"value": "476"
										},
										{
											"begin": 9918,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9967,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "329"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "tag",
											"source": 2,
											"value": "477"
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9958,
											"end": 9979,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10003,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10012,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10004,
											"end": 10011,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10004,
											"end": 10011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9996,
											"end": 10012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10028,
											"end": 10064,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9079,
											"end": 9506,
											"name": "tag",
											"source": 2,
											"value": "418"
										},
										{
											"begin": 9079,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9158,
											"end": 9174,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18303,
											"end": 18305,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18285,
											"end": 18306,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18285,
											"end": 18306,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18285,
											"end": 18306,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18322,
											"end": 18340,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18322,
											"end": 18340,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18322,
											"end": 18340,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18315,
											"end": 18345,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18381,
											"end": 18415,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206D696E7420746F20746865207A65726F2061646472657373"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18361,
											"end": 18379,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18354,
											"end": 18416,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18433,
											"end": 18451,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 18433,
											"end": 18451,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 18101,
											"end": 18457,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "tag",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 9150,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 9238,
											"end": 9245,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "tag",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 9230,
											"end": 9246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9229,
											"end": 9246,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "484"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18664,
											"end": 18666,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18646,
											"end": 18667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18703,
											"end": 18705,
											"name": "PUSH",
											"source": 17,
											"value": "1C"
										},
										{
											"begin": 18683,
											"end": 18701,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18683,
											"end": 18701,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18683,
											"end": 18701,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18676,
											"end": 18706,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18742,
											"end": 18772,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20746F6B656E20616C7265616479206D696E74656400000000"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18715,
											"end": 18773,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18790,
											"end": 18808,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 18790,
											"end": 18808,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 18462,
											"end": 18814,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "tag",
											"source": 2,
											"value": "484"
										},
										{
											"begin": 9221,
											"end": 9279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9325,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9327,
											"end": 9334,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9290,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "326"
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "tag",
											"source": 2,
											"value": "487"
										},
										{
											"begin": 9290,
											"end": 9335,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9355,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "331"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "tag",
											"source": 2,
											"value": "488"
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9364,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9381,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9395,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9411,
											"end": 9444,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4284,
											"end": 4437,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 13,
											"value": "453"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 718,
											"end": 727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 718,
											"end": 727,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 13,
											"value": "500"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 851,
											"end": 861,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 851,
											"end": 861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 13,
											"value": "505"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 13,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "503"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4680,
											"end": 5650,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 4680,
											"end": 5650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 4993,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 4984,
											"end": 4988,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "tag",
											"source": 6,
											"value": "517"
										},
										{
											"begin": 4967,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5003,
											"end": 5021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5041,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4993,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4993,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5182,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5154,
											"end": 5182,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5198,
											"end": 5217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5232,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5238,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5254,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5299,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5269,
											"end": 5313,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5402,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5415,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5385,
											"end": 5428,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 5150,
											"end": 5473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5583,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5566,
											"end": 5592,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5592,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5592,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5559,
											"end": 5592,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5621,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5627,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5643,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5602,
											"end": 5643,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4680,
											"end": 5650,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6222,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6212,
											"end": 6229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6209,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6187,
											"end": 6209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6232,
											"end": 6233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 6212,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6279,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6642,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6288,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6187,
											"end": 6233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6632,
											"end": 6658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6694,
											"end": 6705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6679,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6680,
											"end": 6690,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6669,
											"end": 6705,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6788,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6801,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6814,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6814,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6935,
											"end": 6966,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6986,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "529"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6976,
											"end": 6992,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6009,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6009,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6009,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 6999,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3490,
											"end": 3707,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 3490,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3574,
											"end": 3588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 3608,
											"end": 3610,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 3591,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3633,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3637,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3645,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3621,
											"end": 3655,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3682,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3691,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3665,
											"end": 3700,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3490,
											"end": 3707,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "142"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "535"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "535"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "536"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "536"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "537"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "538"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "415"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "142"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "541"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "543"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "543"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "200"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "540"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "545"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "539"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "545"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 88,
											"end": 120,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 88,
											"end": 120,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 78,
											"end": 121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 68,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "200"
										},
										{
											"begin": 68,
											"end": 139,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 150,
											"end": 395,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 150,
											"end": 395,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 208,
											"end": 214,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 261,
											"end": 263,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 249,
											"end": 258,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 240,
											"end": 247,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 236,
											"end": 259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 232,
											"end": 264,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 277,
											"end": 278,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 267,
											"end": 279,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 229,
											"end": 281,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 229,
											"end": 281,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 316,
											"end": 325,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 303,
											"end": 326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 359,
											"end": 364,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 335,
											"end": 365,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 335,
											"end": 365,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 688,
											"end": 694,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 682,
											"end": 695,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 764,
											"end": 775,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 764,
											"end": 775,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 758,
											"end": 776,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 745,
											"end": 756,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 745,
											"end": 756,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 738,
											"end": 777,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 703,
											"end": 713,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 787,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 674,
											"end": 787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 805,
											"end": 811,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 802,
											"end": 803,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 799,
											"end": 812,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 796,
											"end": 844,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 796,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 796,
											"end": 844,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 840,
											"end": 841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 838,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 822,
											"end": 838,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 815,
											"end": 842,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 592,
											"end": 850,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "tag",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 897,
											"end": 900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 935,
											"end": 940,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 929,
											"end": 941,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 957,
											"end": 960,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 950,
											"end": 969,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1025,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1018,
											"end": 1032,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1015,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1004,
											"end": 1009,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1000,
											"end": 1016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "tag",
											"source": 17,
											"value": "568"
										},
										{
											"begin": 978,
											"end": 1041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1095,
											"end": 1097,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1074,
											"end": 1089,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1070,
											"end": 1099,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1061,
											"end": 1100,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1102,
											"end": 1106,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1057,
											"end": 1107,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 855,
											"end": 1113,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 1118,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1267,
											"end": 1269,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1256,
											"end": 1265,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1249,
											"end": 1270,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1317,
											"end": 1326,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1313,
											"end": 1331,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1305,
											"end": 1311,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 1287,
											"end": 1332,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1457,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1452,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1434,
											"end": 1441,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1430,
											"end": 1453,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1426,
											"end": 1458,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1471,
											"end": 1472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1469,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1461,
											"end": 1473,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 1423,
											"end": 1475,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1494,
											"end": 1517,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1343,
											"end": 1523,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "tag",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1853,
											"end": 1884,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1843,
											"end": 1885,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1889,
											"end": 1901,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 1833,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1909,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2043,
											"end": 2045,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2031,
											"end": 2040,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2022,
											"end": 2029,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2018,
											"end": 2041,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2014,
											"end": 2046,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2059,
											"end": 2060,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 2011,
											"end": 2063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 2101,
											"end": 2110,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 2082,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2072,
											"end": 2111,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2158,
											"end": 2160,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2143,
											"end": 2161,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2130,
											"end": 2162,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 2168,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2607,
											"end": 2625,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 2588,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2578,
											"end": 2626,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2671,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2645,
											"end": 2677,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2635,
											"end": 2677,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2355,
											"end": 2683,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2688,
											"end": 2815,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 2688,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 2740,
											"end": 2760,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 2737,
											"end": 2738,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2761,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2780,
											"end": 2784,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 2777,
											"end": 2778,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2770,
											"end": 2785,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2801,
											"end": 2802,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2809,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "tag",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2885,
											"end": 2890,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2915,
											"end": 2933,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2956,
											"end": 2958,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2959,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2942,
											"end": 2982,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2942,
											"end": 2982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 2942,
											"end": 2982,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3037,
											"end": 3039,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3087,
											"end": 3111,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3087,
											"end": 3111,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3087,
											"end": 3111,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3113,
											"end": 3115,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 3083,
											"end": 3116,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3079,
											"end": 3121,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3067,
											"end": 3122,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3067,
											"end": 3122,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3067,
											"end": 3122,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3179,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3134,
											"end": 3180,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3203,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 3131,
											"end": 3203,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "tag",
											"source": 17,
											"value": "589"
										},
										{
											"begin": 3183,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3223,
											"end": 3233,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3221,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3234,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3252,
											"end": 3258,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3274,
											"end": 3280,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3267,
											"end": 3289,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3325,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3308,
											"end": 3311,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3304,
											"end": 3320,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3301,
											"end": 3326,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3298,
											"end": 3343,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3298,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 3298,
											"end": 3343,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3339,
											"end": 3340,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3336,
											"end": 3337,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3329,
											"end": 3341,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3298,
											"end": 3343,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 3298,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3389,
											"end": 3395,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3384,
											"end": 3387,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3377,
											"end": 3381,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3369,
											"end": 3375,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3365,
											"end": 3382,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3352,
											"end": 3396,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 3444,
											"end": 3445,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3437,
											"end": 3441,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3416,
											"end": 3435,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3442,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3405,
											"end": 3446,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3405,
											"end": 3446,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3405,
											"end": 3446,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3405,
											"end": 3446,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2820,
											"end": 3452,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "tag",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 3457,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3505,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3546,
											"end": 3550,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3538,
											"end": 3544,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3530,
											"end": 3557,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3571,
											"end": 3572,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3569,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3561,
											"end": 3573,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 3520,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3593,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 3669,
											"end": 3672,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3660,
											"end": 3666,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3647,
											"end": 3667,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3640,
											"end": 3644,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3632,
											"end": 3638,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3628,
											"end": 3645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3593,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 3593,
											"end": 3673,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3847,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 3801,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3889,
											"end": 3898,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3876,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3959,
											"end": 3961,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3951,
											"end": 3957,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3962,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3975,
											"end": 3976,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3972,
											"end": 3973,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3965,
											"end": 3977,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3998,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 4040,
											"end": 4047,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4031,
											"end": 4037,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4020,
											"end": 4029,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4016,
											"end": 4038,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3998,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 3998,
											"end": 4048,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3998,
											"end": 4048,
											"name": "tag",
											"source": 17,
											"value": "597"
										},
										{
											"begin": 3998,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3988,
											"end": 4048,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3988,
											"end": 4048,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4099,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4086,
											"end": 4104,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4073,
											"end": 4105,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4057,
											"end": 4105,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4057,
											"end": 4105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4120,
											"end": 4128,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4117,
											"end": 4133,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4146,
											"end": 4147,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4144,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4136,
											"end": 4148,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4114,
											"end": 4150,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4202,
											"end": 4210,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4191,
											"end": 4200,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4187,
											"end": 4211,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "tag",
											"source": 17,
											"value": "599"
										},
										{
											"begin": 4169,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4159,
											"end": 4221,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4159,
											"end": 4221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4159,
											"end": 4221,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3684,
											"end": 4227,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4232,
											"end": 4418,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 4232,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4291,
											"end": 4297,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4346,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4332,
											"end": 4341,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4323,
											"end": 4330,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4319,
											"end": 4342,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4315,
											"end": 4347,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4360,
											"end": 4361,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4357,
											"end": 4358,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4350,
											"end": 4362,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4383,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 4402,
											"end": 4411,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4383,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 4383,
											"end": 4412,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4423,
											"end": 4745,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 4423,
											"end": 4745,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4542,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4524,
											"end": 4531,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4520,
											"end": 4543,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4516,
											"end": 4548,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4565,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4565,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 4513,
											"end": 4565,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4561,
											"end": 4562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4558,
											"end": 4559,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4551,
											"end": 4563,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4513,
											"end": 4565,
											"name": "tag",
											"source": 17,
											"value": "604"
										},
										{
											"begin": 4513,
											"end": 4565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4601,
											"end": 4610,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4588,
											"end": 4611,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4634,
											"end": 4652,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4623,
											"end": 4653,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4666,
											"end": 4667,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4663,
											"end": 4664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4656,
											"end": 4668,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 4620,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4689,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4689,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "552"
										},
										{
											"begin": 4689,
											"end": 4739,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4876,
											"end": 4878,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4864,
											"end": 4873,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4855,
											"end": 4862,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4851,
											"end": 4874,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4847,
											"end": 4879,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4844,
											"end": 4896,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4844,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 4844,
											"end": 4896,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4889,
											"end": 4890,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4882,
											"end": 4894,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4844,
											"end": 4896,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 4844,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 4934,
											"end": 4943,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 4915,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4905,
											"end": 4944,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4905,
											"end": 4944,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4994,
											"end": 4996,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4983,
											"end": 4992,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4979,
											"end": 4997,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4966,
											"end": 4998,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5041,
											"end": 5046,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5034,
											"end": 5047,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5027,
											"end": 5048,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5020,
											"end": 5025,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5017,
											"end": 5049,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5067,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 5007,
											"end": 5067,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5063,
											"end": 5064,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5053,
											"end": 5065,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5067,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 5007,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5086,
											"end": 5091,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5091,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5076,
											"end": 5091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4750,
											"end": 5097,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5197,
											"end": 5203,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5211,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5213,
											"end": 5219,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5227,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5274,
											"end": 5277,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 5262,
											"end": 5271,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5253,
											"end": 5260,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5249,
											"end": 5272,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5245,
											"end": 5278,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5295,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 5242,
											"end": 5295,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5291,
											"end": 5292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5289,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5281,
											"end": 5293,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5242,
											"end": 5295,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 5242,
											"end": 5295,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 5333,
											"end": 5342,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 5314,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5304,
											"end": 5343,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5304,
											"end": 5343,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 5396,
											"end": 5398,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5385,
											"end": 5394,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5381,
											"end": 5399,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5362,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 5362,
											"end": 5400,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5400,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 5362,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5400,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5400,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5436,
											"end": 5445,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5432,
											"end": 5450,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5419,
											"end": 5451,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5451,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5409,
											"end": 5451,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5502,
											"end": 5504,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5491,
											"end": 5500,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5487,
											"end": 5505,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5474,
											"end": 5506,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5529,
											"end": 5547,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5518,
											"end": 5548,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5565,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5565,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 5515,
											"end": 5565,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5561,
											"end": 5562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5551,
											"end": 5563,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5515,
											"end": 5565,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 5515,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5584,
											"end": 5606,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5584,
											"end": 5606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5637,
											"end": 5641,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5629,
											"end": 5642,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5629,
											"end": 5642,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5625,
											"end": 5652,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 5615,
											"end": 5670,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5666,
											"end": 5667,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5656,
											"end": 5668,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5615,
											"end": 5670,
											"name": "tag",
											"source": 17,
											"value": "616"
										},
										{
											"begin": 5615,
											"end": 5670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 5755,
											"end": 5762,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5737,
											"end": 5753,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5732,
											"end": 5734,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5728,
											"end": 5730,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5724,
											"end": 5735,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "551"
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "tag",
											"source": 17,
											"value": "617"
										},
										{
											"begin": 5689,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5679,
											"end": 5763,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5679,
											"end": 5763,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5679,
											"end": 5763,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5102,
											"end": 5769,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5842,
											"end": 5848,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5856,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5903,
											"end": 5905,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5891,
											"end": 5900,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5878,
											"end": 5901,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5874,
											"end": 5906,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5923,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5923,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 5871,
											"end": 5923,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5919,
											"end": 5920,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5917,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5871,
											"end": 5923,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 5871,
											"end": 5923,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5942,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 5961,
											"end": 5970,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5942,
											"end": 5971,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 5942,
											"end": 5971,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5942,
											"end": 5971,
											"name": "tag",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 5942,
											"end": 5971,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5971,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5932,
											"end": 5971,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5990,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6022,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6009,
											"end": 6027,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5990,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "550"
										},
										{
											"begin": 5990,
											"end": 6028,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6028,
											"name": "tag",
											"source": 17,
											"value": "621"
										},
										{
											"begin": 5990,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5980,
											"end": 6028,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5980,
											"end": 6028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 6034,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6039,
											"end": 6419,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 6039,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 6114,
											"end": 6126,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6126,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6126,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 6114,
											"end": 6126,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6161,
											"end": 6173,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6236,
											"end": 6240,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 6228,
											"end": 6234,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6224,
											"end": 6241,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6214,
											"end": 6241,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6214,
											"end": 6241,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 6182,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6291,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6278,
											"end": 6292,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 6258,
											"end": 6276,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6255,
											"end": 6293,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 6252,
											"end": 6413,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6335,
											"end": 6345,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 6330,
											"end": 6333,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6323,
											"end": 6324,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6347,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6370,
											"end": 6374,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 6360,
											"end": 6375,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6398,
											"end": 6402,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 6395,
											"end": 6396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6388,
											"end": 6403,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6413,
											"name": "tag",
											"source": 17,
											"value": "624"
										},
										{
											"begin": 6252,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6252,
											"end": 6413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6039,
											"end": 6419,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6039,
											"end": 6419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6039,
											"end": 6419,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6039,
											"end": 6419,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7664,
											"end": 8077,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 7664,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7866,
											"end": 7868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7848,
											"end": 7869,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7905,
											"end": 7907,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 7885,
											"end": 7903,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7885,
											"end": 7903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7885,
											"end": 7903,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7878,
											"end": 7908,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7944,
											"end": 7978,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 7939,
											"end": 7941,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7924,
											"end": 7942,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7917,
											"end": 7979,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDB995C881B9BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8010,
											"end": 8012,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7995,
											"end": 8013,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7995,
											"end": 8013,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7988,
											"end": 8035,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8067,
											"end": 8070,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 8052,
											"end": 8071,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8052,
											"end": 8071,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7664,
											"end": 8077,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8494,
											"end": 8850,
											"name": "tag",
											"source": 17,
											"value": "188"
										},
										{
											"begin": 8494,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8696,
											"end": 8698,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8678,
											"end": 8699,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8708,
											"end": 8738,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8774,
											"end": 8808,
											"name": "PUSH",
											"source": 17,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8769,
											"end": 8771,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8754,
											"end": 8772,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8747,
											"end": 8809,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8841,
											"end": 8843,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8826,
											"end": 8844,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8494,
											"end": 8850,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9685,
											"end": 9812,
											"name": "tag",
											"source": 17,
											"value": "209"
										},
										{
											"begin": 9685,
											"end": 9812,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9746,
											"end": 9756,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 9741,
											"end": 9744,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 9737,
											"end": 9757,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9727,
											"end": 9758,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9777,
											"end": 9781,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 9767,
											"end": 9782,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9801,
											"end": 9805,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9798,
											"end": 9799,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9791,
											"end": 9806,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9817,
											"end": 10093,
											"name": "tag",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 9817,
											"end": 10093,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9948,
											"end": 9951,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9986,
											"end": 9992,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9980,
											"end": 9993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10002,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 10048,
											"end": 10054,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10043,
											"end": 10046,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10036,
											"end": 10040,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10028,
											"end": 10034,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 10024,
											"end": 10041,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10002,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 10002,
											"end": 10055,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10002,
											"end": 10055,
											"name": "tag",
											"source": 17,
											"value": "635"
										},
										{
											"begin": 10002,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10071,
											"end": 10087,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10071,
											"end": 10087,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10071,
											"end": 10087,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10071,
											"end": 10087,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10071,
											"end": 10087,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9817,
											"end": 10093,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9817,
											"end": 10093,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10505,
											"end": 10959,
											"name": "tag",
											"source": 17,
											"value": "232"
										},
										{
											"begin": 10505,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10730,
											"end": 10736,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10719,
											"end": 10728,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10712,
											"end": 10737,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10773,
											"end": 10775,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10768,
											"end": 10770,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10757,
											"end": 10766,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10753,
											"end": 10771,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10746,
											"end": 10776,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10693,
											"end": 10697,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10799,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 10840,
											"end": 10842,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10829,
											"end": 10838,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10825,
											"end": 10843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10817,
											"end": 10823,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10799,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 10799,
											"end": 10844,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10799,
											"end": 10844,
											"name": "tag",
											"source": 17,
											"value": "638"
										},
										{
											"begin": 10799,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10892,
											"end": 10901,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10884,
											"end": 10890,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10880,
											"end": 10902,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10875,
											"end": 10877,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10853,
											"end": 10903,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10920,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 10946,
											"end": 10952,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10938,
											"end": 10944,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10920,
											"end": 10953,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 10920,
											"end": 10953,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10920,
											"end": 10953,
											"name": "tag",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 10920,
											"end": 10953,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10912,
											"end": 10953,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 10505,
											"end": 10959,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10505,
											"end": 10959,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 13767,
											"end": 13894,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 13767,
											"end": 13894,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13828,
											"end": 13838,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 13823,
											"end": 13826,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 13819,
											"end": 13839,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13816,
											"end": 13817,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13809,
											"end": 13840,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13859,
											"end": 13863,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 13856,
											"end": 13857,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13849,
											"end": 13864,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13883,
											"end": 13887,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13880,
											"end": 13881,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13873,
											"end": 13888,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13899,
											"end": 14024,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 13899,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13939,
											"end": 13943,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13967,
											"end": 13968,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13964,
											"end": 13965,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13961,
											"end": 13969,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 13958,
											"end": 13992,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13958,
											"end": 13992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 13958,
											"end": 13992,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13972,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 13972,
											"end": 13990,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 13972,
											"end": 13990,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13972,
											"end": 13990,
											"name": "tag",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 13972,
											"end": 13990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14009,
											"end": 14018,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14009,
											"end": 14018,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13899,
											"end": 14024,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14029,
											"end": 14157,
											"name": "tag",
											"source": 17,
											"value": "331"
										},
										{
											"begin": 14029,
											"end": 14157,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14069,
											"end": 14072,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14100,
											"end": 14101,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14096,
											"end": 14102,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 14093,
											"end": 14094,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14090,
											"end": 14103,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14087,
											"end": 14126,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14142,
											"end": 14151,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14142,
											"end": 14151,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14029,
											"end": 14157,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 15625,
											"end": 16039,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 15625,
											"end": 16039,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15809,
											"end": 15830,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15830,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15809,
											"end": 15830,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15866,
											"end": 15868,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15839,
											"end": 15869,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15905,
											"end": 15939,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 15900,
											"end": 15902,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15885,
											"end": 15903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15885,
											"end": 15903,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15878,
											"end": 15940,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15971,
											"end": 15973,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15956,
											"end": 15974,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15949,
											"end": 15997,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16029,
											"end": 16032,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 16014,
											"end": 16033,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16014,
											"end": 16033,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15625,
											"end": 16039,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16462,
											"end": 16932,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 16462,
											"end": 16932,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16641,
											"end": 16644,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16679,
											"end": 16685,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16673,
											"end": 16686,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 16695,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 16741,
											"end": 16747,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16736,
											"end": 16739,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 16729,
											"end": 16733,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16721,
											"end": 16727,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 16717,
											"end": 16734,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16695,
											"end": 16748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 16695,
											"end": 16748,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16695,
											"end": 16748,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 16695,
											"end": 16748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16811,
											"end": 16824,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16811,
											"end": 16824,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 16770,
											"end": 16786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16770,
											"end": 16786,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16770,
											"end": 16786,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16770,
											"end": 16786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16833,
											"end": 16890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 16811,
											"end": 16824,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16770,
											"end": 16786,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16867,
											"end": 16871,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16855,
											"end": 16872,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 16855,
											"end": 16872,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16833,
											"end": 16890,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 16833,
											"end": 16890,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16833,
											"end": 16890,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 16833,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16906,
											"end": 16926,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16906,
											"end": 16926,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 16462,
											"end": 16932,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16462,
											"end": 16932,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16937,
											"end": 17426,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 16937,
											"end": 17426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17206,
											"end": 17221,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 17206,
											"end": 17221,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17206,
											"end": 17221,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17188,
											"end": 17222,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17188,
											"end": 17222,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17258,
											"end": 17273,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17258,
											"end": 17273,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 17253,
											"end": 17255,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17238,
											"end": 17256,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17231,
											"end": 17274,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17305,
											"end": 17307,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17290,
											"end": 17308,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17290,
											"end": 17308,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17283,
											"end": 17317,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17283,
											"end": 17317,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17283,
											"end": 17317,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17353,
											"end": 17356,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 17348,
											"end": 17350,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 17333,
											"end": 17351,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17333,
											"end": 17351,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17326,
											"end": 17357,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17326,
											"end": 17357,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17326,
											"end": 17357,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17131,
											"end": 17135,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17131,
											"end": 17135,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17374,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "639"
										},
										{
											"begin": 17374,
											"end": 17420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17400,
											"end": 17419,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17400,
											"end": 17419,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17392,
											"end": 17398,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17374,
											"end": 17420,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "549"
										},
										{
											"begin": 17374,
											"end": 17420,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17431,
											"end": 17680,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 17431,
											"end": 17680,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17500,
											"end": 17506,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17553,
											"end": 17555,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17541,
											"end": 17550,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17532,
											"end": 17539,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 17528,
											"end": 17551,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17524,
											"end": 17556,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 17521,
											"end": 17573,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 17521,
											"end": 17573,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 17521,
											"end": 17573,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 17569,
											"end": 17570,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17566,
											"end": 17567,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 17559,
											"end": 17571,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 17521,
											"end": 17573,
											"name": "tag",
											"source": 17,
											"value": "666"
										},
										{
											"begin": 17521,
											"end": 17573,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17601,
											"end": 17610,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17595,
											"end": 17611,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 17620,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 17644,
											"end": 17649,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17620,
											"end": 17650,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 17620,
											"end": 17650,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18819,
											"end": 18954,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 18819,
											"end": 18954,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18858,
											"end": 18861,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18879,
											"end": 18896,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 18879,
											"end": 18896,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18879,
											"end": 18896,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18876,
											"end": 18919,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 18876,
											"end": 18919,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "tag",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 18899,
											"end": 18917,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18946,
											"end": 18947,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 18935,
											"end": 18948,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18935,
											"end": 18948,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18819,
											"end": 18954,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18959,
											"end": 19086,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 18959,
											"end": 19086,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19020,
											"end": 19030,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 19015,
											"end": 19018,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 19011,
											"end": 19031,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 19008,
											"end": 19009,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19001,
											"end": 19032,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19051,
											"end": 19055,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 19048,
											"end": 19049,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 19041,
											"end": 19056,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19075,
											"end": 19079,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 19072,
											"end": 19073,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19065,
											"end": 19080,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 19091,
											"end": 19211,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 19091,
											"end": 19211,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19131,
											"end": 19132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19157,
											"end": 19158,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19147,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 19147,
											"end": 19182,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "tag",
											"source": 17,
											"value": "677"
										},
										{
											"begin": 19162,
											"end": 19180,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19196,
											"end": 19205,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 19196,
											"end": 19205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19091,
											"end": 19211,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19216,
											"end": 19328,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 19216,
											"end": 19328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19248,
											"end": 19249,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19274,
											"end": 19275,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19264,
											"end": 19299,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 19264,
											"end": 19299,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19279,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 19279,
											"end": 19297,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 19279,
											"end": 19297,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19279,
											"end": 19297,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 19279,
											"end": 19297,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19313,
											"end": 19322,
											"name": "MOD",
											"source": 17
										},
										{
											"begin": 19313,
											"end": 19322,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19216,
											"end": 19328,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19333,
											"end": 19460,
											"name": "tag",
											"source": 17,
											"value": "529"
										},
										{
											"begin": 19333,
											"end": 19460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19394,
											"end": 19404,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 19389,
											"end": 19392,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 19385,
											"end": 19405,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 19382,
											"end": 19383,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19375,
											"end": 19406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19425,
											"end": 19429,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 19422,
											"end": 19423,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 19415,
											"end": 19430,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19449,
											"end": 19453,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 19446,
											"end": 19447,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19439,
											"end": 19454,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"holder()": "e534155d",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mintedHeroIds(string)": "7c90b182",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeMint(string,string)": "4fa1f7ae",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setHolder(address)": "d979f5aa",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"heroId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"externalId\",\"type\":\"string\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"mintedHeroIds\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"heroId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"externalId\",\"type\":\"string\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newHolder\",\"type\":\"address\"}],\"name\":\"setHolder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/TribalpunkNFT.sol\":\"TribalpunkNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol\":{\"keccak256\":\"0x1f16f9737853b988865ab819d1ebf8b5009defe981c75bc9079e0f40ed2a2e57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e50f827969ca93b0d7bad1e022aa3147c8f390e9f91bb814752e8fbbbe621c\",\"dweb:/ipfs/QmdR2fJ2a3HM7FyC9pGD4JeKF9z6bxqU9FbhMyQfH1sDJH\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/NFTContract3/TribalpunkNFT.sol\":{\"keccak256\":\"0x5c850e4aa22ef1bbfb24a329328e06729ab36d5b647c0e6b49f354961cec8fef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1116930c80e95bcad9ac0bc51a240cab80301253b5f37eb4c0da1f61393fb82e\",\"dweb:/ipfs/QmVm6UZTgWcvuahVMmH2raQbcbPveH5P11jwGHjmmaTZhp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 222,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 224,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 228,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 232,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 242,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1241,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1245,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1248,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1252,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1577,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 122,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_paused",
								"offset": 0,
								"slot": "11",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_owner",
								"offset": 1,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 2408,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "12",
								"type": "t_struct(Counter)2073_storage"
							},
							{
								"astId": 2412,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "mintedHeroIds",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_string_memory_ptr,t_bool)"
							},
							{
								"astId": 2414,
								"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
								"label": "holder",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)2073_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 2072,
										"contract": "contracts/NFTContract3/TribalpunkNFT.sol:TribalpunkNFT",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							2067
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 2068,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2067,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								2067
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2057,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							2067
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 2068,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2067,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								2067
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							2045
						],
						"Context": [
							2067
						],
						"ERC165": [
							2368
						],
						"ERC721": [
							1062
						],
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Metadata": [
							1750
						],
						"IERC721Receiver": [
							1196
						],
						"Strings": [
							2344
						]
					},
					"id": 1063,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1179,
							"src": "132:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1197,
							"src": "156:31:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 201,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 1751,
							"src": "188:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 2046,
							"src": "231:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 203,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 2068,
							"src": "265:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 204,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 2345,
							"src": "299:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1063,
							"sourceUnit": 2369,
							"src": "333:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 207,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2067,
										"src": "647:7:2"
									},
									"id": 208,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:2"
								},
								{
									"baseName": {
										"id": 209,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2368,
										"src": "656:6:2"
									},
									"id": 210,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:2"
								},
								{
									"baseName": {
										"id": 211,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "664:7:2"
									},
									"id": 212,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:2"
								},
								{
									"baseName": {
										"id": 213,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1750,
										"src": "673:15:2"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:2"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 206,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:2",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1062,
							"linearizedBaseContracts": [
								1062,
								1750,
								1178,
								2368,
								2380,
								2067
							],
							"name": "ERC721",
							"nameLocation": "637:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 217,
									"libraryName": {
										"id": 215,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2045,
										"src": "701:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:2",
									"typeName": {
										"id": 216,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 220,
									"libraryName": {
										"id": 218,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2344,
										"src": "732:7:2"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:2",
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 222,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "776:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 221,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 224,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "823:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 223,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "898:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 227,
										"keyType": {
											"id": 225,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 226,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "992:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1093:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 235,
										"keyType": {
											"id": 233,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 234,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:2",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 242,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1062,
									"src": "1199:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 241,
										"keyType": {
											"id": 237,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 240,
											"keyType": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 239,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "1446:57:2",
										"statements": [
											{
												"expression": {
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 250,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1456:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 251,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1464:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:2"
											},
											{
												"expression": {
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 254,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1479:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 255,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 247,
														"src": "1489:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:2"
											}
										]
									},
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:2",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 259,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1402:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 244,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1423:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 246,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:2"
									},
									"scope": 1062,
									"src": "1390:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2367,
										2379
									],
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "1678:192:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 272,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1178,
																			"src": "1727:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1178_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1178_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 271,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1178",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 281,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 276,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1763:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 278,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1750,
																			"src": "1783:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1750_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1750_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 277,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1750",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 262,
																"src": "1851:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 283,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1062_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2367,
															"src": "1827:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 269,
												"id": 288,
												"nodeType": "Return",
												"src": "1688:175:2"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 266,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 264,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2368,
												"src": "1646:6:2"
											},
											{
												"id": 265,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2380,
												"src": "1654:7:2"
											}
										],
										"src": "1637:25:2"
									},
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1597:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 261,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1672:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:2"
									},
									"scope": 1062,
									"src": "1570:300:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1103
									],
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2010:124:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 300,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 293,
																"src": "2028:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2045:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2037:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 301,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2037:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 304,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2028:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2049:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 299,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2020:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2020:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 308,
												"nodeType": "ExpressionStatement",
												"src": "2020:74:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 309,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2111:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 311,
													"indexExpression": {
														"id": 310,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "2121:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2111:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 298,
												"id": 312,
												"nodeType": "Return",
												"src": "2104:23:2"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:2",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 295,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:2"
									},
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "1948:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:2"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2001:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:9:2"
									},
									"scope": 1062,
									"src": "1929:205:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1111
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "2272:154:2",
										"statements": [
											{
												"assignments": [
													324
												],
												"declarations": [
													{
														"constant": false,
														"id": 324,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2290:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 341,
														"src": "2282:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 323,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2282:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 328,
												"initialValue": {
													"baseExpression": {
														"id": 325,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2298:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 327,
													"indexExpression": {
														"id": 326,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "2306:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2298:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2282:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 330,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "2332:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2349:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2341:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 331,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2341:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2341:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2332:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2353:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 329,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2324:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2324:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "2324:73:2"
											},
											{
												"expression": {
													"id": 339,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 324,
													"src": "2414:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 322,
												"id": 340,
												"nodeType": "Return",
												"src": "2407:12:2"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2140:46:2",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2200:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 319,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2245:8:2"
									},
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2216:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2208:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2207:17:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2263:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2262:9:2"
									},
									"scope": 1062,
									"src": "2191:235:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1735
									],
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "2557:29:2",
										"statements": [
											{
												"expression": {
													"id": 349,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 222,
													"src": "2574:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 348,
												"id": 350,
												"nodeType": "Return",
												"src": "2567:12:2"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "2432:51:2",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2497:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 345,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2524:8:2"
									},
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "2542:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 346,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2542:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2541:15:2"
									},
									"scope": 1062,
									"src": "2488:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1741
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "2721:31:2",
										"statements": [
											{
												"expression": {
													"id": 359,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 224,
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 358,
												"id": 360,
												"nodeType": "Return",
												"src": "2731:14:2"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "2592:53:2",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2659:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2688:8:2"
									},
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:2:2"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2706:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2706:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2705:15:2"
									},
									"scope": 1062,
									"src": "2650:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1749
									],
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "2906:241:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 373,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "2932:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 372,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "2924:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2924:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2942:49:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2916:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2916:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "2916:76:2"
											},
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3017:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 403,
														"src": "3003:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 378,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3003:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 380,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "3027:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3027:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3003:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 385,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "3060:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3054:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 383,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3054:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3054:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3054:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 388,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3078:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3054:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3138:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3054:86:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 394,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "3106:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 395,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 365,
																				"src": "3115:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2226,
																			"src": "3115:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3115:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 392,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3089:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3089:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3089:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3082:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 390,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3082:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3082:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 370,
												"id": 402,
												"nodeType": "Return",
												"src": "3047:93:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2758:55:2",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2827:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2873:8:2"
									},
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2844:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2836:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:17:2"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "2891:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2891:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:15:2"
									},
									"scope": 1062,
									"src": "2818:329:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "3455:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3472:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 409,
												"id": 411,
												"nodeType": "Return",
												"src": "3465:9:2"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "3153:231:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3398:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3406:2:2"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "3440:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 407,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3440:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:15:2"
									},
									"scope": 1062,
									"src": "3389:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1151
									],
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3608:331:2",
										"statements": [
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3626:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 455,
														"src": "3618:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 422,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3618:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"arguments": [
														{
															"id": 426,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 424,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "3634:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "3634:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3618:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 430,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3675:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 431,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "3681:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3675:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3688:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3667:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3667:57:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "3667:57:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 437,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2057,
																		"src": "3756:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3756:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 439,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "3772:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3756:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 442,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "3798:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 443,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2057,
																			"src": "3805:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3805:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 441,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "3781:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3781:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3756:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3832:58:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3735:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3735:165:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "3735:165:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "3920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 452,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "3924:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 450,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "3911:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3911:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "3911:21:2"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "3487:46:2",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3547:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 420,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3599:8:2"
									},
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3563:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3555:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3555:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3575:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3567:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3554:29:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3608:0:2"
									},
									"scope": 1062,
									"src": "3538:401:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1167
									],
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "4085:132:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 467,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "4111:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 466,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "4103:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4103:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4121:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4095:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4095:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "4095:73:2"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 472,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "4186:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 474,
													"indexExpression": {
														"id": 473,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "4202:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4186:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 464,
												"id": 475,
												"nodeType": "Return",
												"src": "4179:31:2"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "3945:50:2",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4009:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 461,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4020:17:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 1062,
									"src": "4000:217:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1159
									],
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "4368:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 487,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2057,
																"src": "4397:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4397:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4411:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4421:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 486,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "4378:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "4378:52:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "4223:56:2",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4293:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 484,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4359:8:2"
									},
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4319:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "4311:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4334:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "4329:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4310:33:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4368:0:2"
									},
									"scope": 1062,
									"src": "4284:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1177
									],
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "4606:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 505,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4623:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 507,
														"indexExpression": {
															"id": 506,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4642:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4623:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 509,
													"indexExpression": {
														"id": 508,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "4649:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4623:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 504,
												"id": 510,
												"nodeType": "Return",
												"src": "4616:42:2"
											}
										]
									},
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "4443:55:2",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4512:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 501,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4582:8:2"
									},
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4537:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "4529:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4529:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4552:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "4544:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4544:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4528:33:2"
									},
									"returnParameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "4600:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 502,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4600:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4599:6:2"
									},
									"scope": 1062,
									"src": "4503:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1143
									],
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "4846:211:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 525,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2057,
																		"src": "4935:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4935:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 527,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "4949:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 524,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "4916:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4916:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4959:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4908:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4908:103:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "4908:103:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 533,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "5032:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "5038:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 535,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "5042:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 532,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "5022:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5022:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "5022:28:2"
											}
										]
									},
									"documentation": {
										"id": 513,
										"nodeType": "StructuredDocumentation",
										"src": "4671:51:2",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4736:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 521,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4837:8:2"
									},
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4766:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4758:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4808:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "4800:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:73:2"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4846:0:2"
									},
									"scope": 1062,
									"src": "4727:330:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "5246:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 551,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "5273:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5279:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5283:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5292:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 550,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															558,
															588
														],
														"referencedDeclaration": 588,
														"src": "5256:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "5256:39:2"
											}
										]
									},
									"documentation": {
										"id": 540,
										"nodeType": "StructuredDocumentation",
										"src": "5063:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5132:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 548,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5237:8:2"
									},
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5166:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "5158:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5188:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "5180:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5208:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "5200:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5200:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5148:73:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5246:0:2"
									},
									"scope": 1062,
									"src": "5123:179:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1123
									],
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "5519:169:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 573,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2057,
																		"src": "5556:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5556:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 575,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "5570:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 572,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "5537:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5537:41:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:51:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:103:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "5529:103:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 581,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5656:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 582,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5662:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 583,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5666:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 584,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "5675:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 580,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "5642:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5642:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "5642:39:2"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "5308:55:2",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5377:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 569,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5510:8:2"
									},
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5411:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5403:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5433:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5425:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "5470:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5470:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5393:101:2"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5519:0:2"
									},
									"scope": 1062,
									"src": "5368:320:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "6691:166:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 601,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "6711:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "6717:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "6721:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 600,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "6701:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6701:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "6701:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 608,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "6770:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 609,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "6776:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 610,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "6780:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 611,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6789:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 607,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "6747:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6747:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6797:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 606,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6739:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "6739:111:2"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "5694:851:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6559:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6590:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6582:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6612:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6604:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6604:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6632:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6624:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6662:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "6649:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 596,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6649:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6572:101:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6691:0:2"
									},
									"scope": 1062,
									"src": "6550:307:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "7231:54:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 625,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7248:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 626,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "7256:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7248:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7276:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7268:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 628,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7268:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7268:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7248:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 624,
												"id": 633,
												"nodeType": "Return",
												"src": "7241:37:2"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "6863:292:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7169:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7185:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7177:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7177:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7176:17:2"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "7225:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7225:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7224:6:2"
									},
									"scope": 1062,
									"src": "7160:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "7542:245:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 647,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 640,
																	"src": "7568:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 646,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "7560:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7560:16:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7578:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7552:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7552:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "7552:73:2"
											},
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7643:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "7635:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 652,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7635:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 658,
												"initialValue": {
													"arguments": [
														{
															"id": 656,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "7666:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 654,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "7651:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "7651:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7651:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7635:39:2"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 659,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "7692:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 660,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "7703:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7692:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 663,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 653,
																			"src": "7729:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 664,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 638,
																			"src": "7736:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 662,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 512,
																		"src": "7712:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7712:32:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7692:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 668,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 640,
																			"src": "7760:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 667,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 477,
																		"src": "7748:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7748:20:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 670,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "7772:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7748:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7692:87:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 673,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7691:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 644,
												"id": 674,
												"nodeType": "Return",
												"src": "7684:96:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "7291:147:2",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7452:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7479:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "7471:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7496:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "7488:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7470:34:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "7536:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7536:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:6:2"
									},
									"scope": 1062,
									"src": "7443:344:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "8182:43:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 685,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8202:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "8206:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8215:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 684,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															691,
															720
														],
														"referencedDeclaration": 720,
														"src": "8192:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8192:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "8192:26:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "7793:319:2",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8126:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8144:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "8136:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8136:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8156:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "8148:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8135:29:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8182:0:2"
									},
									"scope": 1062,
									"src": "8117:108:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "8561:196:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 702,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "8577:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "8581:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 701,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "8571:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8571:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "8571:18:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8651:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8643:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 708,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8643:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8643:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "8655:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 713,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "8659:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 714,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "8668:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 707,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1039,
																"src": "8620:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8620:54:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8688:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8599:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8599:151:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "8599:151:2"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "8231:210:2",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8455:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8482:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8474:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8532:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "8519:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 697,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8519:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8464:79:2"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8561:0:2"
									},
									"scope": 1062,
									"src": "8446:311:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "9140:366:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 729,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 723,
																"src": "9158:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9164:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 730,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9164:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9164:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9158:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9176:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9150:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9150:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "9150:61:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9229:17:2",
															"subExpression": {
																"arguments": [
																	{
																		"id": 740,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "9238:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 739,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 635,
																	"src": "9230:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9230:16:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9248:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9221:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9221:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "9221:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9319:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9311:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 747,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9311:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 750,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9311:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "9323:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9327:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 746,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "9290:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9290:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "9290:45:2"
											},
											{
												"expression": {
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 755,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "9346:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 757,
														"indexExpression": {
															"id": 756,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "9356:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9346:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9363:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9346:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "9346:18:2"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 761,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "9374:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 763,
														"indexExpression": {
															"id": 762,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9382:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9374:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 764,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "9393:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9374:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "9374:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9428:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9420:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 768,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9420:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9420:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "9432:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "9411:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9411:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "9406:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9483:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9475:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9475:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9475:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "9487:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "9491:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 776,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "9455:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9455:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "9455:44:2"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "8763:311:2",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9088:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9102:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "9094:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9114:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "9106:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9106:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9093:29:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9140:0:2"
									},
									"scope": 1062,
									"src": "9079:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "9772:357:2",
										"statements": [
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9790:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "9782:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 792,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9782:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"arguments": [
														{
															"id": 796,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "9813:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 794,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "9798:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 342,
														"src": "9798:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9798:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9782:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 800,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "9853:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9868:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9860:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 801,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9860:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9860:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 805,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "9872:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 799,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "9832:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9832:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "9832:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9935:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9927:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 809,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9927:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9927:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 813,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "9939:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 808,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "9918:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9918:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "9918:29:2"
											},
											{
												"expression": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 816,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "9958:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 818,
														"indexExpression": {
															"id": 817,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "9968:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9958:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9978:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9958:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "9958:21:2"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9989:23:2",
													"subExpression": {
														"baseExpression": {
															"id": 822,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "9996:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 824,
														"indexExpression": {
															"id": 823,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10004:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9996:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "9989:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "10037:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10052:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10044:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 829,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10044:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10044:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10056:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 827,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "10028:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10028:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "10023:41:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "10095:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10110:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10102:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 838,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10102:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10102:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 842,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10114:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 836,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "10075:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "10075:47:2"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "9512:206:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9732:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9746:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "9738:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9737:17:2"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9772:0:2"
									},
									"scope": 1062,
									"src": "9723:406:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "10562:496:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 859,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "10595:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 857,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "10580:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 342,
																	"src": "10580:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10580:23:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 861,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "10607:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10580:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10613:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 856,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10572:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10572:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "10572:81:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 867,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "10671:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10685:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10677:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 868,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10677:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10677:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10671:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10689:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 866,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10663:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10663:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "10663:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 877,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "10760:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 878,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10766:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10770:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 876,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "10739:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10739:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "10739:39:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10857:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 884,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10849:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 883,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10849:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10849:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10861:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 882,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "10840:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10840:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "10840:29:2"
											},
											{
												"expression": {
													"id": 894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 890,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "10880:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 892,
														"indexExpression": {
															"id": 891,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "10890:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10880:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10899:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10880:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 895,
												"nodeType": "ExpressionStatement",
												"src": "10880:20:2"
											},
											{
												"expression": {
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 896,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "10910:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 898,
														"indexExpression": {
															"id": 897,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10920:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10910:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10927:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10910:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "10910:18:2"
											},
											{
												"expression": {
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 902,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "10938:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 904,
														"indexExpression": {
															"id": 903,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10946:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10938:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 905,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "10957:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10938:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "10938:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 909,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "10984:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "10990:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "10994:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 908,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "10975:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10975:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "10970:32:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 915,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "11033:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "11039:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "11043:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "11013:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "11013:38:2"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "10135:313:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10462:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10489:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "10481:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10481:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10511:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "10503:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10503:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10531:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "10523:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10471:73:2"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10562:0:2"
									},
									"scope": 1062,
									"src": "10453:605:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "11233:107:2",
										"statements": [
											{
												"expression": {
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 929,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "11243:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 931,
														"indexExpression": {
															"id": 930,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "11259:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11243:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 932,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "11270:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11243:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "11243:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 938,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "11311:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 936,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "11296:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 342,
																"src": "11296:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11296:23:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "11321:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "11325:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 935,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "11287:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11287:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "EmitStatement",
												"src": "11282:51:2"
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "11064:100:2",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11178:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11195:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "11187:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11207:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "11199:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11199:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11186:29:2"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11233:0:2"
									},
									"scope": 1062,
									"src": "11169:171:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 976,
										"nodeType": "Block",
										"src": "11598:184:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 956,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "11616:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 957,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "11625:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11616:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11635:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11608:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11608:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "11608:55:2"
											},
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 962,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "11673:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 965,
															"indexExpression": {
																"id": 963,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "11692:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11673:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 966,
														"indexExpression": {
															"id": 964,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11699:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11673:35:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 967,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "11711:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11673:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "11673:46:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 971,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "11749:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 972,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "11756:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 973,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "11766:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 970,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1095,
														"src": "11734:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11734:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 975,
												"nodeType": "EmitStatement",
												"src": "11729:46:2"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "11346:124:2",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 977,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "11484:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "11512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11512:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11543:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "11535:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11566:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 977,
												"src": "11561:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11561:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11502:78:2"
									},
									"returnParameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11598:0:2"
									},
									"scope": 1062,
									"src": "11475:307:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "12491:622:2",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 991,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "12505:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1768,
														"src": "12505:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12505:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "13071:36:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13092:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 990,
															"id": 1035,
															"nodeType": "Return",
															"src": "13085:11:2"
														}
													]
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "12501:606:2",
												"trueBody": {
													"id": 1033,
													"nodeType": "Block",
													"src": "12522:543:2",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1013,
																		"nodeType": "Block",
																		"src": "12637:91:2",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1011,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1007,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1005,
																						"src": "12662:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1008,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1196,
																								"src": "12672:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1196_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1009,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1195,
																							"src": "12672:32:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1010,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12672:41:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12662:51:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 990,
																				"id": 1012,
																				"nodeType": "Return",
																				"src": "12655:58:2"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1014,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1006,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1005,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12629:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1014,
																				"src": "12622:13:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1004,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12622:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12621:15:2"
																	},
																	"src": "12613:115:2"
																},
																{
																	"block": {
																		"id": 1030,
																		"nodeType": "Block",
																		"src": "12757:298:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1018,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1016,
																							"src": "12779:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1019,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12779:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1020,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12796:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12779:18:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1028,
																					"nodeType": "Block",
																					"src": "12906:135:2",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "12937:86:2",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "12974:2:2",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12978:6:2"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "12970:3:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12970:15:2"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12993:6:2"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "12987:5:2"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12987:13:2"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "12963:6:2"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12963:38:2"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "12963:38:2"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1016,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12978:6:2",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1016,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12993:6:2",
																									"valueSize": 1
																								}
																							],
																							"id": 1027,
																							"nodeType": "InlineAssembly",
																							"src": "12928:95:2"
																						}
																					]
																				},
																				"id": 1029,
																				"nodeType": "IfStatement",
																				"src": "12775:266:2",
																				"trueBody": {
																					"id": 1026,
																					"nodeType": "Block",
																					"src": "12799:101:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1023,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12828:52:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1022,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12821:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1024,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12821:60:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1025,
																							"nodeType": "ExpressionStatement",
																							"src": "12821:60:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1031,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1017,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1016,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12749:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1031,
																				"src": "12736:19:2",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1015,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12736:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12735:21:2"
																	},
																	"src": "12729:326:2"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 998,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2057,
																			"src": "12577:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12577:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1000,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 980,
																		"src": "12591:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1001,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 984,
																		"src": "12597:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 986,
																		"src": "12606:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 995,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 982,
																				"src": "12556:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 994,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "12540:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1196_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12540:19:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1196",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1195,
																	"src": "12540:36:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1003,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12540:72:2",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1032,
															"nodeType": "TryStatement",
															"src": "12536:519:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 978,
										"nodeType": "StructuredDocumentation",
										"src": "11788:542:2",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12344:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12384:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12376:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12376:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12406:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12398:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12426:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12418:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12418:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12456:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12443:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 985,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12443:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12366:101:2"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "12485:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12485:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12484:6:2"
									},
									"scope": 1062,
									"src": "12335:778:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "13789:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "13119:545:2",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13678:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13716:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "13708:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13708:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13738:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "13730:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13730:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13758:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "13750:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13750:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13698:73:2"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13789:0:2"
									},
									"scope": 1062,
									"src": "13669:122:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "14282:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "13797:361:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "14172:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14209:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "14201:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14201:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14231:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "14223:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14251:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "14243:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1056,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14243:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14191:73:2"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14282:0:2"
									},
									"scope": 1062,
									"src": "14163:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1063,
							"src": "628:13658:2",
							"usedErrors": []
						}
					],
					"src": "107:14180:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1064,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1065,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 2381,
							"src": "133:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1067,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2380,
										"src": "271:7:3"
									},
									"id": 1068,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:3"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1066,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:3",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1178,
							"linearizedBaseContracts": [
								1178,
								2380
							],
							"name": "IERC721",
							"nameLocation": "260:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1077,
									"name": "Transfer",
									"nameLocation": "384:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "393:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "415:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "435:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:3"
									},
									"src": "378:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1086,
									"name": "Approval",
									"nameLocation": "571:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "580:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "603:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1086,
												"src": "629:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:3"
									},
									"src": "565:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:3",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1095,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "803:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "826:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "852:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:3"
									},
									"src": "782:85:3"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:3",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "973:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:3"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:3"
									},
									"scope": 1178,
									"src": "954:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1111,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1187:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:3"
									},
									"returnParameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1111,
												"src": "1227:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:3"
									},
									"scope": 1178,
									"src": "1170:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1123,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1844:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1866:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1886:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "1911:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:3"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:3"
									},
									"scope": 1178,
									"src": "1809:137:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "1952:690:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2656:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2690:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2682:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2712:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2704:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2732:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "2724:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2672:73:3"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2754:0:3"
									},
									"scope": 1178,
									"src": "2647:108:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1134,
										"nodeType": "StructuredDocumentation",
										"src": "2761:504:3",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3279:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3309:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3301:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3301:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3331:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3323:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3323:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3351:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3343:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:73:3"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 1178,
									"src": "3270:104:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "3380:452:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3846:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3862:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "3854:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3874:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "3866:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3853:29:3"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3891:0:3"
									},
									"scope": 1178,
									"src": "3837:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "3898:309:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4221:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4247:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4239:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4239:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4262:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "4257:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1155,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4238:34:3"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:3"
									},
									"scope": 1178,
									"src": "4212:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "4288:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4441:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4461:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "4453:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4452:17:3"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4501:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "4493:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4492:18:3"
									},
									"scope": 1178,
									"src": "4432:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "4517:138:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4669:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4694:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4686:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4709:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4701:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4701:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:33:3"
									},
									"returnParameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "4742:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4742:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4741:6:3"
									},
									"scope": 1178,
									"src": "4660:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1179,
							"src": "250:4500:3",
							"usedErrors": []
						}
					],
					"src": "108:4643:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1196
						]
					},
					"id": 1197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:4",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1196,
							"linearizedBaseContracts": [
								1196
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:4",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1195,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "859:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "885:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "907:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "932:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:4"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "976:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:4"
									},
									"scope": 1196,
									"src": "824:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1197,
							"src": "294:692:4",
							"usedErrors": []
						}
					],
					"src": "116:871:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
					"exportedSymbols": {
						"Address": [
							2045
						],
						"Context": [
							2067
						],
						"ERC165": [
							2368
						],
						"ERC721": [
							1062
						],
						"ERC721Burnable": [
							1226
						],
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Metadata": [
							1750
						],
						"IERC721Receiver": [
							1196
						],
						"Strings": [
							2344
						]
					},
					"id": 1227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 1063,
							"src": "136:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1227,
							"sourceUnit": 2068,
							"src": "160:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1202,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2067,
										"src": "340:7:5"
									},
									"id": 1203,
									"nodeType": "InheritanceSpecifier",
									"src": "340:7:5"
								},
								{
									"baseName": {
										"id": 1204,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "349:6:5"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "349:6:5"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1201,
								"nodeType": "StructuredDocumentation",
								"src": "198:105:5",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 1226,
							"linearizedBaseContracts": [
								1226,
								1062,
								1750,
								1178,
								2368,
								2380,
								2067
							],
							"name": "ERC721Burnable",
							"nameLocation": "322:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "575:195:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1213,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2057,
																		"src": "664:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "664:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1215,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1208,
																	"src": "678:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1212,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 676,
																"src": "645:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "645:41:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "688:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															},
															"value": "ERC721Burnable: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "637:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "637:102:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "637:102:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "755:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1220,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "749:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "749:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "749:14:5"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "362:162:5",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "538:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "551:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "543:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:17:5"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:5"
									},
									"scope": 1226,
									"src": "529:241:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1227,
							"src": "304:468:5",
							"usedErrors": []
						}
					],
					"src": "111:662:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
					"exportedSymbols": {
						"Address": [
							2045
						],
						"Context": [
							2067
						],
						"ERC165": [
							2368
						],
						"ERC721": [
							1062
						],
						"ERC721Enumerable": [
							1564
						],
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Enumerable": [
							1723
						],
						"IERC721Metadata": [
							1750
						],
						"IERC721Receiver": [
							1196
						],
						"Strings": [
							2344
						]
					},
					"id": 1565,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 1063,
							"src": "138:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1565,
							"sourceUnit": 1724,
							"src": "162:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1232,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "435:6:6"
									},
									"id": 1233,
									"nodeType": "InheritanceSpecifier",
									"src": "435:6:6"
								},
								{
									"baseName": {
										"id": 1234,
										"name": "IERC721Enumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1723,
										"src": "443:17:6"
									},
									"id": 1235,
									"nodeType": "InheritanceSpecifier",
									"src": "443:17:6"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1231,
								"nodeType": "StructuredDocumentation",
								"src": "197:199:6",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."
							},
							"fullyImplemented": false,
							"id": 1564,
							"linearizedBaseContracts": [
								1564,
								1723,
								1062,
								1750,
								1178,
								2368,
								2380,
								2067
							],
							"name": "ERC721Enumerable",
							"nameLocation": "415:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1241,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "576:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "520:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1240,
										"keyType": {
											"id": 1236,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "528:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "520:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1239,
											"keyType": {
												"id": 1237,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "547:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "539:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1238,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1245,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "694:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "658:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1244,
										"keyType": {
											"id": 1242,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "666:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "658:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1243,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "677:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1248,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "790:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "772:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1246,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "772:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1247,
										"nodeType": "ArrayTypeName",
										"src": "772:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1252,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "907:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1564,
									"src": "871:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1251,
										"keyType": {
											"id": 1249,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "879:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "871:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1250,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "890:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										290,
										2379
									],
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "1098:114:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1263,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "1115:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1265,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "1135:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1723_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1723_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1264,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1130:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1130:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1723",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1130:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1115:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1271,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1255,
																"src": "1193:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1269,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1169:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1564_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 290,
															"src": "1169:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1169:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1115:90:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1262,
												"id": 1274,
												"nodeType": "Return",
												"src": "1108:97:6"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "929:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "999:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1259,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1257,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2380,
												"src": "1066:7:6"
											},
											{
												"id": 1258,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "1075:6:6"
											}
										],
										"src": "1057:25:6"
									},
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1024:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1017:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1254,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1017:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:20:6"
									},
									"returnParameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "1092:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:6:6"
									},
									"scope": 1564,
									"src": "990:222:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1714
									],
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "1397:147:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1288,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1281,
																"src": "1415:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1291,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "1440:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1289,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1062,
																		"src": "1423:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1423:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1423:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1415:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1448:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															},
															"value": "ERC721Enumerable: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															}
														],
														"id": 1287,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1407:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1407:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "1407:87:6"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1297,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "1511:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1299,
														"indexExpression": {
															"id": 1298,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "1524:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1511:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1301,
													"indexExpression": {
														"id": 1300,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "1531:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1511:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1302,
												"nodeType": "Return",
												"src": "1504:33:6"
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "1218:68:6",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1300:19:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1283,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1370:8:6"
									},
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1328:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1320:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1320:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1343:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1335:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1319:30:6"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1388:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:9:6"
									},
									"scope": 1564,
									"src": "1291:253:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1704
									],
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "1685:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1311,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "1702:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1702:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1310,
												"id": 1313,
												"nodeType": "Return",
												"src": "1695:24:6"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "1550:60:6",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1624:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1658:8:6"
									},
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1635:2:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "1676:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:9:6"
									},
									"scope": 1564,
									"src": "1615:111:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1722
									],
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "1882:146:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1318,
																"src": "1900:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1326,
																		"name": "ERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1564,
																		"src": "1908:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$1564_$",
																			"typeString": "type(contract ERC721Enumerable)"
																		}
																	},
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1315,
																	"src": "1908:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1908:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1900:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1940:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															},
															"value": "ERC721Enumerable: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1892:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1892:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "1892:95:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1333,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "2004:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1335,
													"indexExpression": {
														"id": 1334,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "2015:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2004:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1323,
												"id": 1336,
												"nodeType": "Return",
												"src": "1997:24:6"
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "1732:61:6",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1807:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1320,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1855:8:6"
									},
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1828:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1820:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:15:6"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "1873:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:9:6"
									},
									"scope": 1564,
									"src": "1798:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1050
									],
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "2753:443:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1352,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2790:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1353,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "2796:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1354,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "2800:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1349,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2763:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1564_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "2763:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2763:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1356,
												"nodeType": "ExpressionStatement",
												"src": "2763:45:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1357,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2823:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2839:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2831:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1358,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2831:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2831:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2823:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1368,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "2918:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1369,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "2926:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2918:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1377,
													"nodeType": "IfStatement",
													"src": "2914:88:6",
													"trueBody": {
														"id": 1376,
														"nodeType": "Block",
														"src": "2930:72:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1372,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "2977:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1373,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "2983:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1371,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "2944:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2944:47:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1375,
																"nodeType": "ExpressionStatement",
																"src": "2944:47:6"
															}
														]
													}
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "2819:183:6",
												"trueBody": {
													"id": 1367,
													"nodeType": "Block",
													"src": "2843:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1364,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "2889:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1363,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "2857:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2857:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1366,
															"nodeType": "ExpressionStatement",
															"src": "2857:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1379,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "3015:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3029:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3021:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1380,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3021:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3021:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3015:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1390,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "3113:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "3119:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3113:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1399,
													"nodeType": "IfStatement",
													"src": "3109:81:6",
													"trueBody": {
														"id": 1398,
														"nodeType": "Block",
														"src": "3125:65:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1394,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "3167:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1395,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "3171:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1393,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "3139:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3139:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1397,
																"nodeType": "ExpressionStatement",
																"src": "3139:40:6"
															}
														]
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "3011:179:6",
												"trueBody": {
													"id": 1389,
													"nodeType": "Block",
													"src": "3033:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1386,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "3084:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1385,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "3047:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3047:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1388,
															"nodeType": "ExpressionStatement",
															"src": "3047:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "2034:585:6",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "2633:20:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1347,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2744:8:6"
									},
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2671:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2663:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2693:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2685:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2685:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2713:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "2705:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:73:6"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2753:0:6"
									},
									"scope": 1564,
									"src": "2624:572:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "3564:143:6",
										"statements": [
											{
												"assignments": [
													1411
												],
												"declarations": [
													{
														"constant": false,
														"id": 1411,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3582:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1431,
														"src": "3574:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1416,
												"initialValue": {
													"arguments": [
														{
															"id": 1414,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "3608:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1412,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "3591:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "3591:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3591:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3574:37:6"
											},
											{
												"expression": {
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1417,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "3621:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1420,
															"indexExpression": {
																"id": 1418,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3634:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3621:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1421,
														"indexExpression": {
															"id": 1419,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "3638:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3621:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1422,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "3648:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3621:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "3621:34:6"
											},
											{
												"expression": {
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1425,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "3665:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1427,
														"indexExpression": {
															"id": 1426,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "3683:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3665:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1428,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3694:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3665:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "3665:35:6"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "3202:283:6",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3499:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3535:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3527:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3547:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "3539:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3526:29:6"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:0:6"
									},
									"scope": 1564,
									"src": "3490:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1451,
										"nodeType": "Block",
										"src": "3968:95:6",
										"statements": [
											{
												"expression": {
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1438,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "3978:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1440,
														"indexExpression": {
															"id": 1439,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "3994:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3978:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1441,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "4005:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4005:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3978:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "3978:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1448,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "4048:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1445,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "4032:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4032:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4032:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "4032:24:6"
											}
										]
									},
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "3713:184:6",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3911:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3951:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1452,
												"src": "3943:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:17:6"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3968:0:6"
									},
									"scope": 1564,
									"src": "3902:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "4761:889:6",
										"statements": [
											{
												"assignments": [
													1461
												],
												"declarations": [
													{
														"constant": false,
														"id": 1461,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4950:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "4942:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1460,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4942:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1464,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "4984:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1462,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "4967:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1062_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 314,
															"src": "4967:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4967:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4992:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4967:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4942:51:6"
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "5011:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "5003:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1469,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"baseExpression": {
														"id": 1471,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "5024:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1473,
													"indexExpression": {
														"id": 1472,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "5042:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5024:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5003:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1475,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1470,
														"src": "5154:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1476,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1461,
														"src": "5168:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5154:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "5150:323:6",
												"trueBody": {
													"id": 1500,
													"nodeType": "Block",
													"src": "5184:289:6",
													"statements": [
														{
															"assignments": [
																1479
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1479,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5206:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1500,
																	"src": "5198:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1478,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5198:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1485,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1480,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1241,
																		"src": "5220:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1482,
																	"indexExpression": {
																		"id": 1481,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "5233:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5220:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1484,
																"indexExpression": {
																	"id": 1483,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1461,
																	"src": "5239:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5220:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5198:56:6"
														},
														{
															"expression": {
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1486,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1241,
																			"src": "5269:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1489,
																		"indexExpression": {
																			"id": 1487,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1455,
																			"src": "5282:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5269:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1490,
																	"indexExpression": {
																		"id": 1488,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "5288:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5269:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1491,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "5302:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5269:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1493,
															"nodeType": "ExpressionStatement",
															"src": "5269:44:6"
														},
														{
															"expression": {
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1494,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "5385:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1496,
																	"indexExpression": {
																		"id": 1495,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "5403:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5385:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1497,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "5418:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5385:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1499,
															"nodeType": "ExpressionStatement",
															"src": "5385:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5559:33:6",
													"subExpression": {
														"baseExpression": {
															"id": 1502,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "5566:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1504,
														"indexExpression": {
															"id": 1503,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "5584:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5566:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "5559:33:6"
											},
											{
												"expression": {
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5602:41:6",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1507,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1241,
																"src": "5609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1509,
															"indexExpression": {
																"id": 1508,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "5622:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5609:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1511,
														"indexExpression": {
															"id": 1510,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "5628:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5609:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1513,
												"nodeType": "ExpressionStatement",
												"src": "5602:41:6"
											}
										]
									},
									"documentation": {
										"id": 1453,
										"nodeType": "StructuredDocumentation",
										"src": "4069:606:6",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4689:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4730:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4722:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4722:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4744:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "4736:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4736:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:31:6"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4761:0:6"
									},
									"scope": 1564,
									"src": "4680:970:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "6009:990:6",
										"statements": [
											{
												"assignments": [
													1522
												],
												"declarations": [
													{
														"constant": false,
														"id": 1522,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6195:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1562,
														"src": "6187:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6187:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1527,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1523,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "6212:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6212:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6232:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6212:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6187:46:6"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1562,
														"src": "6243:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1528,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"baseExpression": {
														"id": 1530,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "6264:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1532,
													"indexExpression": {
														"id": 1531,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "6280:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6264:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6243:45:6"
											},
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6618:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1562,
														"src": "6610:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6610:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"baseExpression": {
														"id": 1536,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1248,
														"src": "6632:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1538,
													"indexExpression": {
														"id": 1537,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "6643:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6632:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6610:48:6"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1540,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "6669:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1542,
														"indexExpression": {
															"id": 1541,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6680:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6669:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1543,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "6694:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6669:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "6669:36:6"
											},
											{
												"expression": {
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1546,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "6773:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1548,
														"indexExpression": {
															"id": 1547,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "6789:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6773:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1549,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "6804:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6773:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "6773:41:6"
											},
											{
												"expression": {
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6935:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1552,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "6942:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1554,
														"indexExpression": {
															"id": 1553,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "6958:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6942:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "6935:31:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1557,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "6976:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6976:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "6976:16:6"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "5656:277:6",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5947:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5992:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "5984:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5984:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5983:17:6"
									},
									"returnParameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6009:0:6"
									},
									"scope": 1564,
									"src": "5938:1061:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1565,
							"src": "397:6604:6",
							"usedErrors": []
						}
					],
					"src": "113:6889:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							2045
						],
						"Context": [
							2067
						],
						"ERC165": [
							2368
						],
						"ERC721": [
							1062
						],
						"ERC721URIStorage": [
							1692
						],
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Metadata": [
							1750
						],
						"IERC721Receiver": [
							1196
						],
						"Strings": [
							2344
						]
					},
					"id": 1693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1566,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1567,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1063,
							"src": "138:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1569,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "271:6:7"
									},
									"id": 1570,
									"nodeType": "InheritanceSpecifier",
									"src": "271:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1568,
								"nodeType": "StructuredDocumentation",
								"src": "163:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								1062,
								1750,
								1178,
								2368,
								2380,
								2067
							],
							"name": "ERC721URIStorage",
							"nameLocation": "251:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1573,
									"libraryName": {
										"id": 1571,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2344,
										"src": "290:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "284:26:7",
									"typeName": {
										"id": 1572,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1577,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "390:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1692,
									"src": "355:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1576,
										"keyType": {
											"id": 1574,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "363:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "355:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 1575,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "374:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										404
									],
									"body": {
										"id": 1638,
										"nodeType": "Block",
										"src": "555:575:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1588,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "581:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1587,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "573:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "573:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 1586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "565:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "565:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "565:78:7"
											},
											{
												"assignments": [
													1594
												],
												"declarations": [
													{
														"constant": false,
														"id": 1594,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "668:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1638,
														"src": "654:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1593,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "654:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1598,
												"initialValue": {
													"baseExpression": {
														"id": 1595,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "680:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1597,
													"indexExpression": {
														"id": 1596,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "691:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "680:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "654:45:7"
											},
											{
												"assignments": [
													1600
												],
												"declarations": [
													{
														"constant": false,
														"id": 1600,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "723:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1638,
														"src": "709:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1599,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "709:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1603,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1601,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "730:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "730:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "709:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1606,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1600,
																	"src": "819:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "813:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1604,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "813:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "813:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "813:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "835:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "813:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1614,
												"nodeType": "IfStatement",
												"src": "809:70:7",
												"trueBody": {
													"id": 1613,
													"nodeType": "Block",
													"src": "838:41:7",
													"statements": [
														{
															"expression": {
																"id": 1611,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "859:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1585,
															"id": 1612,
															"nodeType": "Return",
															"src": "852:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1617,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "987:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "981:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1615,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "981:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "981:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "981:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1007:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "981:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1632,
												"nodeType": "IfStatement",
												"src": "977:106:7",
												"trueBody": {
													"id": 1631,
													"nodeType": "Block",
													"src": "1010:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1626,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1600,
																				"src": "1055:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1627,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1594,
																				"src": "1061:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1624,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1038:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1038:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1038:33:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1031:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1622,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1031:6:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1031:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1585,
															"id": 1630,
															"nodeType": "Return",
															"src": "1024:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1635,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "1115:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1633,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1100:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1692_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "1100:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1100:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1585,
												"id": 1637,
												"nodeType": "Return",
												"src": "1093:30:7"
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "407:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "476:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1582,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "522:8:7"
									},
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "493:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "485:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:17:7"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1583,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1692,
									"src": "467:663:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "1358:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1649,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1642,
																	"src": "1384:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1648,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "1376:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1376:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1394:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1368:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1368:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "1368:75:7"
											},
											{
												"expression": {
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1654,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "1453:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1656,
														"indexExpression": {
															"id": 1655,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "1464:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1453:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1657,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "1475:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1453:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "1453:31:7"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "1136:136:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1286:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1307:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "1299:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1330:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "1316:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1316:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1298:42:7"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:7"
									},
									"scope": 1692,
									"src": "1277:214:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										846
									],
									"body": {
										"id": 1690,
										"nodeType": "Block",
										"src": "1766:142:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1671,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1668,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1776:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1692_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 846,
														"src": "1776:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1776:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "1776:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1676,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "1817:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1678,
																	"indexExpression": {
																		"id": 1677,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "1828:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1817:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1811:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1674,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1811:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1811:26:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1811:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1848:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1689,
												"nodeType": "IfStatement",
												"src": "1807:95:7",
												"trueBody": {
													"id": 1688,
													"nodeType": "Block",
													"src": "1851:51:7",
													"statements": [
														{
															"expression": {
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1865:26:7",
																"subExpression": {
																	"baseExpression": {
																		"id": 1683,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "1872:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1685,
																	"indexExpression": {
																		"id": 1684,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "1883:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1872:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1687,
															"nodeType": "ExpressionStatement",
															"src": "1865:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "1497:206:7",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1717:5:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1666,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1757:8:7"
									},
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1731:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "1723:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1723:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1722:17:7"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1766:0:7"
									},
									"scope": 1692,
									"src": "1708:200:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1693,
							"src": "233:1677:7",
							"usedErrors": []
						}
					],
					"src": "113:1798:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Enumerable": [
							1723
						]
					},
					"id": 1724,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1724,
							"sourceUnit": 1179,
							"src": "154:24:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1697,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "348:7:8"
									},
									"id": 1698,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:8"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1696,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1723,
							"linearizedBaseContracts": [
								1723,
								1178,
								2380
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:8",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1704,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:8"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "495:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:8"
									},
									"scope": 1723,
									"src": "449:55:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:8",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "715:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "730:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:8"
									},
									"returnParameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1714,
												"src": "768:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:8"
									},
									"scope": 1723,
									"src": "686:91:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1715,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:8",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1722,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "974:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:8"
									},
									"returnParameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "1012:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:8"
									},
									"scope": 1723,
									"src": "952:69:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1724,
							"src": "317:706:8",
							"usedErrors": []
						}
					],
					"src": "129:895:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Metadata": [
							1750
						]
					},
					"id": 1751,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1725,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1726,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1751,
							"sourceUnit": 1179,
							"src": "137:24:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1728,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "326:7:9"
									},
									"id": 1729,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1727,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1750,
							"linearizedBaseContracts": [
								1750,
								1178,
								2380
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:9"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "442:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:9"
									},
									"scope": 1750,
									"src": "403:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:9"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "569:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:9"
									},
									"scope": 1750,
									"src": "528:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1749,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "703:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:9"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1749,
												"src": "743:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:9"
									},
									"scope": 1750,
									"src": "685:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1751,
							"src": "297:463:9",
							"usedErrors": []
						}
					],
					"src": "112:649:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2045
						]
					},
					"id": 2046,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1752,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1753,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2045,
							"linearizedBaseContracts": [
								2045
							],
							"name": "Address",
							"nameLocation": "202:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1767,
										"nodeType": "Block",
										"src": "1241:254:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1761,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1756,
																"src": "1465:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1760,
												"id": 1766,
												"nodeType": "Return",
												"src": "1458:30:10"
											}
										]
									},
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:10",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1195:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:10"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1768,
												"src": "1235:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:10"
									},
									"scope": 2045,
									"src": "1175:320:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1801,
										"nodeType": "Block",
										"src": "2483:241:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1779,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2045",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2045",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1777,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1782,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "2526:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1776,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1786,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:10"
											},
											{
												"assignments": [
													1788,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1788,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1801,
														"src": "2578:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1787,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1795,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1789,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "2596:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1791,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1773,
																"src": "2618:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1797,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "2647:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:10"
											}
										]
									},
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "2431:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1802,
												"src": "2458:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:10"
									},
									"returnParameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:10"
									},
									"scope": 2045,
									"src": "2412:312:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "3555:84:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1813,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "3585:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1814,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1807,
															"src": "3593:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1812,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1819,
															1839
														],
														"referencedDeclaration": 1839,
														"src": "3572:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1811,
												"id": 1817,
												"nodeType": "Return",
												"src": "3565:67:10"
											}
										]
									},
									"documentation": {
										"id": 1803,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3488:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3504:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:10"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3541:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:10"
									},
									"scope": 2045,
									"src": "3466:173:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1838,
										"nodeType": "Block",
										"src": "4008:76:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1832,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "4047:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1833,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "4055:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1835,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "4064:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1831,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1859,
															1909
														],
														"referencedDeclaration": 1909,
														"src": "4025:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1830,
												"id": 1837,
												"nodeType": "Return",
												"src": "4018:59:10"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3892:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3916:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1823,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3943:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1825,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:10"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "3994:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:10"
									},
									"scope": 2045,
									"src": "3861:223:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "4589:111:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1852,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "4628:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1853,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "4636:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1854,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "4642:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1851,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1859,
															1909
														],
														"referencedDeclaration": 1909,
														"src": "4606:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1850,
												"id": 1857,
												"nodeType": "Return",
												"src": "4599:94:10"
											}
										]
									},
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "4486:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "4510:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "4537:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:10"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "4575:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:10"
									},
									"scope": 2045,
									"src": "4446:254:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "5127:320:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1876,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$2045",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$2045",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1875,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1874,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1879,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "5170:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1873,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1886,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1862,
																	"src": "5247:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1885,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "5236:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1884,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1890,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:10"
											},
											{
												"assignments": [
													1892,
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1892,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1908,
														"src": "5300:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1891,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1908,
														"src": "5314:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1893,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1901,
												"initialValue": {
													"arguments": [
														{
															"id": 1899,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1864,
															"src": "5367:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1895,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "5341:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1897,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1866,
																"src": "5360:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1903,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "5406:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1904,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "5415:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1905,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "5427:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1902,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "5389:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1872,
												"id": 1907,
												"nodeType": "Return",
												"src": "5382:58:10"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:10",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4988:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "5012:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "5039:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "5062:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1867,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:10"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "5113:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:10"
									},
									"scope": 2045,
									"src": "4948:499:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "5724:97:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1920,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1912,
															"src": "5760:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1914,
															"src": "5768:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1919,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1926,
															1961
														],
														"referencedDeclaration": 1961,
														"src": "5741:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1924,
												"nodeType": "Return",
												"src": "5734:80:10"
											}
										]
									},
									"documentation": {
										"id": 1910,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1912,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "5652:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "5668:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1913,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:10"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "5710:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1916,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:10"
									},
									"scope": 2045,
									"src": "5624:197:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1960,
										"nodeType": "Block",
										"src": "6163:228:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1940,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1929,
																	"src": "6192:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1939,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "6181:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1938,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1944,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:10"
											},
											{
												"assignments": [
													1946,
													1948
												],
												"declarations": [
													{
														"constant": false,
														"id": 1946,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "6252:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1945,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1948,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1960,
														"src": "6266:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1947,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1953,
												"initialValue": {
													"arguments": [
														{
															"id": 1951,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6311:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1949,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "6293:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1955,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "6350:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1956,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "6359:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1957,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1933,
															"src": "6371:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1954,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "6333:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1937,
												"id": 1959,
												"nodeType": "Return",
												"src": "6326:58:10"
											}
										]
									},
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "6042:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "6066:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1930,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "6093:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1932,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:10"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "6149:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1935,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:10"
									},
									"scope": 2045,
									"src": "6005:386:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1977,
										"nodeType": "Block",
										"src": "6667:101:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1972,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1964,
															"src": "6705:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1973,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "6713:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1971,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1978,
															2013
														],
														"referencedDeclaration": 2013,
														"src": "6684:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1970,
												"id": 1976,
												"nodeType": "Return",
												"src": "6677:84:10"
											}
										]
									},
									"documentation": {
										"id": 1962,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "6600:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "6616:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:10"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1978,
												"src": "6653:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:10"
									},
									"scope": 2045,
									"src": "6570:198:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "7109:232:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1992,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1981,
																	"src": "7138:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1991,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "7127:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1990,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:10"
											},
											{
												"assignments": [
													1998,
													2000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1998,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2012,
														"src": "7200:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1997,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2000,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 2012,
														"src": "7214:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1999,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2005,
												"initialValue": {
													"arguments": [
														{
															"id": 2003,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "7261:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2001,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1981,
															"src": "7241:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2007,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "7300:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2008,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "7309:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2009,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1985,
															"src": "7321:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2006,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2044,
														"src": "7283:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1989,
												"id": 2011,
												"nodeType": "Return",
												"src": "7276:58:10"
											}
										]
									},
									"documentation": {
										"id": 1979,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1981,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "6993:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "7017:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "7044:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:10"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "7095:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1987,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:10"
									},
									"scope": 2045,
									"src": "6954:387:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "7721:532:10",
										"statements": [
											{
												"condition": {
													"id": 2025,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2016,
													"src": "7735:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2041,
													"nodeType": "Block",
													"src": "7792:455:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2029,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "7876:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2039,
																"nodeType": "Block",
																"src": "8184:53:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2036,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2020,
																					"src": "8209:12:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2035,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 2037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2038,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:10"
																	}
																]
															},
															"id": 2040,
															"nodeType": "IfStatement",
															"src": "7872:365:10",
															"trueBody": {
																"id": 2034,
																"nodeType": "Block",
																"src": "7899:279:10",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:10",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:10"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:10"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:10",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:10",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:10"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:10"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:10"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 2018,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:10",
																				"valueSize": 1
																			},
																			{
																				"declaration": 2018,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:10",
																				"valueSize": 1
																			}
																		],
																		"id": 2033,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:10"
																	}
																]
															}
														}
													]
												},
												"id": 2042,
												"nodeType": "IfStatement",
												"src": "7731:516:10",
												"trueBody": {
													"id": 2028,
													"nodeType": "Block",
													"src": "7744:42:10",
													"statements": [
														{
															"expression": {
																"id": 2026,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2018,
																"src": "7765:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2024,
															"id": 2027,
															"nodeType": "Return",
															"src": "7758:17:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:10",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "7596:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2015,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "7618:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2017,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "7651:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2019,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:10"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "7707:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:10"
									},
									"scope": 2045,
									"src": "7561:692:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2046,
							"src": "194:8061:10",
							"usedErrors": []
						}
					],
					"src": "101:8155:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							2067
						]
					},
					"id": 2068,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2047,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2048,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 2067,
							"linearizedBaseContracts": [
								2067
							],
							"name": "Context",
							"nameLocation": "626:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2056,
										"nodeType": "Block",
										"src": "702:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2053,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2052,
												"id": 2055,
												"nodeType": "Return",
												"src": "712:17:11"
											}
										]
									},
									"id": 2057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:11"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "693:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:11"
									},
									"scope": 2067,
									"src": "640:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2065,
										"nodeType": "Block",
										"src": "809:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2062,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 2061,
												"id": 2064,
												"nodeType": "Return",
												"src": "819:15:11"
											}
										]
									},
									"id": 2066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:11"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "793:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:11"
									},
									"scope": 2067,
									"src": "742:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2068,
							"src": "608:235:11",
							"usedErrors": []
						}
					],
					"src": "86:758:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							2141
						]
					},
					"id": 2142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2069,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2070,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 2141,
							"linearizedBaseContracts": [
								2141
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 2073,
									"members": [
										{
											"constant": false,
											"id": 2072,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2073,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2071,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 2141,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2084,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 2081,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2072,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2080,
												"id": 2083,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 2085,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2075,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2074,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2073,
														"src": "844:7:12"
													},
													"referencedDeclaration": 2073,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2085,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 2141,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 2097,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2091,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2093,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2072,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2096,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2087,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2086,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2073,
														"src": "964:7:12"
													},
													"referencedDeclaration": 2073,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 2141,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													2106
												],
												"declarations": [
													{
														"constant": false,
														"id": 2106,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2126,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2105,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2109,
												"initialValue": {
													"expression": {
														"id": 2107,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2102,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 2108,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2072,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2111,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2106,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 2110,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 2125,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 2117,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2072,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2120,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2106,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2124,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2100,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2073,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 2073,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 2141,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2139,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2133,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2072,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2138,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 2140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2140,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 2129,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2128,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2073,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 2073,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 2132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 2141,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2142,
							"src": "424:971:12",
							"usedErrors": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2344
						]
					},
					"id": 2345,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2144,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2344,
							"linearizedBaseContracts": [
								2344
							],
							"name": "Strings",
							"nameLocation": "154:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2147,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2344,
									"src": "168:58:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2145,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2146,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "399:632:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2155,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "601:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2161,
												"nodeType": "IfStatement",
												"src": "597:51:13",
												"trueBody": {
													"id": 2160,
													"nodeType": "Block",
													"src": "613:35:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2154,
															"id": 2159,
															"nodeType": "Return",
															"src": "627:10:13"
														}
													]
												}
											},
											{
												"assignments": [
													2163
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2225,
														"src": "657:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2165,
												"initialValue": {
													"id": 2164,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2150,
													"src": "672:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:13"
											},
											{
												"assignments": [
													2167
												],
												"declarations": [
													{
														"constant": false,
														"id": 2167,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2225,
														"src": "687:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2166,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2168,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:13"
											},
											{
												"body": {
													"id": 2179,
													"nodeType": "Block",
													"src": "729:57:13",
													"statements": [
														{
															"expression": {
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:13",
																"subExpression": {
																	"id": 2172,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "743:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2174,
															"nodeType": "ExpressionStatement",
															"src": "743:8:13"
														},
														{
															"expression": {
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2175,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2163,
																	"src": "765:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2178,
															"nodeType": "ExpressionStatement",
															"src": "765:10:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2169,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "718:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2180,
												"nodeType": "WhileStatement",
												"src": "711:75:13"
											},
											{
												"assignments": [
													2182
												],
												"declarations": [
													{
														"constant": false,
														"id": 2182,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2225,
														"src": "795:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2181,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2187,
												"initialValue": {
													"arguments": [
														{
															"id": 2185,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2167,
															"src": "827:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2183,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:13"
											},
											{
												"body": {
													"id": 2218,
													"nodeType": "Block",
													"src": "863:131:13",
													"statements": [
														{
															"expression": {
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2191,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "877:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "877:11:13"
														},
														{
															"expression": {
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2195,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2182,
																		"src": "902:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2197,
																	"indexExpression": {
																		"id": 2196,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2167,
																		"src": "909:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2202,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2207,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2205,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2150,
																									"src": "945:5:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2206,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2204,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2203,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:13",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2201,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2200,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:13",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2210,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2198,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2211,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2213,
															"nodeType": "ExpressionStatement",
															"src": "902:56:13"
														},
														{
															"expression": {
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "972:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2217,
															"nodeType": "ExpressionStatement",
															"src": "972:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2188,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2150,
														"src": "851:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2219,
												"nodeType": "WhileStatement",
												"src": "844:150:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2222,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "1017:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2221,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2220,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2154,
												"id": 2224,
												"nodeType": "Return",
												"src": "1003:21:13"
											}
										]
									},
									"documentation": {
										"id": 2148,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "346:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:13"
									},
									"returnParameters": {
										"id": 2154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "384:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:13"
									},
									"scope": 2344,
									"src": "328:703:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "1210:255:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2234,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "1224:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2240,
												"nodeType": "IfStatement",
												"src": "1220:54:13",
												"trueBody": {
													"id": 2239,
													"nodeType": "Block",
													"src": "1236:38:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2233,
															"id": 2238,
															"nodeType": "Return",
															"src": "1250:13:13"
														}
													]
												}
											},
											{
												"assignments": [
													2242
												],
												"declarations": [
													{
														"constant": false,
														"id": 2242,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:13",
														"nodeType": "VariableDeclaration",
														"scope": 2266,
														"src": "1283:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2244,
												"initialValue": {
													"id": 2243,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2229,
													"src": "1298:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:13"
											},
											{
												"assignments": [
													2246
												],
												"declarations": [
													{
														"constant": false,
														"id": 2246,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2266,
														"src": "1313:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2248,
												"initialValue": {
													"hexValue": "30",
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:13"
											},
											{
												"body": {
													"id": 2259,
													"nodeType": "Block",
													"src": "1359:57:13",
													"statements": [
														{
															"expression": {
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:13",
																"subExpression": {
																	"id": 2252,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "1373:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2254,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:13"
														},
														{
															"expression": {
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2255,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2242,
																	"src": "1395:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2258,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2249,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "1348:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2250,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2260,
												"nodeType": "WhileStatement",
												"src": "1341:75:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2262,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "1444:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2263,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "1451:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2261,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2267,
															2343
														],
														"referencedDeclaration": 2343,
														"src": "1432:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2233,
												"id": 2265,
												"nodeType": "Return",
												"src": "1425:33:13"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1157:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:13"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "1195:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:13"
									},
									"scope": 2344,
									"src": "1136:329:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2342,
										"nodeType": "Block",
										"src": "1678:351:13",
										"statements": [
											{
												"assignments": [
													2278
												],
												"declarations": [
													{
														"constant": false,
														"id": 2278,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2342,
														"src": "1688:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2277,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2287,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2282,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2272,
																	"src": "1724:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2279,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:13"
											},
											{
												"expression": {
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2288,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "1745:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2290,
														"indexExpression": {
															"hexValue": "30",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2293,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:13"
											},
											{
												"expression": {
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2294,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "1770:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2296,
														"indexExpression": {
															"hexValue": "31",
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2297,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2299,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:13"
											},
											{
												"body": {
													"id": 2328,
													"nodeType": "Block",
													"src": "1840:87:13",
													"statements": [
														{
															"expression": {
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2314,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "1854:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2316,
																	"indexExpression": {
																		"id": 2315,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2301,
																		"src": "1861:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2317,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2147,
																		"src": "1866:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2321,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2318,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2270,
																			"src": "1879:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2323,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:13"
														},
														{
															"expression": {
																"id": 2326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2324,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "1905:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2327,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2308,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2301,
														"src": "1828:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2329,
												"initializationExpression": {
													"assignments": [
														2301
													],
													"declarations": [
														{
															"constant": false,
															"id": 2301,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2329,
															"src": "1800:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2300,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2307,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2302,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2303,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2272,
																"src": "1816:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:13"
												},
												"loopExpression": {
													"expression": {
														"id": 2312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:13",
														"subExpression": {
															"id": 2311,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2301,
															"src": "1837:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2313,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2331,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "1944:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2330,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2336,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2339,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2278,
															"src": "2015:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2337,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2276,
												"id": 2341,
												"nodeType": "Return",
												"src": "2001:21:13"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "1609:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "1624:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:13"
									},
									"returnParameters": {
										"id": 2276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "1663:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2274,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:13"
									},
									"scope": 2344,
									"src": "1588:441:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2345,
							"src": "146:1885:13",
							"usedErrors": []
						}
					],
					"src": "86:1946:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2368
						],
						"IERC165": [
							2380
						]
					},
					"id": 2369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2346,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2347,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2369,
							"sourceUnit": 2381,
							"src": "124:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2349,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2380,
										"src": "754:7:14"
									},
									"id": 2350,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2348,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 2368,
							"linearizedBaseContracts": [
								2368,
								2380
							],
							"name": "ERC165",
							"nameLocation": "744:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2379
									],
									"body": {
										"id": 2366,
										"nodeType": "Block",
										"src": "920:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2359,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2353,
														"src": "937:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2361,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2380,
																	"src": "957:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2380_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2380_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2360,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2380",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2365,
												"nodeType": "Return",
												"src": "930:47:14"
											}
										]
									},
									"documentation": {
										"id": 2351,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:14",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2355,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:14"
									},
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "856:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2352,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:14"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2367,
												"src": "914:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:14"
									},
									"scope": 2368,
									"src": "829:155:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2369,
							"src": "726:260:14",
							"usedErrors": []
						}
					],
					"src": "99:888:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2380
						]
					},
					"id": 2381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2371,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2380,
							"linearizedBaseContracts": [
								2380
							],
							"name": "IERC165",
							"nameLocation": "415:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2372,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "801:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2373,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:15"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "844:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:15"
									},
									"scope": 2380,
									"src": "774:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2381,
							"src": "405:447:15",
							"usedErrors": []
						}
					],
					"src": "100:753:15"
				},
				"id": 15
			},
			"contracts/NFTContract3/TribalpunkNFT.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/TribalpunkNFT.sol",
					"exportedSymbols": {
						"Address": [
							2045
						],
						"Context": [
							2067
						],
						"Counters": [
							2141
						],
						"ERC165": [
							2368
						],
						"ERC721": [
							1062
						],
						"ERC721Burnable": [
							1226
						],
						"ERC721Enumerable": [
							1564
						],
						"ERC721URIStorage": [
							1692
						],
						"IERC165": [
							2380
						],
						"IERC721": [
							1178
						],
						"IERC721Enumerable": [
							1723
						],
						"IERC721Metadata": [
							1750
						],
						"IERC721Receiver": [
							1196
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						],
						"Strings": [
							2344
						],
						"TribalpunkNFT": [
							2611
						]
					},
					"id": 2612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2383,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 1063,
							"src": "57:57:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
							"id": 2384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 1565,
							"src": "115:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2385,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 1693,
							"src": "194:78:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 197,
							"src": "273:55:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2387,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 105,
							"src": "329:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol",
							"id": 2388,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 1227,
							"src": "382:76:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 2389,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2612,
							"sourceUnit": 2142,
							"src": "459:52:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2390,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "543:6:16"
									},
									"id": 2391,
									"nodeType": "InheritanceSpecifier",
									"src": "543:6:16"
								},
								{
									"baseName": {
										"id": 2392,
										"name": "ERC721Enumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1564,
										"src": "555:16:16"
									},
									"id": 2393,
									"nodeType": "InheritanceSpecifier",
									"src": "555:16:16"
								},
								{
									"baseName": {
										"id": 2394,
										"name": "ERC721URIStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1692,
										"src": "577:16:16"
									},
									"id": 2395,
									"nodeType": "InheritanceSpecifier",
									"src": "577:16:16"
								},
								{
									"baseName": {
										"id": 2396,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "599:8:16"
									},
									"id": 2397,
									"nodeType": "InheritanceSpecifier",
									"src": "599:8:16"
								},
								{
									"baseName": {
										"id": 2398,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "613:7:16"
									},
									"id": 2399,
									"nodeType": "InheritanceSpecifier",
									"src": "613:7:16"
								},
								{
									"baseName": {
										"id": 2400,
										"name": "ERC721Burnable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1226,
										"src": "626:14:16"
									},
									"id": 2401,
									"nodeType": "InheritanceSpecifier",
									"src": "626:14:16"
								}
							],
							"canonicalName": "TribalpunkNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2611,
							"linearizedBaseContracts": [
								2611,
								1226,
								104,
								196,
								1692,
								1564,
								1723,
								1062,
								1750,
								1178,
								2368,
								2380,
								2067
							],
							"name": "TribalpunkNFT",
							"nameLocation": "522:13:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2405,
									"libraryName": {
										"id": 2402,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2141,
										"src": "653:8:16"
									},
									"nodeType": "UsingForDirective",
									"src": "647:36:16",
									"typeName": {
										"id": 2404,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2403,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2073,
											"src": "666:16:16"
										},
										"referencedDeclaration": 2073,
										"src": "666:16:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 2408,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "714:15:16",
									"nodeType": "VariableDeclaration",
									"scope": 2611,
									"src": "689:40:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$2073_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2407,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2406,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2073,
											"src": "689:16:16"
										},
										"referencedDeclaration": 2073,
										"src": "689:16:16",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$2073_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "7c90b182",
									"id": 2412,
									"mutability": "mutable",
									"name": "mintedHeroIds",
									"nameLocation": "766:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 2611,
									"src": "735:44:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
										"typeString": "mapping(string => bool)"
									},
									"typeName": {
										"id": 2411,
										"keyType": {
											"id": 2409,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "743:6:16",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "735:23:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
											"typeString": "mapping(string => bool)"
										},
										"valueType": {
											"id": 2410,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "753:4:16",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e534155d",
									"id": 2414,
									"mutability": "mutable",
									"name": "holder",
									"nameLocation": "800:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2611,
									"src": "785:21:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2413,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "785:7:16",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0372de3fa001ec655fcb2f8096e13cb1f68d1b8b9bb9d2674fc7d880de7e8045",
									"id": 2424,
									"name": "NFTMinted",
									"nameLocation": "819:9:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "846:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "838:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "879:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "863:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "863:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"indexed": false,
												"mutability": "mutable",
												"name": "heroId",
												"nameLocation": "898:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "891:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2419,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "891:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"indexed": false,
												"mutability": "mutable",
												"name": "externalId",
												"nameLocation": "921:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "914:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "914:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:109:16"
									},
									"src": "813:125:16"
								},
								{
									"body": {
										"id": 2447,
										"nodeType": "Block",
										"src": "1014:99:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2434,
																"name": "_holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2426,
																"src": "1032:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1051:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1043:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2435,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1043:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1043:10:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1032:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420686f6c6465722061646472657373",
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1055:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423",
																"typeString": "literal_string \"Invalid holder address\""
															},
															"value": "Invalid holder address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423",
																"typeString": "literal_string \"Invalid holder address\""
															}
														],
														"id": 2433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1024:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:56:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2442,
												"nodeType": "ExpressionStatement",
												"src": "1024:56:16"
											},
											{
												"expression": {
													"id": 2445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2443,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2414,
														"src": "1090:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2444,
														"name": "_holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "1099:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1090:16:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2446,
												"nodeType": "ExpressionStatement",
												"src": "1090:16:16"
											}
										]
									},
									"id": 2448,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "54726962616c70756e6b4e4654",
													"id": 2429,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "980:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_69b59f93d667653001a09b1e1b7a1efb50b60d55eaf601388ddf9bfa584c2406",
														"typeString": "literal_string \"TribalpunkNFT\""
													},
													"value": "TribalpunkNFT"
												},
												{
													"hexValue": "54726962616c70756e6b4e4654",
													"id": 2430,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "997:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_69b59f93d667653001a09b1e1b7a1efb50b60d55eaf601388ddf9bfa584c2406",
														"typeString": "literal_string \"TribalpunkNFT\""
													},
													"value": "TribalpunkNFT"
												}
											],
											"id": 2431,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2428,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "973:6:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "973:40:16"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "_holder",
												"nameLocation": "964:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "956:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "955:17:16"
									},
									"returnParameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1014:0:16"
									},
									"scope": 2611,
									"src": "944:169:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2456,
										"nodeType": "Block",
										"src": "1153:25:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2453,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1163:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1163:8:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2455,
												"nodeType": "ExpressionStatement",
												"src": "1163:8:16"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2450,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1143:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1143:9:16"
										}
									],
									"name": "pause",
									"nameLocation": "1128:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1133:2:16"
									},
									"returnParameters": {
										"id": 2452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:0:16"
									},
									"scope": 2611,
									"src": "1119:59:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2465,
										"nodeType": "Block",
										"src": "1220:27:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2462,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1230:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1230:10:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "1230:10:16"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2459,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1210:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1210:9:16"
										}
									],
									"name": "unpause",
									"nameLocation": "1193:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1200:2:16"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:0:16"
									},
									"scope": 2611,
									"src": "1184:63:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2487,
										"nodeType": "Block",
										"src": "1309:105:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2474,
																"name": "_newHolder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2468,
																"src": "1327:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1349:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1341:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2475,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1341:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1341:10:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1327:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420686f6c6465722061646472657373",
															"id": 2480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1353:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423",
																"typeString": "literal_string \"Invalid holder address\""
															},
															"value": "Invalid holder address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fffda477f7692aae1a8541c9da90ca89824e5b636ce47dd3a6ef52c821737423",
																"typeString": "literal_string \"Invalid holder address\""
															}
														],
														"id": 2473,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1319:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1319:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2482,
												"nodeType": "ExpressionStatement",
												"src": "1319:59:16"
											},
											{
												"expression": {
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2483,
														"name": "holder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2414,
														"src": "1388:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2484,
														"name": "_newHolder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2468,
														"src": "1397:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1388:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2486,
												"nodeType": "ExpressionStatement",
												"src": "1388:19:16"
											}
										]
									},
									"functionSelector": "d979f5aa",
									"id": 2488,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2471,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2470,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1299:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1299:9:16"
										}
									],
									"name": "setHolder",
									"nameLocation": "1262:9:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "_newHolder",
												"nameLocation": "1280:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2488,
												"src": "1272:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1272:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:20:16"
									},
									"returnParameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1309:0:16"
									},
									"scope": 2611,
									"src": "1253:161:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2539,
										"nodeType": "Block",
										"src": "1523:390:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1554:22:16",
															"subExpression": {
																"baseExpression": {
																	"id": 2498,
																	"name": "mintedHeroIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2412,
																	"src": "1555:13:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																		"typeString": "mapping(string memory => bool)"
																	}
																},
																"id": 2500,
																"indexExpression": {
																	"id": 2499,
																	"name": "heroId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "1569:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1555:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726962616c70756e6b4e46543a206865726f20616c726561647920776173206d696e746564",
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1590:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c7e9122fb2cfa5343d1ce6125ef2ab5549aafcc79bd0089e4348b9110940b56",
																"typeString": "literal_string \"TribalpunkNFT: hero already was minted\""
															},
															"value": "TribalpunkNFT: hero already was minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c7e9122fb2cfa5343d1ce6125ef2ab5549aafcc79bd0089e4348b9110940b56",
																"typeString": "literal_string \"TribalpunkNFT: hero already was minted\""
															}
														],
														"id": 2497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1533:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1533:107:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2504,
												"nodeType": "ExpressionStatement",
												"src": "1533:107:16"
											},
											{
												"assignments": [
													2506
												],
												"declarations": [
													{
														"constant": false,
														"id": 2506,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "1659:7:16",
														"nodeType": "VariableDeclaration",
														"scope": 2539,
														"src": "1651:15:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2505,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1651:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2510,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2507,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "1669:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2073_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2085,
														"src": "1669:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$2073_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$2073_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1651:43:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2511,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2408,
															"src": "1704:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$2073_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 2513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2099,
														"src": "1704:25:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$2073_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$2073_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 2514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1704:27:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2515,
												"nodeType": "ExpressionStatement",
												"src": "1704:27:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2517,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "1751:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1759:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2516,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															691,
															720
														],
														"referencedDeclaration": 691,
														"src": "1741:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1741:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "1741:26:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2522,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1790:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2523,
															"name": "heroId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "1799:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2521,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "1777:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:29:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "ExpressionStatement",
												"src": "1777:29:16"
											},
											{
												"expression": {
													"id": 2530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2526,
															"name": "mintedHeroIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2412,
															"src": "1816:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 2528,
														"indexExpression": {
															"id": 2527,
															"name": "heroId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "1830:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1816:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1840:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1816:28:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2531,
												"nodeType": "ExpressionStatement",
												"src": "1816:28:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2533,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2506,
															"src": "1870:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2534,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2414,
															"src": "1879:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2535,
															"name": "heroId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2490,
															"src": "1887:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2536,
															"name": "externalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "1895:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2532,
														"name": "NFTMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2424,
														"src": "1860:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address,string memory,string memory)"
														}
													},
													"id": 2537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1860:46:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2538,
												"nodeType": "EmitStatement",
												"src": "1855:51:16"
											}
										]
									},
									"functionSelector": "4fa1f7ae",
									"id": 2540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2495,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2494,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1509:9:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "1509:9:16"
										}
									],
									"name": "safeMint",
									"nameLocation": "1429:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2490,
												"mutability": "mutable",
												"name": "heroId",
												"nameLocation": "1452:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "1438:20:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1438:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "externalId",
												"nameLocation": "1474:10:16",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "1460:24:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1460:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:48:16"
									},
									"returnParameters": {
										"id": 2496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1523:0:16"
									},
									"scope": 2611,
									"src": "1420:493:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1050,
										1402
									],
									"body": {
										"id": 2562,
										"nodeType": "Block",
										"src": "2080:62:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2557,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2542,
															"src": "2117:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2558,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2544,
															"src": "2123:2:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2559,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "2127:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2554,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2090:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TribalpunkNFT_$2611_$",
																"typeString": "type(contract super TribalpunkNFT)"
															}
														},
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1402,
														"src": "2090:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2090:45:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2561,
												"nodeType": "ExpressionStatement",
												"src": "2090:45:16"
											}
										]
									},
									"id": 2563,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2552,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2551,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "2066:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2066:13:16"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "1928:20:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2550,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2548,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "2040:6:16"
											},
											{
												"id": 2549,
												"name": "ERC721Enumerable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1564,
												"src": "2048:16:16"
											}
										],
										"src": "2031:34:16"
									},
									"parameters": {
										"id": 2547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1966:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "1958:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1988:2:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "1980:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2546,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2008:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2563,
												"src": "2000:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1948:73:16"
									},
									"returnParameters": {
										"id": 2553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:16"
									},
									"scope": 2611,
									"src": "1919:223:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										846,
										1691
									],
									"body": {
										"id": 2577,
										"nodeType": "Block",
										"src": "2312:37:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2574,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2565,
															"src": "2334:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2571,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2322:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TribalpunkNFT_$2611_$",
																"typeString": "type(contract super TribalpunkNFT)"
															}
														},
														"id": 2573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1691,
														"src": "2322:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2322:20:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "2322:20:16"
											}
										]
									},
									"id": 2578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "2225:5:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2569,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2567,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "2282:6:16"
											},
											{
												"id": 2568,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1692,
												"src": "2290:16:16"
											}
										],
										"src": "2273:34:16"
									},
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2239:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2578,
												"src": "2231:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2230:17:16"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2312:0:16"
									},
									"scope": 2611,
									"src": "2216:133:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										404,
										1639
									],
									"body": {
										"id": 2593,
										"nodeType": "Block",
										"src": "2497:47:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2590,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "2529:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2588,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2514:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TribalpunkNFT_$2611_$",
																"typeString": "type(contract super TribalpunkNFT)"
															}
														},
														"id": 2589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1639,
														"src": "2514:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2514:23:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2587,
												"id": 2592,
												"nodeType": "Return",
												"src": "2507:30:16"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 2594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2364:8:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2584,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2582,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "2435:6:16"
											},
											{
												"id": 2583,
												"name": "ERC721URIStorage",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1692,
												"src": "2443:16:16"
											}
										],
										"src": "2426:34:16"
									},
									"parameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2381:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "2373:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2372:17:16"
									},
									"returnParameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2594,
												"src": "2478:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2585,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2478:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:15:16"
									},
									"scope": 2611,
									"src": "2355:189:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										290,
										1276
									],
									"body": {
										"id": 2609,
										"nodeType": "Block",
										"src": "2695:60:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2606,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2596,
															"src": "2736:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 2604,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2712:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TribalpunkNFT_$2611_$",
																"typeString": "type(contract super TribalpunkNFT)"
															}
														},
														"id": 2605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1276,
														"src": "2712:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2712:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2603,
												"id": 2608,
												"nodeType": "Return",
												"src": "2705:43:16"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 2610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2559:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2600,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2598,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1062,
												"src": "2642:6:16"
											},
											{
												"id": 2599,
												"name": "ERC721Enumerable",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1564,
												"src": "2650:16:16"
											}
										],
										"src": "2633:34:16"
									},
									"parameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2584:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "2577:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2595,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2577:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:20:16"
									},
									"returnParameters": {
										"id": 2603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2610,
												"src": "2685:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2601,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2685:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2684:6:16"
									},
									"scope": 2611,
									"src": "2550:205:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2612,
							"src": "513:2244:16",
							"usedErrors": []
						}
					],
					"src": "32:2725:16"
				},
				"id": 16
			}
		}
	}
}