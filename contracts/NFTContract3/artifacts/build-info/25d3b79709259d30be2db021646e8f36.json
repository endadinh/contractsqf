{
	"id": "25d3b79709259d30be2db021646e8f36",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTContract3/SQFIFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721URIStorage.sol\";\nimport \"./Pausable.sol\";\nimport \"./Ownable.sol\";\nimport \"./ERC721Burnable.sol\";\nimport \"./Counters.sol\";\n\ncontract SQFItemFactory \n{\n    address public nftContract;\n\n    event NFTMinted(\n        uint256 tokenId,\n        address indexed to,\n        string itemId,\n        string externalId\n    );\n\n}"
			},
			"contracts/NFTContract3/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}"
			},
			"contracts/NFTContract3/ERC721Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC721.sol\";\nimport \"./Context.sol\";\n\n/**\n * @title ERC721 Burnable Token\n * @dev ERC721 Token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721Burnable is Context, ERC721 {\n    /**\n     * @dev Burns `tokenId`. See {ERC721-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721Burnable: caller is not owner nor approved\");\n        _burn(tokenId);\n    }\n}"
			},
			"contracts/NFTContract3/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}"
			},
			"contracts/NFTContract3/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}"
			},
			"contracts/NFTContract3/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC721.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721URIStorage: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}"
			},
			"contracts/NFTContract3/ERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/ERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ERC721.sol\";\nimport \"./IERC721Enumerable.sol\";\n\n/**\n * @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n * enumerability of all the token ids in the contract as well as all token ids owned by each\n * account.\n */\nabstract contract ERC721Enumerable is ERC721, IERC721Enumerable {\n    // Mapping from owner to list of owned token IDs\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\n\n    // Mapping from token ID to index of the owner tokens list\n    mapping(uint256 => uint256) private _ownedTokensIndex;\n\n    // Array with all token ids, used for enumeration\n    uint256[] private _allTokens;\n\n    // Mapping from token id to position in the allTokens array\n    mapping(uint256 => uint256) private _allTokensIndex;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC721) returns (bool) {\n        return interfaceId == type(IERC721Enumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenOfOwnerByIndex}.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721.balanceOf(owner), \"ERC721Enumerable: owner index out of bounds\");\n        return _ownedTokens[owner][index];\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _allTokens.length;\n    }\n\n    /**\n     * @dev See {IERC721Enumerable-tokenByIndex}.\n     */\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\n        require(index < ERC721Enumerable.totalSupply(), \"ERC721Enumerable: global index out of bounds\");\n        return _allTokens[index];\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual override {\n        super._beforeTokenTransfer(from, to, tokenId);\n\n        if (from == address(0)) {\n            _addTokenToAllTokensEnumeration(tokenId);\n        } else if (from != to) {\n            _removeTokenFromOwnerEnumeration(from, tokenId);\n        }\n        if (to == address(0)) {\n            _removeTokenFromAllTokensEnumeration(tokenId);\n        } else if (to != from) {\n            _addTokenToOwnerEnumeration(to, tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\n     * @param to address representing the new owner of the given token ID\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\n     */\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\n        uint256 length = ERC721.balanceOf(to);\n        _ownedTokens[to][length] = tokenId;\n        _ownedTokensIndex[tokenId] = length;\n    }\n\n    /**\n     * @dev Private function to add a token to this extension's token tracking data structures.\n     * @param tokenId uint256 ID of the token to be added to the tokens list\n     */\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\n        _allTokensIndex[tokenId] = _allTokens.length;\n        _allTokens.push(tokenId);\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\n     * @param from address representing the previous owner of the given token ID\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\n     */\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = ERC721.balanceOf(from) - 1;\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary\n        if (tokenIndex != lastTokenIndex) {\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\n\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n        }\n\n        // This also deletes the contents at the last position of the array\n        delete _ownedTokensIndex[tokenId];\n        delete _ownedTokens[from][lastTokenIndex];\n    }\n\n    /**\n     * @dev Private function to remove a token from this extension's token tracking data structures.\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\n     */\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\n        // then delete the last slot (swap and pop).\n\n        uint256 lastTokenIndex = _allTokens.length - 1;\n        uint256 tokenIndex = _allTokensIndex[tokenId];\n\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\n\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\n\n        // This also deletes the contents at the last position of the array\n        delete _allTokensIndex[tokenId];\n        _allTokens.pop();\n    }\n}"
			},
			"contracts/NFTContract3/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./Address.sol\";\nimport \"./Context.sol\";\nimport \"./Strings.sol\";\nimport \"./ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}"
			},
			"contracts/NFTContract3/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}"
			},
			"contracts/NFTContract3/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}"
			},
			"contracts/NFTContract3/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}"
			},
			"contracts/NFTContract3/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}"
			},
			"contracts/NFTContract3/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/NFTContract3/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}"
			},
			"contracts/NFTContract3/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}"
			},
			"contracts/NFTContract3/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}"
			},
			"contracts/NFTContract3/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTContract3/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract3/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract3/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220522e5da452ddcae0a9c6e39bec1e9a9c21b3877be2de2172e56a20be77b32e5564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220522e5da452ddcae0a9c6e39bec1e9a9c21b3877be2de2172e56a20be77b32e5564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0x2E 0x5D LOG4 MSTORE 0xDD 0xCA 0xE0 0xA9 0xC6 0xE3 SWAP12 0xEC 0x1E SWAP11 SWAP13 0x21 0xB3 DUP8 PUSH28 0xE2DE2172E56A20BE77B32E5564736F6C634300080D00330000000000 ",
							"sourceMap": "194:8061:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220522e5da452ddcae0a9c6e39bec1e9a9c21b3877be2de2172e56a20be77b32e5564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0x2E 0x5D LOG4 MSTORE 0xDD 0xCA 0xE0 0xA9 0xC6 0xE3 SWAP12 0xEC 0x1E SWAP11 SWAP13 0x21 0xB3 DUP8 PUSH28 0xE2DE2172E56A20BE77B32E5564736F6C634300080D00330000000000 ",
							"sourceMap": "194:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220522e5da452ddcae0a9c6e39bec1e9a9c21b3877be2de2172e56a20be77b32e5564736f6c634300080d0033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Address.sol\":{\"keccak256\":\"0x4f73eedf878079f3c11b05bb9db39c789ae782c0c1a15a8a31ad36aa7047a32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23c79bf4124e0b203677c5ab55ce73d8faf43f0d5c49b071c9f9f16fee74249\",\"dweb:/ipfs/QmNsMhnyeFS22LXmGGG7j6eto36bz8SEGbfDGPVu1EZcB8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract3/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract3/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b74764a05a62efcdca1d317c929577853c844088bd36b0b816530fdaefd4812a64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b74764a05a62efcdca1d317c929577853c844088bd36b0b816530fdaefd4812a64736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SELFBALANCE PUSH5 0xA05A62EFCD 0xCA SAR BALANCE PUSH29 0x929577853C844088BD36B0B816530FDAEFD4812A64736F6C634300080D STOP CALLER ",
							"sourceMap": "424:971:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b74764a05a62efcdca1d317c929577853c844088bd36b0b816530fdaefd4812a64736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 SELFBALANCE PUSH5 0xA05A62EFCD 0xCA SAR BALANCE PUSH29 0x929577853C844088BD36B0B816530FDAEFD4812A64736F6C634300080D STOP CALLER ",
							"sourceMap": "424:971:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b74764a05a62efcdca1d317c929577853c844088bd36b0b816530fdaefd4812a64736f6c634300080d0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Counters.sol\":{\"keccak256\":\"0x632d89cfbd5134bb48ab9f27f8acb3ef6230858240a06c01860523508cce9502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5aa5f1e2c16072e5b0976a2441d03b2a64e54b89eaed53b68f93d5838b4f0\",\"dweb:/ipfs/Qmax5x4ubHZdFoRRFKdiCKX9FY78UiKMSAQmP81Mszecop\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"]},\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract3/ERC721.sol\":563:14220  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTContract3/ERC721.sol\":1325:1438  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/NFTContract3/ERC721.sol\":1399:1404  name_ */\n  dup2\n    /* \"contracts/NFTContract3/ERC721.sol\":1391:1396  _name */\n  0x00\n    /* \"contracts/NFTContract3/ERC721.sol\":1391:1404  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/NFTContract3/ERC721.sol\":1424:1431  symbol_ */\n  dup1\n    /* \"contracts/NFTContract3/ERC721.sol\":1414:1421  _symbol */\n  0x01\n    /* \"contracts/NFTContract3/ERC721.sol\":1414:1431  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/NFTContract3/ERC721.sol\":1325:1438  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/NFTContract3/ERC721.sol\":563:14220  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_21:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_22:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_23:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_24:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_25:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_26:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_27:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_28:\n    /* \"#utility.yul\":957:984   */\n  tag_44\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_26\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_46\n  tag_27\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1030:1118   */\ntag_45:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_29:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_48\n  tag_21\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_49\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_28\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_30:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_52\n  tag_27\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1434:1490   */\ntag_51:\n    /* \"#utility.yul\":1508:1537   */\n  tag_53\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1917   */\ntag_31:\n    /* \"#utility.yul\":1678:1679   */\n  0x00\n    /* \"#utility.yul\":1688:1801   */\ntag_55:\n    /* \"#utility.yul\":1702:1708   */\n  dup4\n    /* \"#utility.yul\":1699:1700   */\n  dup2\n    /* \"#utility.yul\":1696:1709   */\n  lt\n    /* \"#utility.yul\":1688:1801   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":1787:1788   */\n  dup1\n    /* \"#utility.yul\":1782:1785   */\n  dup3\n    /* \"#utility.yul\":1778:1789   */\n  add\n    /* \"#utility.yul\":1772:1790   */\n  mload\n    /* \"#utility.yul\":1768:1769   */\n  dup2\n    /* \"#utility.yul\":1763:1766   */\n  dup5\n    /* \"#utility.yul\":1759:1770   */\n  add\n    /* \"#utility.yul\":1752:1791   */\n  mstore\n    /* \"#utility.yul\":1724:1726   */\n  0x20\n    /* \"#utility.yul\":1721:1722   */\n  dup2\n    /* \"#utility.yul\":1717:1727   */\n  add\n    /* \"#utility.yul\":1712:1727   */\n  swap1\n  pop\n    /* \"#utility.yul\":1688:1801   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":1819:1825   */\n  dup4\n    /* \"#utility.yul\":1816:1817   */\n  dup2\n    /* \"#utility.yul\":1813:1826   */\n  gt\n    /* \"#utility.yul\":1810:1911   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1899:1900   */\n  0x00\n    /* \"#utility.yul\":1890:1896   */\n  dup5\n    /* \"#utility.yul\":1885:1888   */\n  dup5\n    /* \"#utility.yul\":1881:1897   */\n  add\n    /* \"#utility.yul\":1874:1901   */\n  mstore\n    /* \"#utility.yul\":1810:1911   */\ntag_58:\n    /* \"#utility.yul\":1659:1917   */\n  pop\n    /* \"#utility.yul\":1610:1917   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1923:2344   */\ntag_32:\n    /* \"#utility.yul\":2012:2017   */\n  0x00\n    /* \"#utility.yul\":2037:2103   */\n  tag_60\n    /* \"#utility.yul\":2053:2102   */\n  tag_61\n    /* \"#utility.yul\":2095:2101   */\n  dup5\n    /* \"#utility.yul\":2053:2102   */\n  tag_30\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":2037:2103   */\n  tag_29\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":2028:2103   */\n  swap1\n  pop\n    /* \"#utility.yul\":2126:2132   */\n  dup3\n    /* \"#utility.yul\":2119:2124   */\n  dup2\n    /* \"#utility.yul\":2112:2133   */\n  mstore\n    /* \"#utility.yul\":2164:2168   */\n  0x20\n    /* \"#utility.yul\":2157:2162   */\n  dup2\n    /* \"#utility.yul\":2153:2169   */\n  add\n    /* \"#utility.yul\":2202:2205   */\n  dup5\n    /* \"#utility.yul\":2193:2199   */\n  dup5\n    /* \"#utility.yul\":2188:2191   */\n  dup5\n    /* \"#utility.yul\":2184:2200   */\n  add\n    /* \"#utility.yul\":2181:2206   */\n  gt\n    /* \"#utility.yul\":2178:2290   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2209:2288   */\n  tag_63\n  tag_25\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2178:2290   */\ntag_62:\n    /* \"#utility.yul\":2299:2338   */\n  tag_64\n    /* \"#utility.yul\":2331:2337   */\n  dup5\n    /* \"#utility.yul\":2326:2329   */\n  dup3\n    /* \"#utility.yul\":2321:2324   */\n  dup6\n    /* \"#utility.yul\":2299:2338   */\n  tag_31\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2018:2344   */\n  pop\n    /* \"#utility.yul\":1923:2344   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2719   */\ntag_33:\n    /* \"#utility.yul\":2431:2436   */\n  0x00\n    /* \"#utility.yul\":2480:2483   */\n  dup3\n    /* \"#utility.yul\":2473:2477   */\n  0x1f\n    /* \"#utility.yul\":2465:2471   */\n  dup4\n    /* \"#utility.yul\":2461:2478   */\n  add\n    /* \"#utility.yul\":2457:2484   */\n  slt\n    /* \"#utility.yul\":2447:2569   */\n  tag_66\n  jumpi\n    /* \"#utility.yul\":2488:2567   */\n  tag_67\n  tag_24\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2447:2569   */\ntag_66:\n    /* \"#utility.yul\":2598:2604   */\n  dup2\n    /* \"#utility.yul\":2592:2605   */\n  mload\n    /* \"#utility.yul\":2623:2713   */\n  tag_68\n    /* \"#utility.yul\":2709:2712   */\n  dup5\n    /* \"#utility.yul\":2701:2707   */\n  dup3\n    /* \"#utility.yul\":2694:2698   */\n  0x20\n    /* \"#utility.yul\":2686:2692   */\n  dup7\n    /* \"#utility.yul\":2682:2699   */\n  add\n    /* \"#utility.yul\":2623:2713   */\n  tag_32\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2614:2713   */\n  swap2\n  pop\n    /* \"#utility.yul\":2437:2719   */\n  pop\n    /* \"#utility.yul\":2364:2719   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2725:3578   */\ntag_3:\n    /* \"#utility.yul\":2824:2830   */\n  0x00\n    /* \"#utility.yul\":2832:2838   */\n  dup1\n    /* \"#utility.yul\":2881:2883   */\n  0x40\n    /* \"#utility.yul\":2869:2878   */\n  dup4\n    /* \"#utility.yul\":2860:2867   */\n  dup6\n    /* \"#utility.yul\":2856:2879   */\n  sub\n    /* \"#utility.yul\":2852:2884   */\n  slt\n    /* \"#utility.yul\":2849:2968   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2887:2966   */\n  tag_71\n  tag_22\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2849:2968   */\ntag_70:\n    /* \"#utility.yul\":3028:3029   */\n  0x00\n    /* \"#utility.yul\":3017:3026   */\n  dup4\n    /* \"#utility.yul\":3013:3030   */\n  add\n    /* \"#utility.yul\":3007:3031   */\n  mload\n    /* \"#utility.yul\":3058:3076   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3050:3056   */\n  dup2\n    /* \"#utility.yul\":3047:3077   */\n  gt\n    /* \"#utility.yul\":3044:3161   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3080:3159   */\n  tag_73\n  tag_23\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3044:3161   */\ntag_72:\n    /* \"#utility.yul\":3185:3259   */\n  tag_74\n    /* \"#utility.yul\":3251:3258   */\n  dup6\n    /* \"#utility.yul\":3242:3248   */\n  dup3\n    /* \"#utility.yul\":3231:3240   */\n  dup7\n    /* \"#utility.yul\":3227:3249   */\n  add\n    /* \"#utility.yul\":3185:3259   */\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":3175:3259   */\n  swap3\n  pop\n    /* \"#utility.yul\":2978:3269   */\n  pop\n    /* \"#utility.yul\":3329:3331   */\n  0x20\n    /* \"#utility.yul\":3318:3327   */\n  dup4\n    /* \"#utility.yul\":3314:3332   */\n  add\n    /* \"#utility.yul\":3308:3333   */\n  mload\n    /* \"#utility.yul\":3360:3378   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3352:3358   */\n  dup2\n    /* \"#utility.yul\":3349:3379   */\n  gt\n    /* \"#utility.yul\":3346:3463   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":3382:3461   */\n  tag_76\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3346:3463   */\ntag_75:\n    /* \"#utility.yul\":3487:3561   */\n  tag_77\n    /* \"#utility.yul\":3553:3560   */\n  dup6\n    /* \"#utility.yul\":3544:3550   */\n  dup3\n    /* \"#utility.yul\":3533:3542   */\n  dup7\n    /* \"#utility.yul\":3529:3551   */\n  add\n    /* \"#utility.yul\":3487:3561   */\n  tag_33\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3477:3561   */\n  swap2\n  pop\n    /* \"#utility.yul\":3279:3571   */\n  pop\n    /* \"#utility.yul\":2725:3578   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3584:3764   */\ntag_34:\n    /* \"#utility.yul\":3632:3709   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3629:3630   */\n  0x00\n    /* \"#utility.yul\":3622:3710   */\n  mstore\n    /* \"#utility.yul\":3729:3733   */\n  0x22\n    /* \"#utility.yul\":3726:3727   */\n  0x04\n    /* \"#utility.yul\":3719:3734   */\n  mstore\n    /* \"#utility.yul\":3753:3757   */\n  0x24\n    /* \"#utility.yul\":3750:3751   */\n  0x00\n    /* \"#utility.yul\":3743:3758   */\n  revert\n    /* \"#utility.yul\":3770:4090   */\ntag_11:\n    /* \"#utility.yul\":3814:3820   */\n  0x00\n    /* \"#utility.yul\":3851:3852   */\n  0x02\n    /* \"#utility.yul\":3845:3849   */\n  dup3\n    /* \"#utility.yul\":3841:3853   */\n  div\n    /* \"#utility.yul\":3831:3853   */\n  swap1\n  pop\n    /* \"#utility.yul\":3898:3899   */\n  0x01\n    /* \"#utility.yul\":3892:3896   */\n  dup3\n    /* \"#utility.yul\":3888:3900   */\n  and\n    /* \"#utility.yul\":3919:3937   */\n  dup1\n    /* \"#utility.yul\":3909:3990   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3975:3979   */\n  0x7f\n    /* \"#utility.yul\":3967:3973   */\n  dup3\n    /* \"#utility.yul\":3963:3980   */\n  and\n    /* \"#utility.yul\":3953:3980   */\n  swap2\n  pop\n    /* \"#utility.yul\":3909:3990   */\ntag_80:\n    /* \"#utility.yul\":4037:4039   */\n  0x20\n    /* \"#utility.yul\":4029:4035   */\n  dup3\n    /* \"#utility.yul\":4026:4040   */\n  lt\n    /* \"#utility.yul\":4006:4024   */\n  dup2\n    /* \"#utility.yul\":4003:4041   */\n  sub\n    /* \"#utility.yul\":4000:4084   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":4056:4074   */\n  tag_82\n  tag_34\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4000:4084   */\ntag_81:\n    /* \"#utility.yul\":3821:4090   */\n  pop\n    /* \"#utility.yul\":3770:4090   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract3/ERC721.sol\":563:14220  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract3/ERC721.sol\":563:14220  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTContract3/ERC721.sol\":1505:1805  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":2423:2521  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":3934:4151  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":3472:3873  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/NFTContract3/ERC721.sol\":4661:4991  function transferFrom(... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/NFTContract3/ERC721.sol\":5057:5236  function safeTransferFrom(... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/NFTContract3/ERC721.sol\":2126:2361  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":1864:2069  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":2585:2687  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":4218:4371  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/NFTContract3/ERC721.sol\":5302:5622  function safeTransferFrom(... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/NFTContract3/ERC721.sol\":2753:3082  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":4437:4599  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract3/ERC721.sol\":1505:1805  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/NFTContract3/ERC721.sol\":1607:1611  bool */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":1657:1682  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1682  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1653  interfaceId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1682  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1746  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":1713:1746  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/NFTContract3/ERC721.sol\":1698:1746  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":1698:1746  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1746  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1798  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":1762:1798  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \"contracts/NFTContract3/ERC721.sol\":1786:1797  interfaceId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":1762:1785  super.supportsInterface */\n      tag_79\n        /* \"contracts/NFTContract3/ERC721.sol\":1762:1798  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/NFTContract3/ERC721.sol\":1642:1798  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \"contracts/NFTContract3/ERC721.sol\":1623:1798  return... */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":1505:1805  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":2423:2521  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \"contracts/NFTContract3/ERC721.sol\":2477:2490  string memory */\n      0x60\n        /* \"contracts/NFTContract3/ERC721.sol\":2509:2514  _name */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2502:2514  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":2423:2521  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":3934:4151  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \"contracts/NFTContract3/ERC721.sol\":4010:4017  address */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":4037:4053  _exists(tokenId) */\n      tag_88\n        /* \"contracts/NFTContract3/ERC721.sol\":4045:4052  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":4037:4044  _exists */\n      tag_89\n        /* \"contracts/NFTContract3/ERC721.sol\":4037:4053  _exists(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/NFTContract3/ERC721.sol\":4029:4102  require(_exists(tokenId), \"ERC721: approved query for nonexistent token\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/NFTContract3/ERC721.sol\":4120:4135  _tokenApprovals */\n      0x04\n        /* \"contracts/NFTContract3/ERC721.sol\":4120:4144  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":4136:4143  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4120:4144  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":4113:4144  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":3934:4151  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":3472:3873  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \"contracts/NFTContract3/ERC721.sol\":3552:3565  address owner */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":3568:3591  ERC721.ownerOf(tokenId) */\n      tag_94\n        /* \"contracts/NFTContract3/ERC721.sol\":3583:3590  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":3568:3582  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/NFTContract3/ERC721.sol\":3568:3591  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/NFTContract3/ERC721.sol\":3552:3591  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":3615:3620  owner */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":3609:3620  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":3609:3611  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":3609:3620  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTContract3/ERC721.sol\":3601:3658  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"contracts/NFTContract3/ERC721.sol\":3706:3711  owner */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3711  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3702  _msgSender() */\n      tag_98\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3700  _msgSender */\n      tag_99\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3702  _msgSender() */\n      jump\t// in\n    tag_98:\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3711  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3752  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":3715:3752  isApprovedForAll(owner, _msgSender()) */\n      tag_101\n        /* \"contracts/NFTContract3/ERC721.sol\":3732:3737  owner */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":3739:3751  _msgSender() */\n      tag_102\n        /* \"contracts/NFTContract3/ERC721.sol\":3739:3749  _msgSender */\n      tag_99\n        /* \"contracts/NFTContract3/ERC721.sol\":3739:3751  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/NFTContract3/ERC721.sol\":3715:3731  isApprovedForAll */\n      tag_73\n        /* \"contracts/NFTContract3/ERC721.sol\":3715:3752  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/NFTContract3/ERC721.sol\":3690:3752  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_100:\n        /* \"contracts/NFTContract3/ERC721.sol\":3669:3834  require(... */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \"contracts/NFTContract3/ERC721.sol\":3845:3866  _approve(to, tokenId) */\n      tag_106\n        /* \"contracts/NFTContract3/ERC721.sol\":3854:3856  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":3858:3865  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":3845:3853  _approve */\n      tag_107\n        /* \"contracts/NFTContract3/ERC721.sol\":3845:3866  _approve(to, tokenId) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/NFTContract3/ERC721.sol\":3542:3873  {... */\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":3472:3873  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":4661:4991  function transferFrom(... */\n    tag_41:\n        /* \"contracts/NFTContract3/ERC721.sol\":4850:4891  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_109\n        /* \"contracts/NFTContract3/ERC721.sol\":4869:4881  _msgSender() */\n      tag_110\n        /* \"contracts/NFTContract3/ERC721.sol\":4869:4879  _msgSender */\n      tag_99\n        /* \"contracts/NFTContract3/ERC721.sol\":4869:4881  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/NFTContract3/ERC721.sol\":4883:4890  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":4850:4868  _isApprovedOrOwner */\n      tag_111\n        /* \"contracts/NFTContract3/ERC721.sol\":4850:4891  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/NFTContract3/ERC721.sol\":4842:4945  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/NFTContract3/ERC721.sol\":4956:4984  _transfer(from, to, tokenId) */\n      tag_115\n        /* \"contracts/NFTContract3/ERC721.sol\":4966:4970  from */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4972:4974  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4976:4983  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4956:4965  _transfer */\n      tag_116\n        /* \"contracts/NFTContract3/ERC721.sol\":4956:4984  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/NFTContract3/ERC721.sol\":4661:4991  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":5057:5236  function safeTransferFrom(... */\n    tag_44:\n        /* \"contracts/NFTContract3/ERC721.sol\":5190:5229  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_118\n        /* \"contracts/NFTContract3/ERC721.sol\":5207:5211  from */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":5213:5215  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":5217:5224  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":5190:5229  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":5190:5206  safeTransferFrom */\n      tag_65\n        /* \"contracts/NFTContract3/ERC721.sol\":5190:5229  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_118:\n        /* \"contracts/NFTContract3/ERC721.sol\":5057:5236  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":2126:2361  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \"contracts/NFTContract3/ERC721.sol\":2198:2205  address */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2217:2230  address owner */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":2233:2240  _owners */\n      0x02\n        /* \"contracts/NFTContract3/ERC721.sol\":2233:2249  _owners[tokenId] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2241:2248  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":2233:2249  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":2217:2249  address owner = _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":2284:2285  0 */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2267:2286  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":2267:2272  owner */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":2267:2286  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTContract3/ERC721.sol\":2259:2332  require(owner != address(0), \"ERC721: owner query for nonexistent token\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/NFTContract3/ERC721.sol\":2349:2354  owner */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":2342:2354  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":2126:2361  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":1864:2069  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_52:\n        /* \"contracts/NFTContract3/ERC721.sol\":1936:1943  uint256 */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":1980:1981  0 */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":1963:1982  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":1963:1968  owner */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":1963:1982  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTContract3/ERC721.sol\":1955:2029  require(owner != address(0), \"ERC721: balance query for the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"contracts/NFTContract3/ERC721.sol\":2046:2055  _balances */\n      0x03\n        /* \"contracts/NFTContract3/ERC721.sol\":2046:2062  _balances[owner] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2056:2061  owner */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":2046:2062  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/NFTContract3/ERC721.sol\":2039:2062  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":1864:2069  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":2585:2687  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \"contracts/NFTContract3/ERC721.sol\":2641:2654  string memory */\n      0x60\n        /* \"contracts/NFTContract3/ERC721.sol\":2673:2680  _symbol */\n      0x01\n        /* \"contracts/NFTContract3/ERC721.sol\":2666:2680  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_82\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_82\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":2585:2687  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":4218:4371  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \"contracts/NFTContract3/ERC721.sol\":4312:4364  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_134\n        /* \"contracts/NFTContract3/ERC721.sol\":4331:4343  _msgSender() */\n      tag_135\n        /* \"contracts/NFTContract3/ERC721.sol\":4331:4341  _msgSender */\n      tag_99\n        /* \"contracts/NFTContract3/ERC721.sol\":4331:4343  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"contracts/NFTContract3/ERC721.sol\":4345:4353  operator */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4355:4363  approved */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4312:4330  _setApprovalForAll */\n      tag_136\n        /* \"contracts/NFTContract3/ERC721.sol\":4312:4364  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/NFTContract3/ERC721.sol\":4218:4371  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":5302:5622  function safeTransferFrom(... */\n    tag_65:\n        /* \"contracts/NFTContract3/ERC721.sol\":5471:5512  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_138\n        /* \"contracts/NFTContract3/ERC721.sol\":5490:5502  _msgSender() */\n      tag_139\n        /* \"contracts/NFTContract3/ERC721.sol\":5490:5500  _msgSender */\n      tag_99\n        /* \"contracts/NFTContract3/ERC721.sol\":5490:5502  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/NFTContract3/ERC721.sol\":5504:5511  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":5471:5489  _isApprovedOrOwner */\n      tag_111\n        /* \"contracts/NFTContract3/ERC721.sol\":5471:5512  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/NFTContract3/ERC721.sol\":5463:5566  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_114\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"contracts/NFTContract3/ERC721.sol\":5576:5615  _safeTransfer(from, to, tokenId, _data) */\n      tag_142\n        /* \"contracts/NFTContract3/ERC721.sol\":5590:5594  from */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":5596:5598  to */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":5600:5607  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":5609:5614  _data */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":5576:5589  _safeTransfer */\n      tag_143\n        /* \"contracts/NFTContract3/ERC721.sol\":5576:5615  _safeTransfer(from, to, tokenId, _data) */\n      jump\t// in\n    tag_142:\n        /* \"contracts/NFTContract3/ERC721.sol\":5302:5622  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":2753:3082  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \"contracts/NFTContract3/ERC721.sol\":2826:2839  string memory */\n      0x60\n        /* \"contracts/NFTContract3/ERC721.sol\":2859:2875  _exists(tokenId) */\n      tag_145\n        /* \"contracts/NFTContract3/ERC721.sol\":2867:2874  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":2859:2866  _exists */\n      tag_89\n        /* \"contracts/NFTContract3/ERC721.sol\":2859:2875  _exists(tokenId) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/NFTContract3/ERC721.sol\":2851:2927  require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/NFTContract3/ERC721.sol\":2938:2959  string memory baseURI */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2962:2972  _baseURI() */\n      tag_149\n        /* \"contracts/NFTContract3/ERC721.sol\":2962:2970  _baseURI */\n      tag_150\n        /* \"contracts/NFTContract3/ERC721.sol\":2962:2972  _baseURI() */\n      jump\t// in\n    tag_149:\n        /* \"contracts/NFTContract3/ERC721.sol\":2938:2972  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":3013:3014  0 */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":2995:3002  baseURI */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":2989:3010  bytes(baseURI).length */\n      mload\n        /* \"contracts/NFTContract3/ERC721.sol\":2989:3014  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/NFTContract3/ERC721.sol\":2989:3075  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_151\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_152)\n    tag_151:\n        /* \"contracts/NFTContract3/ERC721.sol\":3041:3048  baseURI */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":3050:3068  tokenId.toString() */\n      tag_153\n        /* \"contracts/NFTContract3/ERC721.sol\":3050:3057  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":3050:3066  tokenId.toString */\n      tag_154\n        /* \"contracts/NFTContract3/ERC721.sol\":3050:3068  tokenId.toString() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/NFTContract3/ERC721.sol\":3024:3069  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_155\n      swap3\n      swap2\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/NFTContract3/ERC721.sol\":2989:3075  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_152:\n        /* \"contracts/NFTContract3/ERC721.sol\":2982:3075  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":2753:3082  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":4437:4599  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_73:\n        /* \"contracts/NFTContract3/ERC721.sol\":4534:4538  bool */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":4557:4575  _operatorApprovals */\n      0x05\n        /* \"contracts/NFTContract3/ERC721.sol\":4557:4582  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":4576:4581  owner */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":4557:4582  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTContract3/ERC721.sol\":4557:4592  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":4583:4591  operator */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":4557:4592  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":4550:4592  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":4437:4599  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \"contracts/NFTContract3/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"contracts/NFTContract3/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/NFTContract3/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/NFTContract3/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"contracts/NFTContract3/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":7094:7219  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_89:\n        /* \"contracts/NFTContract3/ERC721.sol\":7159:7163  bool */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":7210:7211  0 */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":7182:7212  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":7182:7189  _owners */\n      0x02\n        /* \"contracts/NFTContract3/ERC721.sol\":7182:7198  _owners[tokenId] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":7190:7197  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":7182:7198  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":7182:7212  _owners[tokenId] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/NFTContract3/ERC721.sol\":7175:7212  return _owners[tokenId] != address(0) */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":7094:7219  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_99:\n        /* \"contracts/NFTContract3/Context.sol\":693:700  address */\n      0x00\n        /* \"contracts/NFTContract3/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"contracts/NFTContract3/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":11103:11274  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_107:\n        /* \"contracts/NFTContract3/ERC721.sol\":11204:11206  to */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":11177:11192  _tokenApprovals */\n      0x04\n        /* \"contracts/NFTContract3/ERC721.sol\":11177:11201  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":11193:11200  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":11177:11201  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":11177:11206  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":11259:11266  tokenId */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":11255:11257  to */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":11221:11267  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":11230:11253  ERC721.ownerOf(tokenId) */\n      tag_162\n        /* \"contracts/NFTContract3/ERC721.sol\":11245:11252  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":11230:11244  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/NFTContract3/ERC721.sol\":11230:11253  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/NFTContract3/ERC721.sol\":11221:11267  Approval(ERC721.ownerOf(tokenId), to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/NFTContract3/ERC721.sol\":11103:11274  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":7377:7721  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_111:\n        /* \"contracts/NFTContract3/ERC721.sol\":7470:7474  bool */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":7494:7510  _exists(tokenId) */\n      tag_164\n        /* \"contracts/NFTContract3/ERC721.sol\":7502:7509  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":7494:7501  _exists */\n      tag_89\n        /* \"contracts/NFTContract3/ERC721.sol\":7494:7510  _exists(tokenId) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/NFTContract3/ERC721.sol\":7486:7559  require(_exists(tokenId), \"ERC721: operator query for nonexistent token\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"contracts/NFTContract3/ERC721.sol\":7569:7582  address owner */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":7585:7608  ERC721.ownerOf(tokenId) */\n      tag_168\n        /* \"contracts/NFTContract3/ERC721.sol\":7600:7607  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":7585:7599  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/NFTContract3/ERC721.sol\":7585:7608  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/NFTContract3/ERC721.sol\":7569:7608  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":7637:7642  owner */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7642  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7633  spender */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7642  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7677  spender == owner || getApproved(tokenId) == spender */\n      dup1\n      tag_169\n      jumpi\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":7670:7677  spender */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":7646:7677  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":7646:7666  getApproved(tokenId) */\n      tag_170\n        /* \"contracts/NFTContract3/ERC721.sol\":7658:7665  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":7646:7657  getApproved */\n      tag_31\n        /* \"contracts/NFTContract3/ERC721.sol\":7646:7666  getApproved(tokenId) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/NFTContract3/ERC721.sol\":7646:7677  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7677  spender == owner || getApproved(tokenId) == spender */\n    tag_169:\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7713  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":7681:7713  isApprovedForAll(owner, spender) */\n      tag_172\n        /* \"contracts/NFTContract3/ERC721.sol\":7698:7703  owner */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":7705:7712  spender */\n      dup6\n        /* \"contracts/NFTContract3/ERC721.sol\":7681:7697  isApprovedForAll */\n      tag_73\n        /* \"contracts/NFTContract3/ERC721.sol\":7681:7713  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/NFTContract3/ERC721.sol\":7626:7713  spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender) */\n    tag_171:\n        /* \"contracts/NFTContract3/ERC721.sol\":7618:7714  return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender)) */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":7377:7721  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":10387:10992  function _transfer(... */\n    tag_116:\n        /* \"contracts/NFTContract3/ERC721.sol\":10541:10545  from */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":10514:10545  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":10514:10537  ERC721.ownerOf(tokenId) */\n      tag_174\n        /* \"contracts/NFTContract3/ERC721.sol\":10529:10536  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":10514:10528  ERC721.ownerOf */\n      tag_47\n        /* \"contracts/NFTContract3/ERC721.sol\":10514:10537  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/NFTContract3/ERC721.sol\":10514:10545  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":10506:10587  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/NFTContract3/ERC721.sol\":10619:10620  0 */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10605:10621  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":10605:10607  to */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":10605:10621  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTContract3/ERC721.sol\":10597:10662  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/NFTContract3/ERC721.sol\":10673:10712  _beforeTokenTransfer(from, to, tokenId) */\n      tag_181\n        /* \"contracts/NFTContract3/ERC721.sol\":10694:10698  from */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10700:10702  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10704:10711  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10673:10693  _beforeTokenTransfer */\n      tag_182\n        /* \"contracts/NFTContract3/ERC721.sol\":10673:10712  _beforeTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_181:\n        /* \"contracts/NFTContract3/ERC721.sol\":10774:10803  _approve(address(0), tokenId) */\n      tag_183\n        /* \"contracts/NFTContract3/ERC721.sol\":10791:10792  0 */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10795:10802  tokenId */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":10774:10782  _approve */\n      tag_107\n        /* \"contracts/NFTContract3/ERC721.sol\":10774:10803  _approve(address(0), tokenId) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/NFTContract3/ERC721.sol\":10833:10834  1 */\n      0x01\n        /* \"contracts/NFTContract3/ERC721.sol\":10814:10823  _balances */\n      0x03\n        /* \"contracts/NFTContract3/ERC721.sol\":10814:10829  _balances[from] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10824:10828  from */\n      dup6\n        /* \"contracts/NFTContract3/ERC721.sol\":10814:10829  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10814:10834  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":10861:10862  1 */\n      0x01\n        /* \"contracts/NFTContract3/ERC721.sol\":10844:10853  _balances */\n      0x03\n        /* \"contracts/NFTContract3/ERC721.sol\":10844:10857  _balances[to] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10854:10856  to */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":10844:10857  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10844:10862  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":10891:10893  to */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":10872:10879  _owners */\n      0x02\n        /* \"contracts/NFTContract3/ERC721.sol\":10872:10888  _owners[tokenId] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10880:10887  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10872:10888  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":10872:10893  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":10928:10935  tokenId */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":10924:10926  to */\n      dup3\n        /* \"contracts/NFTContract3/ERC721.sol\":10909:10936  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":10918:10922  from */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":10909:10936  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/NFTContract3/ERC721.sol\":10947:10985  _afterTokenTransfer(from, to, tokenId) */\n      tag_188\n        /* \"contracts/NFTContract3/ERC721.sol\":10967:10971  from */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10973:10975  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10977:10984  tokenId */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":10947:10966  _afterTokenTransfer */\n      tag_189\n        /* \"contracts/NFTContract3/ERC721.sol\":10947:10985  _afterTokenTransfer(from, to, tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/NFTContract3/ERC721.sol\":10387:10992  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":11409:11716  function _setApprovalForAll(... */\n    tag_136:\n        /* \"contracts/NFTContract3/ERC721.sol\":11559:11567  operator */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":11550:11567  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":11550:11555  owner */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":11550:11567  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/NFTContract3/ERC721.sol\":11542:11597  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/NFTContract3/ERC721.sol\":11645:11653  approved */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":11607:11625  _operatorApprovals */\n      0x05\n        /* \"contracts/NFTContract3/ERC721.sol\":11607:11632  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":11626:11631  owner */\n      dup6\n        /* \"contracts/NFTContract3/ERC721.sol\":11607:11632  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/NFTContract3/ERC721.sol\":11607:11642  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":11633:11641  operator */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":11607:11642  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":11607:11653  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":11690:11698  operator */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":11668:11709  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":11683:11688  owner */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":11668:11709  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/NFTContract3/ERC721.sol\":11700:11708  approved */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":11668:11709  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_194\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/NFTContract3/ERC721.sol\":11409:11716  function _setApprovalForAll(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":6484:6791  function _safeTransfer(... */\n    tag_143:\n        /* \"contracts/NFTContract3/ERC721.sol\":6635:6663  _transfer(from, to, tokenId) */\n      tag_196\n        /* \"contracts/NFTContract3/ERC721.sol\":6645:6649  from */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6651:6653  to */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6655:6662  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6635:6644  _transfer */\n      tag_116\n        /* \"contracts/NFTContract3/ERC721.sol\":6635:6663  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/NFTContract3/ERC721.sol\":6681:6729  _checkOnERC721Received(from, to, tokenId, _data) */\n      tag_197\n        /* \"contracts/NFTContract3/ERC721.sol\":6704:6708  from */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6710:6712  to */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6714:6721  tokenId */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6723:6728  _data */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":6681:6703  _checkOnERC721Received */\n      tag_198\n        /* \"contracts/NFTContract3/ERC721.sol\":6681:6729  _checkOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/NFTContract3/ERC721.sol\":6673:6784  require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"contracts/NFTContract3/ERC721.sol\":6484:6791  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":3323:3415  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_150:\n        /* \"contracts/NFTContract3/ERC721.sol\":3374:3387  string memory */\n      0x60\n        /* \"contracts/NFTContract3/ERC721.sol\":3399:3408  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":3323:3415  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract3/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_154:\n        /* \"contracts/NFTContract3/Strings.sol\":384:397  string memory */\n      0x60\n        /* \"contracts/NFTContract3/Strings.sol\":610:611  0 */\n      0x00\n        /* \"contracts/NFTContract3/Strings.sol\":601:606  value */\n      dup3\n        /* \"contracts/NFTContract3/Strings.sol\":601:611  value == 0 */\n      sub\n        /* \"contracts/NFTContract3/Strings.sol\":597:648  if (value == 0) {... */\n      tag_204\n      jumpi\n        /* \"contracts/NFTContract3/Strings.sol\":627:637  return \"0\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3000000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n      jump(tag_203)\n        /* \"contracts/NFTContract3/Strings.sol\":597:648  if (value == 0) {... */\n    tag_204:\n        /* \"contracts/NFTContract3/Strings.sol\":657:669  uint256 temp */\n      0x00\n        /* \"contracts/NFTContract3/Strings.sol\":672:677  value */\n      dup3\n        /* \"contracts/NFTContract3/Strings.sol\":657:677  uint256 temp = value */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":687:701  uint256 digits */\n      0x00\n        /* \"contracts/NFTContract3/Strings.sol\":711:786  while (temp != 0) {... */\n    tag_205:\n        /* \"contracts/NFTContract3/Strings.sol\":726:727  0 */\n      0x00\n        /* \"contracts/NFTContract3/Strings.sol\":718:722  temp */\n      dup3\n        /* \"contracts/NFTContract3/Strings.sol\":718:727  temp != 0 */\n      eq\n        /* \"contracts/NFTContract3/Strings.sol\":711:786  while (temp != 0) {... */\n      tag_206\n      jumpi\n        /* \"contracts/NFTContract3/Strings.sol\":743:751  digits++ */\n      dup1\n      dup1\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":773:775  10 */\n      0x0a\n        /* \"contracts/NFTContract3/Strings.sol\":765:775  temp /= 10 */\n      dup3\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      swap2\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":711:786  while (temp != 0) {... */\n      jump(tag_205)\n    tag_206:\n        /* \"contracts/NFTContract3/Strings.sol\":795:814  bytes memory buffer */\n      0x00\n        /* \"contracts/NFTContract3/Strings.sol\":827:833  digits */\n      dup2\n        /* \"contracts/NFTContract3/Strings.sol\":817:834  new bytes(digits) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_211\n      jumpi\n      tag_212\n      tag_213\n      jump\t// in\n    tag_212:\n    tag_211:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_214\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_214:\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":795:834  bytes memory buffer = new bytes(digits) */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":844:994  while (value != 0) {... */\n    tag_215:\n        /* \"contracts/NFTContract3/Strings.sol\":860:861  0 */\n      0x00\n        /* \"contracts/NFTContract3/Strings.sol\":851:856  value */\n      dup6\n        /* \"contracts/NFTContract3/Strings.sol\":851:861  value != 0 */\n      eq\n        /* \"contracts/NFTContract3/Strings.sol\":844:994  while (value != 0) {... */\n      tag_216\n      jumpi\n        /* \"contracts/NFTContract3/Strings.sol\":887:888  1 */\n      0x01\n        /* \"contracts/NFTContract3/Strings.sol\":877:888  digits -= 1 */\n      dup3\n      tag_217\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_217:\n      swap2\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":953:955  10 */\n      0x0a\n        /* \"contracts/NFTContract3/Strings.sol\":945:950  value */\n      dup6\n        /* \"contracts/NFTContract3/Strings.sol\":945:955  value % 10 */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"contracts/NFTContract3/Strings.sol\":932:934  48 */\n      0x30\n        /* \"contracts/NFTContract3/Strings.sol\":932:956  48 + uint256(value % 10) */\n      tag_220\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_220:\n        /* \"contracts/NFTContract3/Strings.sol\":919:958  bytes1(uint8(48 + uint256(value % 10))) */\n      0xf8\n      shl\n        /* \"contracts/NFTContract3/Strings.sol\":902:908  buffer */\n      dup2\n        /* \"contracts/NFTContract3/Strings.sol\":909:915  digits */\n      dup4\n        /* \"contracts/NFTContract3/Strings.sol\":902:916  buffer[digits] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_221\n      jumpi\n      tag_222\n      tag_223\n      jump\t// in\n    tag_222:\n    tag_221:\n      0x20\n      add\n      add\n        /* \"contracts/NFTContract3/Strings.sol\":902:958  buffer[digits] = bytes1(uint8(48 + uint256(value % 10))) */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":981:983  10 */\n      0x0a\n        /* \"contracts/NFTContract3/Strings.sol\":972:983  value /= 10 */\n      dup6\n      tag_224\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_224:\n      swap5\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":844:994  while (value != 0) {... */\n      jump(tag_215)\n    tag_216:\n        /* \"contracts/NFTContract3/Strings.sol\":1017:1023  buffer */\n      dup1\n        /* \"contracts/NFTContract3/Strings.sol\":1003:1024  return string(buffer) */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTContract3/Strings.sol\":328:1031  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_203:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":13603:13725  function _beforeTokenTransfer(... */\n    tag_182:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":14097:14218  function _afterTokenTransfer(... */\n    tag_189:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/ERC721.sol\":12269:13047  function _checkOnERC721Received(... */\n    tag_198:\n        /* \"contracts/NFTContract3/ERC721.sol\":12419:12423  bool */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":12439:12454  to.isContract() */\n      tag_228\n        /* \"contracts/NFTContract3/ERC721.sol\":12439:12441  to */\n      dup5\n        /* \"contracts/NFTContract3/ERC721.sol\":12439:12452  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_229\n        /* \"contracts/NFTContract3/ERC721.sol\":12439:12454  to.isContract() */\n      jump\t// in\n    tag_228:\n        /* \"contracts/NFTContract3/ERC721.sol\":12435:13041  if (to.isContract()) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/NFTContract3/ERC721.sol\":12490:12492  to */\n      dup4\n        /* \"contracts/NFTContract3/ERC721.sol\":12474:12510  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/NFTContract3/ERC721.sol\":12511:12523  _msgSender() */\n      tag_231\n        /* \"contracts/NFTContract3/ERC721.sol\":12511:12521  _msgSender */\n      tag_99\n        /* \"contracts/NFTContract3/ERC721.sol\":12511:12523  _msgSender() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/NFTContract3/ERC721.sol\":12525:12529  from */\n      dup8\n        /* \"contracts/NFTContract3/ERC721.sol\":12531:12538  tokenId */\n      dup7\n        /* \"contracts/NFTContract3/ERC721.sol\":12540:12545  _data */\n      dup7\n        /* \"contracts/NFTContract3/ERC721.sol\":12474:12546  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_234\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      0x01\n    tag_234:\n        /* \"contracts/NFTContract3/ERC721.sol\":12470:12989  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n      tag_237\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_242\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_241)\n    tag_242:\n      0x60\n      swap2\n      pop\n    tag_241:\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":12730:12731  0 */\n      0x00\n        /* \"contracts/NFTContract3/ERC721.sol\":12713:12719  reason */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":12713:12726  reason.length */\n      mload\n        /* \"contracts/NFTContract3/ERC721.sol\":12713:12731  reason.length == 0 */\n      sub\n        /* \"contracts/NFTContract3/ERC721.sol\":12709:12975  if (reason.length == 0) {... */\n      tag_243\n      jumpi\n        /* \"contracts/NFTContract3/ERC721.sol\":12755:12815  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_244\n      swap1\n      tag_201\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTContract3/ERC721.sol\":12709:12975  if (reason.length == 0) {... */\n    tag_243:\n        /* \"contracts/NFTContract3/ERC721.sol\":12927:12933  reason */\n      dup1\n        /* \"contracts/NFTContract3/ERC721.sol\":12921:12934  mload(reason) */\n      mload\n        /* \"contracts/NFTContract3/ERC721.sol\":12912:12918  reason */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":12908:12910  32 */\n      0x20\n        /* \"contracts/NFTContract3/ERC721.sol\":12904:12919  add(32, reason) */\n      add\n        /* \"contracts/NFTContract3/ERC721.sol\":12897:12935  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/NFTContract3/ERC721.sol\":12470:12989  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {... */\n    tag_237:\n        /* \"contracts/NFTContract3/ERC721.sol\":12606:12647  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/NFTContract3/ERC721.sol\":12596:12647  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/NFTContract3/ERC721.sol\":12596:12602  retval */\n      dup2\n        /* \"contracts/NFTContract3/ERC721.sol\":12596:12647  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/NFTContract3/ERC721.sol\":12589:12647  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_227)\n        /* \"contracts/NFTContract3/ERC721.sol\":12435:13041  if (to.isContract()) {... */\n    tag_230:\n        /* \"contracts/NFTContract3/ERC721.sol\":13026:13030  true */\n      0x01\n        /* \"contracts/NFTContract3/ERC721.sol\":13019:13030  return true */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/ERC721.sol\":12269:13047  function _checkOnERC721Received(... */\n    tag_227:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract3/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_229:\n        /* \"contracts/NFTContract3/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"contracts/NFTContract3/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"contracts/NFTContract3/Address.sol\":1465:1472  account */\n      dup3\n        /* \"contracts/NFTContract3/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/NFTContract3/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"contracts/NFTContract3/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"contracts/NFTContract3/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_249:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_250:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_251:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_252:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_253:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_252\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_254:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_253\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_250\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_254\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_255:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_256:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_255\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_256\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_257:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_258:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2105   */\n    tag_259:\n        /* \"#utility.yul\":1866:1867   */\n      0x00\n        /* \"#utility.yul\":1876:1989   */\n    tag_336:\n        /* \"#utility.yul\":1890:1896   */\n      dup4\n        /* \"#utility.yul\":1887:1888   */\n      dup2\n        /* \"#utility.yul\":1884:1897   */\n      lt\n        /* \"#utility.yul\":1876:1989   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1975:1976   */\n      dup1\n        /* \"#utility.yul\":1970:1973   */\n      dup3\n        /* \"#utility.yul\":1966:1977   */\n      add\n        /* \"#utility.yul\":1960:1978   */\n      mload\n        /* \"#utility.yul\":1956:1957   */\n      dup2\n        /* \"#utility.yul\":1951:1954   */\n      dup5\n        /* \"#utility.yul\":1947:1958   */\n      add\n        /* \"#utility.yul\":1940:1979   */\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1909:1910   */\n      dup2\n        /* \"#utility.yul\":1905:1915   */\n      add\n        /* \"#utility.yul\":1900:1915   */\n      swap1\n      pop\n        /* \"#utility.yul\":1876:1989   */\n      jump(tag_336)\n    tag_338:\n        /* \"#utility.yul\":2007:2013   */\n      dup4\n        /* \"#utility.yul\":2004:2005   */\n      dup2\n        /* \"#utility.yul\":2001:2014   */\n      gt\n        /* \"#utility.yul\":1998:2099   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":2087:2088   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      dup5\n        /* \"#utility.yul\":2073:2076   */\n      dup5\n        /* \"#utility.yul\":2069:2085   */\n      add\n        /* \"#utility.yul\":2062:2089   */\n      mstore\n        /* \"#utility.yul\":1998:2099   */\n    tag_339:\n        /* \"#utility.yul\":1847:2105   */\n      pop\n        /* \"#utility.yul\":1798:2105   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2111:2213   */\n    tag_260:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2203:2205   */\n      0x1f\n        /* \"#utility.yul\":2199:2206   */\n      not\n        /* \"#utility.yul\":2194:2196   */\n      0x1f\n        /* \"#utility.yul\":2187:2192   */\n      dup4\n        /* \"#utility.yul\":2183:2197   */\n      add\n        /* \"#utility.yul\":2179:2207   */\n      and\n        /* \"#utility.yul\":2169:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2111:2213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2219:2583   */\n    tag_261:\n        /* \"#utility.yul\":2307:2310   */\n      0x00\n        /* \"#utility.yul\":2335:2374   */\n      tag_342\n        /* \"#utility.yul\":2368:2373   */\n      dup3\n        /* \"#utility.yul\":2335:2374   */\n      tag_257\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":2390:2461   */\n      tag_343\n        /* \"#utility.yul\":2454:2460   */\n      dup2\n        /* \"#utility.yul\":2449:2452   */\n      dup6\n        /* \"#utility.yul\":2390:2461   */\n      tag_258\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2383:2461   */\n      swap4\n      pop\n        /* \"#utility.yul\":2470:2522   */\n      tag_344\n        /* \"#utility.yul\":2515:2521   */\n      dup2\n        /* \"#utility.yul\":2510:2513   */\n      dup6\n        /* \"#utility.yul\":2503:2507   */\n      0x20\n        /* \"#utility.yul\":2496:2501   */\n      dup7\n        /* \"#utility.yul\":2492:2508   */\n      add\n        /* \"#utility.yul\":2470:2522   */\n      tag_259\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":2547:2576   */\n      tag_345\n        /* \"#utility.yul\":2569:2575   */\n      dup2\n        /* \"#utility.yul\":2547:2576   */\n      tag_260\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2542:2545   */\n      dup5\n        /* \"#utility.yul\":2538:2577   */\n      add\n        /* \"#utility.yul\":2531:2577   */\n      swap2\n      pop\n        /* \"#utility.yul\":2311:2583   */\n      pop\n        /* \"#utility.yul\":2219:2583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2589:2902   */\n    tag_27:\n        /* \"#utility.yul\":2702:2706   */\n      0x00\n        /* \"#utility.yul\":2740:2742   */\n      0x20\n        /* \"#utility.yul\":2729:2738   */\n      dup3\n        /* \"#utility.yul\":2725:2743   */\n      add\n        /* \"#utility.yul\":2717:2743   */\n      swap1\n      pop\n        /* \"#utility.yul\":2789:2798   */\n      dup2\n        /* \"#utility.yul\":2783:2787   */\n      dup2\n        /* \"#utility.yul\":2779:2799   */\n      sub\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2753:2800   */\n      mstore\n        /* \"#utility.yul\":2817:2895   */\n      tag_347\n        /* \"#utility.yul\":2890:2894   */\n      dup2\n        /* \"#utility.yul\":2881:2887   */\n      dup5\n        /* \"#utility.yul\":2817:2895   */\n      tag_261\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2809:2895   */\n      swap1\n      pop\n        /* \"#utility.yul\":2589:2902   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2908:2985   */\n    tag_262:\n        /* \"#utility.yul\":2945:2952   */\n      0x00\n        /* \"#utility.yul\":2974:2979   */\n      dup2\n        /* \"#utility.yul\":2963:2979   */\n      swap1\n      pop\n        /* \"#utility.yul\":2908:2985   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2991:3113   */\n    tag_263:\n        /* \"#utility.yul\":3064:3088   */\n      tag_350\n        /* \"#utility.yul\":3082:3087   */\n      dup2\n        /* \"#utility.yul\":3064:3088   */\n      tag_262\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":3057:3062   */\n      dup2\n        /* \"#utility.yul\":3054:3089   */\n      eq\n        /* \"#utility.yul\":3044:3107   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3103:3104   */\n      0x00\n        /* \"#utility.yul\":3100:3101   */\n      dup1\n        /* \"#utility.yul\":3093:3105   */\n      revert\n        /* \"#utility.yul\":3044:3107   */\n    tag_351:\n        /* \"#utility.yul\":2991:3113   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3258   */\n    tag_264:\n        /* \"#utility.yul\":3165:3170   */\n      0x00\n        /* \"#utility.yul\":3203:3209   */\n      dup2\n        /* \"#utility.yul\":3190:3210   */\n      calldataload\n        /* \"#utility.yul\":3181:3210   */\n      swap1\n      pop\n        /* \"#utility.yul\":3219:3252   */\n      tag_353\n        /* \"#utility.yul\":3246:3251   */\n      dup2\n        /* \"#utility.yul\":3219:3252   */\n      tag_263\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3119:3258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3593   */\n    tag_30:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3372:3374   */\n      0x20\n        /* \"#utility.yul\":3360:3369   */\n      dup3\n        /* \"#utility.yul\":3351:3358   */\n      dup5\n        /* \"#utility.yul\":3347:3370   */\n      sub\n        /* \"#utility.yul\":3343:3375   */\n      slt\n        /* \"#utility.yul\":3340:3459   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3378:3457   */\n      tag_356\n      tag_250\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3340:3459   */\n    tag_355:\n        /* \"#utility.yul\":3498:3499   */\n      0x00\n        /* \"#utility.yul\":3523:3576   */\n      tag_357\n        /* \"#utility.yul\":3568:3575   */\n      dup5\n        /* \"#utility.yul\":3559:3565   */\n      dup3\n        /* \"#utility.yul\":3548:3557   */\n      dup6\n        /* \"#utility.yul\":3544:3566   */\n      add\n        /* \"#utility.yul\":3523:3576   */\n      tag_264\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3513:3576   */\n      swap2\n      pop\n        /* \"#utility.yul\":3469:3586   */\n      pop\n        /* \"#utility.yul\":3264:3593   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3599:3725   */\n    tag_265:\n        /* \"#utility.yul\":3636:3643   */\n      0x00\n        /* \"#utility.yul\":3676:3718   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3669:3674   */\n      dup3\n        /* \"#utility.yul\":3665:3719   */\n      and\n        /* \"#utility.yul\":3654:3719   */\n      swap1\n      pop\n        /* \"#utility.yul\":3599:3725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3731:3827   */\n    tag_266:\n        /* \"#utility.yul\":3768:3775   */\n      0x00\n        /* \"#utility.yul\":3797:3821   */\n      tag_360\n        /* \"#utility.yul\":3815:3820   */\n      dup3\n        /* \"#utility.yul\":3797:3821   */\n      tag_265\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3786:3821   */\n      swap1\n      pop\n        /* \"#utility.yul\":3731:3827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3833:3951   */\n    tag_267:\n        /* \"#utility.yul\":3920:3944   */\n      tag_362\n        /* \"#utility.yul\":3938:3943   */\n      dup2\n        /* \"#utility.yul\":3920:3944   */\n      tag_266\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3915:3918   */\n      dup3\n        /* \"#utility.yul\":3908:3945   */\n      mstore\n        /* \"#utility.yul\":3833:3951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3957:4179   */\n    tag_33:\n        /* \"#utility.yul\":4050:4054   */\n      0x00\n        /* \"#utility.yul\":4088:4090   */\n      0x20\n        /* \"#utility.yul\":4077:4086   */\n      dup3\n        /* \"#utility.yul\":4073:4091   */\n      add\n        /* \"#utility.yul\":4065:4091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4101:4172   */\n      tag_364\n        /* \"#utility.yul\":4169:4170   */\n      0x00\n        /* \"#utility.yul\":4158:4167   */\n      dup4\n        /* \"#utility.yul\":4154:4171   */\n      add\n        /* \"#utility.yul\":4145:4151   */\n      dup5\n        /* \"#utility.yul\":4101:4172   */\n      tag_267\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":3957:4179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4185:4307   */\n    tag_268:\n        /* \"#utility.yul\":4258:4282   */\n      tag_366\n        /* \"#utility.yul\":4276:4281   */\n      dup2\n        /* \"#utility.yul\":4258:4282   */\n      tag_266\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4251:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4283   */\n      eq\n        /* \"#utility.yul\":4238:4301   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":4297:4298   */\n      0x00\n        /* \"#utility.yul\":4294:4295   */\n      dup1\n        /* \"#utility.yul\":4287:4299   */\n      revert\n        /* \"#utility.yul\":4238:4301   */\n    tag_367:\n        /* \"#utility.yul\":4185:4307   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4313:4452   */\n    tag_269:\n        /* \"#utility.yul\":4359:4364   */\n      0x00\n        /* \"#utility.yul\":4397:4403   */\n      dup2\n        /* \"#utility.yul\":4384:4404   */\n      calldataload\n        /* \"#utility.yul\":4375:4404   */\n      swap1\n      pop\n        /* \"#utility.yul\":4413:4446   */\n      tag_369\n        /* \"#utility.yul\":4440:4445   */\n      dup2\n        /* \"#utility.yul\":4413:4446   */\n      tag_268\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4313:4452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4458:4932   */\n    tag_36:\n        /* \"#utility.yul\":4526:4532   */\n      0x00\n        /* \"#utility.yul\":4534:4540   */\n      dup1\n        /* \"#utility.yul\":4583:4585   */\n      0x40\n        /* \"#utility.yul\":4571:4580   */\n      dup4\n        /* \"#utility.yul\":4562:4569   */\n      dup6\n        /* \"#utility.yul\":4558:4581   */\n      sub\n        /* \"#utility.yul\":4554:4586   */\n      slt\n        /* \"#utility.yul\":4551:4670   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":4589:4668   */\n      tag_372\n      tag_250\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4551:4670   */\n    tag_371:\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4734:4787   */\n      tag_373\n        /* \"#utility.yul\":4779:4786   */\n      dup6\n        /* \"#utility.yul\":4770:4776   */\n      dup3\n        /* \"#utility.yul\":4759:4768   */\n      dup7\n        /* \"#utility.yul\":4755:4777   */\n      add\n        /* \"#utility.yul\":4734:4787   */\n      tag_269\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4724:4787   */\n      swap3\n      pop\n        /* \"#utility.yul\":4680:4797   */\n      pop\n        /* \"#utility.yul\":4836:4838   */\n      0x20\n        /* \"#utility.yul\":4862:4915   */\n      tag_374\n        /* \"#utility.yul\":4907:4914   */\n      dup6\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4887:4896   */\n      dup7\n        /* \"#utility.yul\":4883:4905   */\n      add\n        /* \"#utility.yul\":4862:4915   */\n      tag_264\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4852:4915   */\n      swap2\n      pop\n        /* \"#utility.yul\":4807:4925   */\n      pop\n        /* \"#utility.yul\":4458:4932   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4938:5557   */\n    tag_40:\n        /* \"#utility.yul\":5015:5021   */\n      0x00\n        /* \"#utility.yul\":5023:5029   */\n      dup1\n        /* \"#utility.yul\":5031:5037   */\n      0x00\n        /* \"#utility.yul\":5080:5082   */\n      0x60\n        /* \"#utility.yul\":5068:5077   */\n      dup5\n        /* \"#utility.yul\":5059:5066   */\n      dup7\n        /* \"#utility.yul\":5055:5078   */\n      sub\n        /* \"#utility.yul\":5051:5083   */\n      slt\n        /* \"#utility.yul\":5048:5167   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":5086:5165   */\n      tag_377\n      tag_250\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5048:5167   */\n    tag_376:\n        /* \"#utility.yul\":5206:5207   */\n      0x00\n        /* \"#utility.yul\":5231:5284   */\n      tag_378\n        /* \"#utility.yul\":5276:5283   */\n      dup7\n        /* \"#utility.yul\":5267:5273   */\n      dup3\n        /* \"#utility.yul\":5256:5265   */\n      dup8\n        /* \"#utility.yul\":5252:5274   */\n      add\n        /* \"#utility.yul\":5231:5284   */\n      tag_269\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5221:5284   */\n      swap4\n      pop\n        /* \"#utility.yul\":5177:5294   */\n      pop\n        /* \"#utility.yul\":5333:5335   */\n      0x20\n        /* \"#utility.yul\":5359:5412   */\n      tag_379\n        /* \"#utility.yul\":5404:5411   */\n      dup7\n        /* \"#utility.yul\":5395:5401   */\n      dup3\n        /* \"#utility.yul\":5384:5393   */\n      dup8\n        /* \"#utility.yul\":5380:5402   */\n      add\n        /* \"#utility.yul\":5359:5412   */\n      tag_269\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5349:5412   */\n      swap3\n      pop\n        /* \"#utility.yul\":5304:5422   */\n      pop\n        /* \"#utility.yul\":5461:5463   */\n      0x40\n        /* \"#utility.yul\":5487:5540   */\n      tag_380\n        /* \"#utility.yul\":5532:5539   */\n      dup7\n        /* \"#utility.yul\":5523:5529   */\n      dup3\n        /* \"#utility.yul\":5512:5521   */\n      dup8\n        /* \"#utility.yul\":5508:5530   */\n      add\n        /* \"#utility.yul\":5487:5540   */\n      tag_264\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":5477:5540   */\n      swap2\n      pop\n        /* \"#utility.yul\":5432:5550   */\n      pop\n        /* \"#utility.yul\":4938:5557   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5563:5892   */\n    tag_51:\n        /* \"#utility.yul\":5622:5628   */\n      0x00\n        /* \"#utility.yul\":5671:5673   */\n      0x20\n        /* \"#utility.yul\":5659:5668   */\n      dup3\n        /* \"#utility.yul\":5650:5657   */\n      dup5\n        /* \"#utility.yul\":5646:5669   */\n      sub\n        /* \"#utility.yul\":5642:5674   */\n      slt\n        /* \"#utility.yul\":5639:5758   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":5677:5756   */\n      tag_383\n      tag_250\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5639:5758   */\n    tag_382:\n        /* \"#utility.yul\":5797:5798   */\n      0x00\n        /* \"#utility.yul\":5822:5875   */\n      tag_384\n        /* \"#utility.yul\":5867:5874   */\n      dup5\n        /* \"#utility.yul\":5858:5864   */\n      dup3\n        /* \"#utility.yul\":5847:5856   */\n      dup6\n        /* \"#utility.yul\":5843:5865   */\n      add\n        /* \"#utility.yul\":5822:5875   */\n      tag_269\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5812:5875   */\n      swap2\n      pop\n        /* \"#utility.yul\":5768:5885   */\n      pop\n        /* \"#utility.yul\":5563:5892   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5898:6016   */\n    tag_270:\n        /* \"#utility.yul\":5985:6009   */\n      tag_386\n        /* \"#utility.yul\":6003:6008   */\n      dup2\n        /* \"#utility.yul\":5985:6009   */\n      tag_262\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5980:5983   */\n      dup3\n        /* \"#utility.yul\":5973:6010   */\n      mstore\n        /* \"#utility.yul\":5898:6016   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:6244   */\n    tag_54:\n        /* \"#utility.yul\":6115:6119   */\n      0x00\n        /* \"#utility.yul\":6153:6155   */\n      0x20\n        /* \"#utility.yul\":6142:6151   */\n      dup3\n        /* \"#utility.yul\":6138:6156   */\n      add\n        /* \"#utility.yul\":6130:6156   */\n      swap1\n      pop\n        /* \"#utility.yul\":6166:6237   */\n      tag_388\n        /* \"#utility.yul\":6234:6235   */\n      0x00\n        /* \"#utility.yul\":6223:6232   */\n      dup4\n        /* \"#utility.yul\":6219:6236   */\n      add\n        /* \"#utility.yul\":6210:6216   */\n      dup5\n        /* \"#utility.yul\":6166:6237   */\n      tag_270\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6022:6244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6250:6366   */\n    tag_271:\n        /* \"#utility.yul\":6320:6341   */\n      tag_390\n        /* \"#utility.yul\":6335:6340   */\n      dup2\n        /* \"#utility.yul\":6320:6341   */\n      tag_255\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6313:6318   */\n      dup2\n        /* \"#utility.yul\":6310:6342   */\n      eq\n        /* \"#utility.yul\":6300:6360   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":6356:6357   */\n      0x00\n        /* \"#utility.yul\":6353:6354   */\n      dup1\n        /* \"#utility.yul\":6346:6358   */\n      revert\n        /* \"#utility.yul\":6300:6360   */\n    tag_391:\n        /* \"#utility.yul\":6250:6366   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6372:6505   */\n    tag_272:\n        /* \"#utility.yul\":6415:6420   */\n      0x00\n        /* \"#utility.yul\":6453:6459   */\n      dup2\n        /* \"#utility.yul\":6440:6460   */\n      calldataload\n        /* \"#utility.yul\":6431:6460   */\n      swap1\n      pop\n        /* \"#utility.yul\":6469:6499   */\n      tag_393\n        /* \"#utility.yul\":6493:6498   */\n      dup2\n        /* \"#utility.yul\":6469:6499   */\n      tag_271\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6372:6505   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6511:6979   */\n    tag_60:\n        /* \"#utility.yul\":6576:6582   */\n      0x00\n        /* \"#utility.yul\":6584:6590   */\n      dup1\n        /* \"#utility.yul\":6633:6635   */\n      0x40\n        /* \"#utility.yul\":6621:6630   */\n      dup4\n        /* \"#utility.yul\":6612:6619   */\n      dup6\n        /* \"#utility.yul\":6608:6631   */\n      sub\n        /* \"#utility.yul\":6604:6636   */\n      slt\n        /* \"#utility.yul\":6601:6720   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":6639:6718   */\n      tag_396\n      tag_250\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":6601:6720   */\n    tag_395:\n        /* \"#utility.yul\":6759:6760   */\n      0x00\n        /* \"#utility.yul\":6784:6837   */\n      tag_397\n        /* \"#utility.yul\":6829:6836   */\n      dup6\n        /* \"#utility.yul\":6820:6826   */\n      dup3\n        /* \"#utility.yul\":6809:6818   */\n      dup7\n        /* \"#utility.yul\":6805:6827   */\n      add\n        /* \"#utility.yul\":6784:6837   */\n      tag_269\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":6774:6837   */\n      swap3\n      pop\n        /* \"#utility.yul\":6730:6847   */\n      pop\n        /* \"#utility.yul\":6886:6888   */\n      0x20\n        /* \"#utility.yul\":6912:6962   */\n      tag_398\n        /* \"#utility.yul\":6954:6961   */\n      dup6\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6934:6943   */\n      dup7\n        /* \"#utility.yul\":6930:6952   */\n      add\n        /* \"#utility.yul\":6912:6962   */\n      tag_272\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6902:6962   */\n      swap2\n      pop\n        /* \"#utility.yul\":6857:6972   */\n      pop\n        /* \"#utility.yul\":6511:6979   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6985:7102   */\n    tag_273:\n        /* \"#utility.yul\":7094:7095   */\n      0x00\n        /* \"#utility.yul\":7091:7092   */\n      dup1\n        /* \"#utility.yul\":7084:7096   */\n      revert\n        /* \"#utility.yul\":7108:7225   */\n    tag_274:\n        /* \"#utility.yul\":7217:7218   */\n      0x00\n        /* \"#utility.yul\":7214:7215   */\n      dup1\n        /* \"#utility.yul\":7207:7219   */\n      revert\n        /* \"#utility.yul\":7231:7411   */\n    tag_213:\n        /* \"#utility.yul\":7279:7356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7269:7357   */\n      mstore\n        /* \"#utility.yul\":7376:7380   */\n      0x41\n        /* \"#utility.yul\":7373:7374   */\n      0x04\n        /* \"#utility.yul\":7366:7381   */\n      mstore\n        /* \"#utility.yul\":7400:7404   */\n      0x24\n        /* \"#utility.yul\":7397:7398   */\n      0x00\n        /* \"#utility.yul\":7390:7405   */\n      revert\n        /* \"#utility.yul\":7417:7698   */\n    tag_275:\n        /* \"#utility.yul\":7500:7527   */\n      tag_403\n        /* \"#utility.yul\":7522:7526   */\n      dup3\n        /* \"#utility.yul\":7500:7527   */\n      tag_260\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7492:7498   */\n      dup2\n        /* \"#utility.yul\":7488:7528   */\n      add\n        /* \"#utility.yul\":7630:7636   */\n      dup2\n        /* \"#utility.yul\":7618:7628   */\n      dup2\n        /* \"#utility.yul\":7615:7637   */\n      lt\n        /* \"#utility.yul\":7594:7612   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7582:7592   */\n      dup3\n        /* \"#utility.yul\":7579:7613   */\n      gt\n        /* \"#utility.yul\":7576:7638   */\n      or\n        /* \"#utility.yul\":7573:7661   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":7641:7659   */\n      tag_405\n      tag_213\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7573:7661   */\n    tag_404:\n        /* \"#utility.yul\":7681:7691   */\n      dup1\n        /* \"#utility.yul\":7677:7679   */\n      0x40\n        /* \"#utility.yul\":7670:7692   */\n      mstore\n        /* \"#utility.yul\":7460:7698   */\n      pop\n        /* \"#utility.yul\":7417:7698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7704:7833   */\n    tag_276:\n        /* \"#utility.yul\":7738:7744   */\n      0x00\n        /* \"#utility.yul\":7765:7785   */\n      tag_407\n      tag_249\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":7755:7785   */\n      swap1\n      pop\n        /* \"#utility.yul\":7794:7827   */\n      tag_408\n        /* \"#utility.yul\":7822:7826   */\n      dup3\n        /* \"#utility.yul\":7814:7820   */\n      dup3\n        /* \"#utility.yul\":7794:7827   */\n      tag_275\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7704:7833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7839:8146   */\n    tag_277:\n        /* \"#utility.yul\":7900:7904   */\n      0x00\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7982:7988   */\n      dup3\n        /* \"#utility.yul\":7979:8009   */\n      gt\n        /* \"#utility.yul\":7976:8032   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8012:8030   */\n      tag_411\n      tag_213\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":7976:8032   */\n    tag_410:\n        /* \"#utility.yul\":8050:8079   */\n      tag_412\n        /* \"#utility.yul\":8072:8078   */\n      dup3\n        /* \"#utility.yul\":8050:8079   */\n      tag_260\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8042:8079   */\n      swap1\n      pop\n        /* \"#utility.yul\":8134:8138   */\n      0x20\n        /* \"#utility.yul\":8128:8132   */\n      dup2\n        /* \"#utility.yul\":8124:8139   */\n      add\n        /* \"#utility.yul\":8116:8139   */\n      swap1\n      pop\n        /* \"#utility.yul\":7839:8146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8152:8306   */\n    tag_278:\n        /* \"#utility.yul\":8236:8242   */\n      dup3\n        /* \"#utility.yul\":8231:8234   */\n      dup2\n        /* \"#utility.yul\":8226:8229   */\n      dup4\n        /* \"#utility.yul\":8213:8243   */\n      calldatacopy\n        /* \"#utility.yul\":8298:8299   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup4\n        /* \"#utility.yul\":8284:8287   */\n      dup4\n        /* \"#utility.yul\":8280:8296   */\n      add\n        /* \"#utility.yul\":8273:8300   */\n      mstore\n        /* \"#utility.yul\":8152:8306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8312:8722   */\n    tag_279:\n        /* \"#utility.yul\":8389:8394   */\n      0x00\n        /* \"#utility.yul\":8414:8479   */\n      tag_415\n        /* \"#utility.yul\":8430:8478   */\n      tag_416\n        /* \"#utility.yul\":8471:8477   */\n      dup5\n        /* \"#utility.yul\":8430:8478   */\n      tag_277\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8414:8479   */\n      tag_276\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":8405:8479   */\n      swap1\n      pop\n        /* \"#utility.yul\":8502:8508   */\n      dup3\n        /* \"#utility.yul\":8495:8500   */\n      dup2\n        /* \"#utility.yul\":8488:8509   */\n      mstore\n        /* \"#utility.yul\":8540:8544   */\n      0x20\n        /* \"#utility.yul\":8533:8538   */\n      dup2\n        /* \"#utility.yul\":8529:8545   */\n      add\n        /* \"#utility.yul\":8578:8581   */\n      dup5\n        /* \"#utility.yul\":8569:8575   */\n      dup5\n        /* \"#utility.yul\":8564:8567   */\n      dup5\n        /* \"#utility.yul\":8560:8576   */\n      add\n        /* \"#utility.yul\":8557:8582   */\n      gt\n        /* \"#utility.yul\":8554:8666   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":8585:8664   */\n      tag_418\n      tag_274\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":8554:8666   */\n    tag_417:\n        /* \"#utility.yul\":8675:8716   */\n      tag_419\n        /* \"#utility.yul\":8709:8715   */\n      dup5\n        /* \"#utility.yul\":8704:8707   */\n      dup3\n        /* \"#utility.yul\":8699:8702   */\n      dup6\n        /* \"#utility.yul\":8675:8716   */\n      tag_278\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":8395:8722   */\n      pop\n        /* \"#utility.yul\":8312:8722   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8741:9079   */\n    tag_280:\n        /* \"#utility.yul\":8796:8801   */\n      0x00\n        /* \"#utility.yul\":8845:8848   */\n      dup3\n        /* \"#utility.yul\":8838:8842   */\n      0x1f\n        /* \"#utility.yul\":8830:8836   */\n      dup4\n        /* \"#utility.yul\":8826:8843   */\n      add\n        /* \"#utility.yul\":8822:8849   */\n      slt\n        /* \"#utility.yul\":8812:8934   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":8853:8932   */\n      tag_422\n      tag_273\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":8812:8934   */\n    tag_421:\n        /* \"#utility.yul\":8970:8976   */\n      dup2\n        /* \"#utility.yul\":8957:8977   */\n      calldataload\n        /* \"#utility.yul\":8995:9073   */\n      tag_423\n        /* \"#utility.yul\":9069:9072   */\n      dup5\n        /* \"#utility.yul\":9061:9067   */\n      dup3\n        /* \"#utility.yul\":9054:9058   */\n      0x20\n        /* \"#utility.yul\":9046:9052   */\n      dup7\n        /* \"#utility.yul\":9042:9059   */\n      add\n        /* \"#utility.yul\":8995:9073   */\n      tag_279\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":8986:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:9079   */\n      pop\n        /* \"#utility.yul\":8741:9079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9085:10028   */\n    tag_64:\n        /* \"#utility.yul\":9180:9186   */\n      0x00\n        /* \"#utility.yul\":9188:9194   */\n      dup1\n        /* \"#utility.yul\":9196:9202   */\n      0x00\n        /* \"#utility.yul\":9204:9210   */\n      dup1\n        /* \"#utility.yul\":9253:9256   */\n      0x80\n        /* \"#utility.yul\":9241:9250   */\n      dup6\n        /* \"#utility.yul\":9232:9239   */\n      dup8\n        /* \"#utility.yul\":9228:9251   */\n      sub\n        /* \"#utility.yul\":9224:9257   */\n      slt\n        /* \"#utility.yul\":9221:9341   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":9260:9339   */\n      tag_426\n      tag_250\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9221:9341   */\n    tag_425:\n        /* \"#utility.yul\":9380:9381   */\n      0x00\n        /* \"#utility.yul\":9405:9458   */\n      tag_427\n        /* \"#utility.yul\":9450:9457   */\n      dup8\n        /* \"#utility.yul\":9441:9447   */\n      dup3\n        /* \"#utility.yul\":9430:9439   */\n      dup9\n        /* \"#utility.yul\":9426:9448   */\n      add\n        /* \"#utility.yul\":9405:9458   */\n      tag_269\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9395:9458   */\n      swap5\n      pop\n        /* \"#utility.yul\":9351:9468   */\n      pop\n        /* \"#utility.yul\":9507:9509   */\n      0x20\n        /* \"#utility.yul\":9533:9586   */\n      tag_428\n        /* \"#utility.yul\":9578:9585   */\n      dup8\n        /* \"#utility.yul\":9569:9575   */\n      dup3\n        /* \"#utility.yul\":9558:9567   */\n      dup9\n        /* \"#utility.yul\":9554:9576   */\n      add\n        /* \"#utility.yul\":9533:9586   */\n      tag_269\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9523:9586   */\n      swap4\n      pop\n        /* \"#utility.yul\":9478:9596   */\n      pop\n        /* \"#utility.yul\":9635:9637   */\n      0x40\n        /* \"#utility.yul\":9661:9714   */\n      tag_429\n        /* \"#utility.yul\":9706:9713   */\n      dup8\n        /* \"#utility.yul\":9697:9703   */\n      dup3\n        /* \"#utility.yul\":9686:9695   */\n      dup9\n        /* \"#utility.yul\":9682:9704   */\n      add\n        /* \"#utility.yul\":9661:9714   */\n      tag_264\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9651:9714   */\n      swap3\n      pop\n        /* \"#utility.yul\":9606:9724   */\n      pop\n        /* \"#utility.yul\":9791:9793   */\n      0x60\n        /* \"#utility.yul\":9780:9789   */\n      dup6\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9763:9795   */\n      calldataload\n        /* \"#utility.yul\":9822:9840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9814:9820   */\n      dup2\n        /* \"#utility.yul\":9811:9841   */\n      gt\n        /* \"#utility.yul\":9808:9925   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_431\n      tag_251\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9808:9925   */\n    tag_430:\n        /* \"#utility.yul\":9949:10011   */\n      tag_432\n        /* \"#utility.yul\":10003:10010   */\n      dup8\n        /* \"#utility.yul\":9994:10000   */\n      dup3\n        /* \"#utility.yul\":9983:9992   */\n      dup9\n        /* \"#utility.yul\":9979:10001   */\n      add\n        /* \"#utility.yul\":9949:10011   */\n      tag_280\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":9939:10011   */\n      swap2\n      pop\n        /* \"#utility.yul\":9734:10021   */\n      pop\n        /* \"#utility.yul\":9085:10028   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10034:10508   */\n    tag_72:\n        /* \"#utility.yul\":10102:10108   */\n      0x00\n        /* \"#utility.yul\":10110:10116   */\n      dup1\n        /* \"#utility.yul\":10159:10161   */\n      0x40\n        /* \"#utility.yul\":10147:10156   */\n      dup4\n        /* \"#utility.yul\":10138:10145   */\n      dup6\n        /* \"#utility.yul\":10134:10157   */\n      sub\n        /* \"#utility.yul\":10130:10162   */\n      slt\n        /* \"#utility.yul\":10127:10246   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":10165:10244   */\n      tag_435\n      tag_250\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10127:10246   */\n    tag_434:\n        /* \"#utility.yul\":10285:10286   */\n      0x00\n        /* \"#utility.yul\":10310:10363   */\n      tag_436\n        /* \"#utility.yul\":10355:10362   */\n      dup6\n        /* \"#utility.yul\":10346:10352   */\n      dup3\n        /* \"#utility.yul\":10335:10344   */\n      dup7\n        /* \"#utility.yul\":10331:10353   */\n      add\n        /* \"#utility.yul\":10310:10363   */\n      tag_269\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10300:10363   */\n      swap3\n      pop\n        /* \"#utility.yul\":10256:10373   */\n      pop\n        /* \"#utility.yul\":10412:10414   */\n      0x20\n        /* \"#utility.yul\":10438:10491   */\n      tag_437\n        /* \"#utility.yul\":10483:10490   */\n      dup6\n        /* \"#utility.yul\":10474:10480   */\n      dup3\n        /* \"#utility.yul\":10463:10472   */\n      dup7\n        /* \"#utility.yul\":10459:10481   */\n      add\n        /* \"#utility.yul\":10438:10491   */\n      tag_269\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10428:10491   */\n      swap2\n      pop\n        /* \"#utility.yul\":10383:10501   */\n      pop\n        /* \"#utility.yul\":10034:10508   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10514:10694   */\n    tag_281:\n        /* \"#utility.yul\":10562:10639   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10559:10560   */\n      0x00\n        /* \"#utility.yul\":10552:10640   */\n      mstore\n        /* \"#utility.yul\":10659:10663   */\n      0x22\n        /* \"#utility.yul\":10656:10657   */\n      0x04\n        /* \"#utility.yul\":10649:10664   */\n      mstore\n        /* \"#utility.yul\":10683:10687   */\n      0x24\n        /* \"#utility.yul\":10680:10681   */\n      0x00\n        /* \"#utility.yul\":10673:10688   */\n      revert\n        /* \"#utility.yul\":10700:11020   */\n    tag_82:\n        /* \"#utility.yul\":10744:10750   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x02\n        /* \"#utility.yul\":10775:10779   */\n      dup3\n        /* \"#utility.yul\":10771:10783   */\n      div\n        /* \"#utility.yul\":10761:10783   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:10829   */\n      0x01\n        /* \"#utility.yul\":10822:10826   */\n      dup3\n        /* \"#utility.yul\":10818:10830   */\n      and\n        /* \"#utility.yul\":10849:10867   */\n      dup1\n        /* \"#utility.yul\":10839:10920   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":10905:10909   */\n      0x7f\n        /* \"#utility.yul\":10897:10903   */\n      dup3\n        /* \"#utility.yul\":10893:10910   */\n      and\n        /* \"#utility.yul\":10883:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10839:10920   */\n    tag_440:\n        /* \"#utility.yul\":10967:10969   */\n      0x20\n        /* \"#utility.yul\":10959:10965   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      lt\n        /* \"#utility.yul\":10936:10954   */\n      dup2\n        /* \"#utility.yul\":10933:10971   */\n      sub\n        /* \"#utility.yul\":10930:11014   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":10986:11004   */\n      tag_442\n      tag_281\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":10930:11014   */\n    tag_441:\n        /* \"#utility.yul\":10751:11020   */\n      pop\n        /* \"#utility.yul\":10700:11020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11026:11257   */\n    tag_282:\n        /* \"#utility.yul\":11166:11200   */\n      0x4552433732313a20617070726f76656420717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":11162:11163   */\n      0x00\n        /* \"#utility.yul\":11154:11160   */\n      dup3\n        /* \"#utility.yul\":11150:11164   */\n      add\n        /* \"#utility.yul\":11143:11201   */\n      mstore\n        /* \"#utility.yul\":11235:11249   */\n      0x697374656e7420746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":11230:11232   */\n      0x20\n        /* \"#utility.yul\":11222:11228   */\n      dup3\n        /* \"#utility.yul\":11218:11233   */\n      add\n        /* \"#utility.yul\":11211:11250   */\n      mstore\n        /* \"#utility.yul\":11026:11257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11263:11629   */\n    tag_283:\n        /* \"#utility.yul\":11405:11408   */\n      0x00\n        /* \"#utility.yul\":11426:11493   */\n      tag_445\n        /* \"#utility.yul\":11490:11492   */\n      0x2c\n        /* \"#utility.yul\":11485:11488   */\n      dup4\n        /* \"#utility.yul\":11426:11493   */\n      tag_258\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":11419:11493   */\n      swap2\n      pop\n        /* \"#utility.yul\":11502:11595   */\n      tag_446\n        /* \"#utility.yul\":11591:11594   */\n      dup3\n        /* \"#utility.yul\":11502:11595   */\n      tag_282\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11620:11622   */\n      0x40\n        /* \"#utility.yul\":11615:11618   */\n      dup3\n        /* \"#utility.yul\":11611:11623   */\n      add\n        /* \"#utility.yul\":11604:11623   */\n      swap1\n      pop\n        /* \"#utility.yul\":11263:11629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11635:12054   */\n    tag_92:\n        /* \"#utility.yul\":11801:11805   */\n      0x00\n        /* \"#utility.yul\":11839:11841   */\n      0x20\n        /* \"#utility.yul\":11828:11837   */\n      dup3\n        /* \"#utility.yul\":11824:11842   */\n      add\n        /* \"#utility.yul\":11816:11842   */\n      swap1\n      pop\n        /* \"#utility.yul\":11888:11897   */\n      dup2\n        /* \"#utility.yul\":11882:11886   */\n      dup2\n        /* \"#utility.yul\":11878:11898   */\n      sub\n        /* \"#utility.yul\":11874:11875   */\n      0x00\n        /* \"#utility.yul\":11863:11872   */\n      dup4\n        /* \"#utility.yul\":11859:11876   */\n      add\n        /* \"#utility.yul\":11852:11899   */\n      mstore\n        /* \"#utility.yul\":11916:12047   */\n      tag_448\n        /* \"#utility.yul\":12042:12046   */\n      dup2\n        /* \"#utility.yul\":11916:12047   */\n      tag_283\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":11908:12047   */\n      swap1\n      pop\n        /* \"#utility.yul\":11635:12054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12060:12280   */\n    tag_284:\n        /* \"#utility.yul\":12200:12234   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":12196:12197   */\n      0x00\n        /* \"#utility.yul\":12188:12194   */\n      dup3\n        /* \"#utility.yul\":12184:12198   */\n      add\n        /* \"#utility.yul\":12177:12235   */\n      mstore\n        /* \"#utility.yul\":12269:12272   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12264:12266   */\n      0x20\n        /* \"#utility.yul\":12256:12262   */\n      dup3\n        /* \"#utility.yul\":12252:12267   */\n      add\n        /* \"#utility.yul\":12245:12273   */\n      mstore\n        /* \"#utility.yul\":12060:12280   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12286:12652   */\n    tag_285:\n        /* \"#utility.yul\":12428:12431   */\n      0x00\n        /* \"#utility.yul\":12449:12516   */\n      tag_451\n        /* \"#utility.yul\":12513:12515   */\n      0x21\n        /* \"#utility.yul\":12508:12511   */\n      dup4\n        /* \"#utility.yul\":12449:12516   */\n      tag_258\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12442:12516   */\n      swap2\n      pop\n        /* \"#utility.yul\":12525:12618   */\n      tag_452\n        /* \"#utility.yul\":12614:12617   */\n      dup3\n        /* \"#utility.yul\":12525:12618   */\n      tag_284\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12643:12645   */\n      0x40\n        /* \"#utility.yul\":12638:12641   */\n      dup3\n        /* \"#utility.yul\":12634:12646   */\n      add\n        /* \"#utility.yul\":12627:12646   */\n      swap1\n      pop\n        /* \"#utility.yul\":12286:12652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12658:13077   */\n    tag_97:\n        /* \"#utility.yul\":12824:12828   */\n      0x00\n        /* \"#utility.yul\":12862:12864   */\n      0x20\n        /* \"#utility.yul\":12851:12860   */\n      dup3\n        /* \"#utility.yul\":12847:12865   */\n      add\n        /* \"#utility.yul\":12839:12865   */\n      swap1\n      pop\n        /* \"#utility.yul\":12911:12920   */\n      dup2\n        /* \"#utility.yul\":12905:12909   */\n      dup2\n        /* \"#utility.yul\":12901:12921   */\n      sub\n        /* \"#utility.yul\":12897:12898   */\n      0x00\n        /* \"#utility.yul\":12886:12895   */\n      dup4\n        /* \"#utility.yul\":12882:12899   */\n      add\n        /* \"#utility.yul\":12875:12922   */\n      mstore\n        /* \"#utility.yul\":12939:13070   */\n      tag_454\n        /* \"#utility.yul\":13065:13069   */\n      dup2\n        /* \"#utility.yul\":12939:13070   */\n      tag_285\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12931:13070   */\n      swap1\n      pop\n        /* \"#utility.yul\":12658:13077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13083:13326   */\n    tag_286:\n        /* \"#utility.yul\":13223:13257   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77\n        /* \"#utility.yul\":13219:13220   */\n      0x00\n        /* \"#utility.yul\":13211:13217   */\n      dup3\n        /* \"#utility.yul\":13207:13221   */\n      add\n        /* \"#utility.yul\":13200:13258   */\n      mstore\n        /* \"#utility.yul\":13292:13318   */\n      0x6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000\n        /* \"#utility.yul\":13287:13289   */\n      0x20\n        /* \"#utility.yul\":13279:13285   */\n      dup3\n        /* \"#utility.yul\":13275:13290   */\n      add\n        /* \"#utility.yul\":13268:13319   */\n      mstore\n        /* \"#utility.yul\":13083:13326   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13332:13698   */\n    tag_287:\n        /* \"#utility.yul\":13474:13477   */\n      0x00\n        /* \"#utility.yul\":13495:13562   */\n      tag_457\n        /* \"#utility.yul\":13559:13561   */\n      0x38\n        /* \"#utility.yul\":13554:13557   */\n      dup4\n        /* \"#utility.yul\":13495:13562   */\n      tag_258\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":13488:13562   */\n      swap2\n      pop\n        /* \"#utility.yul\":13571:13664   */\n      tag_458\n        /* \"#utility.yul\":13660:13663   */\n      dup3\n        /* \"#utility.yul\":13571:13664   */\n      tag_286\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13689:13691   */\n      0x40\n        /* \"#utility.yul\":13684:13687   */\n      dup3\n        /* \"#utility.yul\":13680:13692   */\n      add\n        /* \"#utility.yul\":13673:13692   */\n      swap1\n      pop\n        /* \"#utility.yul\":13332:13698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13704:14123   */\n    tag_105:\n        /* \"#utility.yul\":13870:13874   */\n      0x00\n        /* \"#utility.yul\":13908:13910   */\n      0x20\n        /* \"#utility.yul\":13897:13906   */\n      dup3\n        /* \"#utility.yul\":13893:13911   */\n      add\n        /* \"#utility.yul\":13885:13911   */\n      swap1\n      pop\n        /* \"#utility.yul\":13957:13966   */\n      dup2\n        /* \"#utility.yul\":13951:13955   */\n      dup2\n        /* \"#utility.yul\":13947:13967   */\n      sub\n        /* \"#utility.yul\":13943:13944   */\n      0x00\n        /* \"#utility.yul\":13932:13941   */\n      dup4\n        /* \"#utility.yul\":13928:13945   */\n      add\n        /* \"#utility.yul\":13921:13968   */\n      mstore\n        /* \"#utility.yul\":13985:14116   */\n      tag_460\n        /* \"#utility.yul\":14111:14115   */\n      dup2\n        /* \"#utility.yul\":13985:14116   */\n      tag_287\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13977:14116   */\n      swap1\n      pop\n        /* \"#utility.yul\":13704:14123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14129:14365   */\n    tag_288:\n        /* \"#utility.yul\":14269:14303   */\n      0x4552433732313a207472616e736665722063616c6c6572206973206e6f74206f\n        /* \"#utility.yul\":14265:14266   */\n      0x00\n        /* \"#utility.yul\":14257:14263   */\n      dup3\n        /* \"#utility.yul\":14253:14267   */\n      add\n        /* \"#utility.yul\":14246:14304   */\n      mstore\n        /* \"#utility.yul\":14338:14357   */\n      0x776e6572206e6f7220617070726f766564000000000000000000000000000000\n        /* \"#utility.yul\":14333:14335   */\n      0x20\n        /* \"#utility.yul\":14325:14331   */\n      dup3\n        /* \"#utility.yul\":14321:14336   */\n      add\n        /* \"#utility.yul\":14314:14358   */\n      mstore\n        /* \"#utility.yul\":14129:14365   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14371:14737   */\n    tag_289:\n        /* \"#utility.yul\":14513:14516   */\n      0x00\n        /* \"#utility.yul\":14534:14601   */\n      tag_463\n        /* \"#utility.yul\":14598:14600   */\n      0x31\n        /* \"#utility.yul\":14593:14596   */\n      dup4\n        /* \"#utility.yul\":14534:14601   */\n      tag_258\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":14527:14601   */\n      swap2\n      pop\n        /* \"#utility.yul\":14610:14703   */\n      tag_464\n        /* \"#utility.yul\":14699:14702   */\n      dup3\n        /* \"#utility.yul\":14610:14703   */\n      tag_288\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14728:14730   */\n      0x40\n        /* \"#utility.yul\":14723:14726   */\n      dup3\n        /* \"#utility.yul\":14719:14731   */\n      add\n        /* \"#utility.yul\":14712:14731   */\n      swap1\n      pop\n        /* \"#utility.yul\":14371:14737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14743:15162   */\n    tag_114:\n        /* \"#utility.yul\":14909:14913   */\n      0x00\n        /* \"#utility.yul\":14947:14949   */\n      0x20\n        /* \"#utility.yul\":14936:14945   */\n      dup3\n        /* \"#utility.yul\":14932:14950   */\n      add\n        /* \"#utility.yul\":14924:14950   */\n      swap1\n      pop\n        /* \"#utility.yul\":14996:15005   */\n      dup2\n        /* \"#utility.yul\":14990:14994   */\n      dup2\n        /* \"#utility.yul\":14986:15006   */\n      sub\n        /* \"#utility.yul\":14982:14983   */\n      0x00\n        /* \"#utility.yul\":14971:14980   */\n      dup4\n        /* \"#utility.yul\":14967:14984   */\n      add\n        /* \"#utility.yul\":14960:15007   */\n      mstore\n        /* \"#utility.yul\":15024:15155   */\n      tag_466\n        /* \"#utility.yul\":15150:15154   */\n      dup2\n        /* \"#utility.yul\":15024:15155   */\n      tag_289\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15016:15155   */\n      swap1\n      pop\n        /* \"#utility.yul\":14743:15162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15168:15396   */\n    tag_290:\n        /* \"#utility.yul\":15308:15342   */\n      0x4552433732313a206f776e657220717565727920666f72206e6f6e6578697374\n        /* \"#utility.yul\":15304:15305   */\n      0x00\n        /* \"#utility.yul\":15296:15302   */\n      dup3\n        /* \"#utility.yul\":15292:15306   */\n      add\n        /* \"#utility.yul\":15285:15343   */\n      mstore\n        /* \"#utility.yul\":15377:15388   */\n      0x656e7420746f6b656e0000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15372:15374   */\n      0x20\n        /* \"#utility.yul\":15364:15370   */\n      dup3\n        /* \"#utility.yul\":15360:15375   */\n      add\n        /* \"#utility.yul\":15353:15389   */\n      mstore\n        /* \"#utility.yul\":15168:15396   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15402:15768   */\n    tag_291:\n        /* \"#utility.yul\":15544:15547   */\n      0x00\n        /* \"#utility.yul\":15565:15632   */\n      tag_469\n        /* \"#utility.yul\":15629:15631   */\n      0x29\n        /* \"#utility.yul\":15624:15627   */\n      dup4\n        /* \"#utility.yul\":15565:15632   */\n      tag_258\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":15558:15632   */\n      swap2\n      pop\n        /* \"#utility.yul\":15641:15734   */\n      tag_470\n        /* \"#utility.yul\":15730:15733   */\n      dup3\n        /* \"#utility.yul\":15641:15734   */\n      tag_290\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15759:15761   */\n      0x40\n        /* \"#utility.yul\":15754:15757   */\n      dup3\n        /* \"#utility.yul\":15750:15762   */\n      add\n        /* \"#utility.yul\":15743:15762   */\n      swap1\n      pop\n        /* \"#utility.yul\":15402:15768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15774:16193   */\n    tag_122:\n        /* \"#utility.yul\":15940:15944   */\n      0x00\n        /* \"#utility.yul\":15978:15980   */\n      0x20\n        /* \"#utility.yul\":15967:15976   */\n      dup3\n        /* \"#utility.yul\":15963:15981   */\n      add\n        /* \"#utility.yul\":15955:15981   */\n      swap1\n      pop\n        /* \"#utility.yul\":16027:16036   */\n      dup2\n        /* \"#utility.yul\":16021:16025   */\n      dup2\n        /* \"#utility.yul\":16017:16037   */\n      sub\n        /* \"#utility.yul\":16013:16014   */\n      0x00\n        /* \"#utility.yul\":16002:16011   */\n      dup4\n        /* \"#utility.yul\":15998:16015   */\n      add\n        /* \"#utility.yul\":15991:16038   */\n      mstore\n        /* \"#utility.yul\":16055:16186   */\n      tag_472\n        /* \"#utility.yul\":16181:16185   */\n      dup2\n        /* \"#utility.yul\":16055:16186   */\n      tag_291\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16047:16186   */\n      swap1\n      pop\n        /* \"#utility.yul\":15774:16193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16199:16428   */\n    tag_292:\n        /* \"#utility.yul\":16339:16373   */\n      0x4552433732313a2062616c616e636520717565727920666f7220746865207a65\n        /* \"#utility.yul\":16335:16336   */\n      0x00\n        /* \"#utility.yul\":16327:16333   */\n      dup3\n        /* \"#utility.yul\":16323:16337   */\n      add\n        /* \"#utility.yul\":16316:16374   */\n      mstore\n        /* \"#utility.yul\":16408:16420   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16403:16405   */\n      0x20\n        /* \"#utility.yul\":16395:16401   */\n      dup3\n        /* \"#utility.yul\":16391:16406   */\n      add\n        /* \"#utility.yul\":16384:16421   */\n      mstore\n        /* \"#utility.yul\":16199:16428   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16434:16800   */\n    tag_293:\n        /* \"#utility.yul\":16576:16579   */\n      0x00\n        /* \"#utility.yul\":16597:16664   */\n      tag_475\n        /* \"#utility.yul\":16661:16663   */\n      0x2a\n        /* \"#utility.yul\":16656:16659   */\n      dup4\n        /* \"#utility.yul\":16597:16664   */\n      tag_258\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16590:16664   */\n      swap2\n      pop\n        /* \"#utility.yul\":16673:16766   */\n      tag_476\n        /* \"#utility.yul\":16762:16765   */\n      dup3\n        /* \"#utility.yul\":16673:16766   */\n      tag_292\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":16791:16793   */\n      0x40\n        /* \"#utility.yul\":16786:16789   */\n      dup3\n        /* \"#utility.yul\":16782:16794   */\n      add\n        /* \"#utility.yul\":16775:16794   */\n      swap1\n      pop\n        /* \"#utility.yul\":16434:16800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16806:17225   */\n    tag_126:\n        /* \"#utility.yul\":16972:16976   */\n      0x00\n        /* \"#utility.yul\":17010:17012   */\n      0x20\n        /* \"#utility.yul\":16999:17008   */\n      dup3\n        /* \"#utility.yul\":16995:17013   */\n      add\n        /* \"#utility.yul\":16987:17013   */\n      swap1\n      pop\n        /* \"#utility.yul\":17059:17068   */\n      dup2\n        /* \"#utility.yul\":17053:17057   */\n      dup2\n        /* \"#utility.yul\":17049:17069   */\n      sub\n        /* \"#utility.yul\":17045:17046   */\n      0x00\n        /* \"#utility.yul\":17034:17043   */\n      dup4\n        /* \"#utility.yul\":17030:17047   */\n      add\n        /* \"#utility.yul\":17023:17070   */\n      mstore\n        /* \"#utility.yul\":17087:17218   */\n      tag_478\n        /* \"#utility.yul\":17213:17217   */\n      dup2\n        /* \"#utility.yul\":17087:17218   */\n      tag_293\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":17079:17218   */\n      swap1\n      pop\n        /* \"#utility.yul\":16806:17225   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17231:17465   */\n    tag_294:\n        /* \"#utility.yul\":17371:17405   */\n      0x4552433732314d657461646174613a2055524920717565727920666f72206e6f\n        /* \"#utility.yul\":17367:17368   */\n      0x00\n        /* \"#utility.yul\":17359:17365   */\n      dup3\n        /* \"#utility.yul\":17355:17369   */\n      add\n        /* \"#utility.yul\":17348:17406   */\n      mstore\n        /* \"#utility.yul\":17440:17457   */\n      0x6e6578697374656e7420746f6b656e0000000000000000000000000000000000\n        /* \"#utility.yul\":17435:17437   */\n      0x20\n        /* \"#utility.yul\":17427:17433   */\n      dup3\n        /* \"#utility.yul\":17423:17438   */\n      add\n        /* \"#utility.yul\":17416:17458   */\n      mstore\n        /* \"#utility.yul\":17231:17465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17471:17837   */\n    tag_295:\n        /* \"#utility.yul\":17613:17616   */\n      0x00\n        /* \"#utility.yul\":17634:17701   */\n      tag_481\n        /* \"#utility.yul\":17698:17700   */\n      0x2f\n        /* \"#utility.yul\":17693:17696   */\n      dup4\n        /* \"#utility.yul\":17634:17701   */\n      tag_258\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":17627:17701   */\n      swap2\n      pop\n        /* \"#utility.yul\":17710:17803   */\n      tag_482\n        /* \"#utility.yul\":17799:17802   */\n      dup3\n        /* \"#utility.yul\":17710:17803   */\n      tag_294\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17828:17830   */\n      0x40\n        /* \"#utility.yul\":17823:17826   */\n      dup3\n        /* \"#utility.yul\":17819:17831   */\n      add\n        /* \"#utility.yul\":17812:17831   */\n      swap1\n      pop\n        /* \"#utility.yul\":17471:17837   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17843:18262   */\n    tag_148:\n        /* \"#utility.yul\":18009:18013   */\n      0x00\n        /* \"#utility.yul\":18047:18049   */\n      0x20\n        /* \"#utility.yul\":18036:18045   */\n      dup3\n        /* \"#utility.yul\":18032:18050   */\n      add\n        /* \"#utility.yul\":18024:18050   */\n      swap1\n      pop\n        /* \"#utility.yul\":18096:18105   */\n      dup2\n        /* \"#utility.yul\":18090:18094   */\n      dup2\n        /* \"#utility.yul\":18086:18106   */\n      sub\n        /* \"#utility.yul\":18082:18083   */\n      0x00\n        /* \"#utility.yul\":18071:18080   */\n      dup4\n        /* \"#utility.yul\":18067:18084   */\n      add\n        /* \"#utility.yul\":18060:18107   */\n      mstore\n        /* \"#utility.yul\":18124:18255   */\n      tag_484\n        /* \"#utility.yul\":18250:18254   */\n      dup2\n        /* \"#utility.yul\":18124:18255   */\n      tag_295\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":18116:18255   */\n      swap1\n      pop\n        /* \"#utility.yul\":17843:18262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18268:18416   */\n    tag_296:\n        /* \"#utility.yul\":18370:18381   */\n      0x00\n        /* \"#utility.yul\":18407:18410   */\n      dup2\n        /* \"#utility.yul\":18392:18410   */\n      swap1\n      pop\n        /* \"#utility.yul\":18268:18416   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18422:18799   */\n    tag_297:\n        /* \"#utility.yul\":18528:18531   */\n      0x00\n        /* \"#utility.yul\":18556:18595   */\n      tag_487\n        /* \"#utility.yul\":18589:18594   */\n      dup3\n        /* \"#utility.yul\":18556:18595   */\n      tag_257\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":18611:18700   */\n      tag_488\n        /* \"#utility.yul\":18693:18699   */\n      dup2\n        /* \"#utility.yul\":18688:18691   */\n      dup6\n        /* \"#utility.yul\":18611:18700   */\n      tag_296\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18604:18700   */\n      swap4\n      pop\n        /* \"#utility.yul\":18709:18761   */\n      tag_489\n        /* \"#utility.yul\":18754:18760   */\n      dup2\n        /* \"#utility.yul\":18749:18752   */\n      dup6\n        /* \"#utility.yul\":18742:18746   */\n      0x20\n        /* \"#utility.yul\":18735:18740   */\n      dup7\n        /* \"#utility.yul\":18731:18747   */\n      add\n        /* \"#utility.yul\":18709:18761   */\n      tag_259\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":18786:18792   */\n      dup1\n        /* \"#utility.yul\":18781:18784   */\n      dup5\n        /* \"#utility.yul\":18777:18793   */\n      add\n        /* \"#utility.yul\":18770:18793   */\n      swap2\n      pop\n        /* \"#utility.yul\":18532:18799   */\n      pop\n        /* \"#utility.yul\":18422:18799   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18805:19240   */\n    tag_156:\n        /* \"#utility.yul\":18985:18988   */\n      0x00\n        /* \"#utility.yul\":19007:19102   */\n      tag_491\n        /* \"#utility.yul\":19098:19101   */\n      dup3\n        /* \"#utility.yul\":19089:19095   */\n      dup6\n        /* \"#utility.yul\":19007:19102   */\n      tag_297\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":19000:19102   */\n      swap2\n      pop\n        /* \"#utility.yul\":19119:19214   */\n      tag_492\n        /* \"#utility.yul\":19210:19213   */\n      dup3\n        /* \"#utility.yul\":19201:19207   */\n      dup5\n        /* \"#utility.yul\":19119:19214   */\n      tag_297\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":19112:19214   */\n      swap2\n      pop\n        /* \"#utility.yul\":19231:19234   */\n      dup2\n        /* \"#utility.yul\":19224:19234   */\n      swap1\n      pop\n        /* \"#utility.yul\":18805:19240   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19246:19477   */\n    tag_298:\n        /* \"#utility.yul\":19386:19420   */\n      0x4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578\n        /* \"#utility.yul\":19382:19383   */\n      0x00\n        /* \"#utility.yul\":19374:19380   */\n      dup3\n        /* \"#utility.yul\":19370:19384   */\n      add\n        /* \"#utility.yul\":19363:19421   */\n      mstore\n        /* \"#utility.yul\":19455:19469   */\n      0x697374656e7420746f6b656e0000000000000000000000000000000000000000\n        /* \"#utility.yul\":19450:19452   */\n      0x20\n        /* \"#utility.yul\":19442:19448   */\n      dup3\n        /* \"#utility.yul\":19438:19453   */\n      add\n        /* \"#utility.yul\":19431:19470   */\n      mstore\n        /* \"#utility.yul\":19246:19477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19483:19849   */\n    tag_299:\n        /* \"#utility.yul\":19625:19628   */\n      0x00\n        /* \"#utility.yul\":19646:19713   */\n      tag_495\n        /* \"#utility.yul\":19710:19712   */\n      0x2c\n        /* \"#utility.yul\":19705:19708   */\n      dup4\n        /* \"#utility.yul\":19646:19713   */\n      tag_258\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19639:19713   */\n      swap2\n      pop\n        /* \"#utility.yul\":19722:19815   */\n      tag_496\n        /* \"#utility.yul\":19811:19814   */\n      dup3\n        /* \"#utility.yul\":19722:19815   */\n      tag_298\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19840:19842   */\n      0x40\n        /* \"#utility.yul\":19835:19838   */\n      dup3\n        /* \"#utility.yul\":19831:19843   */\n      add\n        /* \"#utility.yul\":19824:19843   */\n      swap1\n      pop\n        /* \"#utility.yul\":19483:19849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19855:20274   */\n    tag_167:\n        /* \"#utility.yul\":20021:20025   */\n      0x00\n        /* \"#utility.yul\":20059:20061   */\n      0x20\n        /* \"#utility.yul\":20048:20057   */\n      dup3\n        /* \"#utility.yul\":20044:20062   */\n      add\n        /* \"#utility.yul\":20036:20062   */\n      swap1\n      pop\n        /* \"#utility.yul\":20108:20117   */\n      dup2\n        /* \"#utility.yul\":20102:20106   */\n      dup2\n        /* \"#utility.yul\":20098:20118   */\n      sub\n        /* \"#utility.yul\":20094:20095   */\n      0x00\n        /* \"#utility.yul\":20083:20092   */\n      dup4\n        /* \"#utility.yul\":20079:20096   */\n      add\n        /* \"#utility.yul\":20072:20119   */\n      mstore\n        /* \"#utility.yul\":20136:20267   */\n      tag_498\n        /* \"#utility.yul\":20262:20266   */\n      dup2\n        /* \"#utility.yul\":20136:20267   */\n      tag_299\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":20128:20267   */\n      swap1\n      pop\n        /* \"#utility.yul\":19855:20274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20280:20504   */\n    tag_300:\n        /* \"#utility.yul\":20420:20454   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":20416:20417   */\n      0x00\n        /* \"#utility.yul\":20408:20414   */\n      dup3\n        /* \"#utility.yul\":20404:20418   */\n      add\n        /* \"#utility.yul\":20397:20455   */\n      mstore\n        /* \"#utility.yul\":20489:20496   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20484:20486   */\n      0x20\n        /* \"#utility.yul\":20476:20482   */\n      dup3\n        /* \"#utility.yul\":20472:20487   */\n      add\n        /* \"#utility.yul\":20465:20497   */\n      mstore\n        /* \"#utility.yul\":20280:20504   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20510:20876   */\n    tag_301:\n        /* \"#utility.yul\":20652:20655   */\n      0x00\n        /* \"#utility.yul\":20673:20740   */\n      tag_501\n        /* \"#utility.yul\":20737:20739   */\n      0x25\n        /* \"#utility.yul\":20732:20735   */\n      dup4\n        /* \"#utility.yul\":20673:20740   */\n      tag_258\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20666:20740   */\n      swap2\n      pop\n        /* \"#utility.yul\":20749:20842   */\n      tag_502\n        /* \"#utility.yul\":20838:20841   */\n      dup3\n        /* \"#utility.yul\":20749:20842   */\n      tag_300\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":20867:20869   */\n      0x40\n        /* \"#utility.yul\":20862:20865   */\n      dup3\n        /* \"#utility.yul\":20858:20870   */\n      add\n        /* \"#utility.yul\":20851:20870   */\n      swap1\n      pop\n        /* \"#utility.yul\":20510:20876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20882:21301   */\n    tag_177:\n        /* \"#utility.yul\":21048:21052   */\n      0x00\n        /* \"#utility.yul\":21086:21088   */\n      0x20\n        /* \"#utility.yul\":21075:21084   */\n      dup3\n        /* \"#utility.yul\":21071:21089   */\n      add\n        /* \"#utility.yul\":21063:21089   */\n      swap1\n      pop\n        /* \"#utility.yul\":21135:21144   */\n      dup2\n        /* \"#utility.yul\":21129:21133   */\n      dup2\n        /* \"#utility.yul\":21125:21145   */\n      sub\n        /* \"#utility.yul\":21121:21122   */\n      0x00\n        /* \"#utility.yul\":21110:21119   */\n      dup4\n        /* \"#utility.yul\":21106:21123   */\n      add\n        /* \"#utility.yul\":21099:21146   */\n      mstore\n        /* \"#utility.yul\":21163:21294   */\n      tag_504\n        /* \"#utility.yul\":21289:21293   */\n      dup2\n        /* \"#utility.yul\":21163:21294   */\n      tag_301\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":21155:21294   */\n      swap1\n      pop\n        /* \"#utility.yul\":20882:21301   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21307:21530   */\n    tag_302:\n        /* \"#utility.yul\":21447:21481   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":21443:21444   */\n      0x00\n        /* \"#utility.yul\":21435:21441   */\n      dup3\n        /* \"#utility.yul\":21431:21445   */\n      add\n        /* \"#utility.yul\":21424:21482   */\n      mstore\n        /* \"#utility.yul\":21516:21522   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21511:21513   */\n      0x20\n        /* \"#utility.yul\":21503:21509   */\n      dup3\n        /* \"#utility.yul\":21499:21514   */\n      add\n        /* \"#utility.yul\":21492:21523   */\n      mstore\n        /* \"#utility.yul\":21307:21530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21536:21902   */\n    tag_303:\n        /* \"#utility.yul\":21678:21681   */\n      0x00\n        /* \"#utility.yul\":21699:21766   */\n      tag_507\n        /* \"#utility.yul\":21763:21765   */\n      0x24\n        /* \"#utility.yul\":21758:21761   */\n      dup4\n        /* \"#utility.yul\":21699:21766   */\n      tag_258\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21692:21766   */\n      swap2\n      pop\n        /* \"#utility.yul\":21775:21868   */\n      tag_508\n        /* \"#utility.yul\":21864:21867   */\n      dup3\n        /* \"#utility.yul\":21775:21868   */\n      tag_302\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":21893:21895   */\n      0x40\n        /* \"#utility.yul\":21888:21891   */\n      dup3\n        /* \"#utility.yul\":21884:21896   */\n      add\n        /* \"#utility.yul\":21877:21896   */\n      swap1\n      pop\n        /* \"#utility.yul\":21536:21902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21908:22327   */\n    tag_180:\n        /* \"#utility.yul\":22074:22078   */\n      0x00\n        /* \"#utility.yul\":22112:22114   */\n      0x20\n        /* \"#utility.yul\":22101:22110   */\n      dup3\n        /* \"#utility.yul\":22097:22115   */\n      add\n        /* \"#utility.yul\":22089:22115   */\n      swap1\n      pop\n        /* \"#utility.yul\":22161:22170   */\n      dup2\n        /* \"#utility.yul\":22155:22159   */\n      dup2\n        /* \"#utility.yul\":22151:22171   */\n      sub\n        /* \"#utility.yul\":22147:22148   */\n      0x00\n        /* \"#utility.yul\":22136:22145   */\n      dup4\n        /* \"#utility.yul\":22132:22149   */\n      add\n        /* \"#utility.yul\":22125:22172   */\n      mstore\n        /* \"#utility.yul\":22189:22320   */\n      tag_510\n        /* \"#utility.yul\":22315:22319   */\n      dup2\n        /* \"#utility.yul\":22189:22320   */\n      tag_303\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":22181:22320   */\n      swap1\n      pop\n        /* \"#utility.yul\":21908:22327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22333:22513   */\n    tag_304:\n        /* \"#utility.yul\":22381:22458   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22378:22379   */\n      0x00\n        /* \"#utility.yul\":22371:22459   */\n      mstore\n        /* \"#utility.yul\":22478:22482   */\n      0x11\n        /* \"#utility.yul\":22475:22476   */\n      0x04\n        /* \"#utility.yul\":22468:22483   */\n      mstore\n        /* \"#utility.yul\":22502:22506   */\n      0x24\n        /* \"#utility.yul\":22499:22500   */\n      0x00\n        /* \"#utility.yul\":22492:22507   */\n      revert\n        /* \"#utility.yul\":22519:22710   */\n    tag_185:\n        /* \"#utility.yul\":22559:22563   */\n      0x00\n        /* \"#utility.yul\":22579:22599   */\n      tag_513\n        /* \"#utility.yul\":22597:22598   */\n      dup3\n        /* \"#utility.yul\":22579:22599   */\n      tag_262\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":22574:22599   */\n      swap2\n      pop\n        /* \"#utility.yul\":22613:22633   */\n      tag_514\n        /* \"#utility.yul\":22631:22632   */\n      dup4\n        /* \"#utility.yul\":22613:22633   */\n      tag_262\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":22608:22633   */\n      swap3\n      pop\n        /* \"#utility.yul\":22652:22653   */\n      dup3\n        /* \"#utility.yul\":22649:22650   */\n      dup3\n        /* \"#utility.yul\":22646:22654   */\n      lt\n        /* \"#utility.yul\":22643:22677   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":22657:22675   */\n      tag_516\n      tag_304\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":22643:22677   */\n    tag_515:\n        /* \"#utility.yul\":22702:22703   */\n      dup3\n        /* \"#utility.yul\":22699:22700   */\n      dup3\n        /* \"#utility.yul\":22695:22704   */\n      sub\n        /* \"#utility.yul\":22687:22704   */\n      swap1\n      pop\n        /* \"#utility.yul\":22519:22710   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22716:23021   */\n    tag_187:\n        /* \"#utility.yul\":22756:22759   */\n      0x00\n        /* \"#utility.yul\":22775:22795   */\n      tag_518\n        /* \"#utility.yul\":22793:22794   */\n      dup3\n        /* \"#utility.yul\":22775:22795   */\n      tag_262\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":22770:22795   */\n      swap2\n      pop\n        /* \"#utility.yul\":22809:22829   */\n      tag_519\n        /* \"#utility.yul\":22827:22828   */\n      dup4\n        /* \"#utility.yul\":22809:22829   */\n      tag_262\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":22804:22829   */\n      swap3\n      pop\n        /* \"#utility.yul\":22963:22964   */\n      dup3\n        /* \"#utility.yul\":22895:22961   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22891:22965   */\n      sub\n        /* \"#utility.yul\":22888:22889   */\n      dup3\n        /* \"#utility.yul\":22885:22966   */\n      gt\n        /* \"#utility.yul\":22882:22989   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":22969:22987   */\n      tag_521\n      tag_304\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":22882:22989   */\n    tag_520:\n        /* \"#utility.yul\":23013:23014   */\n      dup3\n        /* \"#utility.yul\":23010:23011   */\n      dup3\n        /* \"#utility.yul\":23006:23015   */\n      add\n        /* \"#utility.yul\":22999:23015   */\n      swap1\n      pop\n        /* \"#utility.yul\":22716:23021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23027:23202   */\n    tag_305:\n        /* \"#utility.yul\":23167:23194   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":23163:23164   */\n      0x00\n        /* \"#utility.yul\":23155:23161   */\n      dup3\n        /* \"#utility.yul\":23151:23165   */\n      add\n        /* \"#utility.yul\":23144:23195   */\n      mstore\n        /* \"#utility.yul\":23027:23202   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23208:23574   */\n    tag_306:\n        /* \"#utility.yul\":23350:23353   */\n      0x00\n        /* \"#utility.yul\":23371:23438   */\n      tag_524\n        /* \"#utility.yul\":23435:23437   */\n      0x19\n        /* \"#utility.yul\":23430:23433   */\n      dup4\n        /* \"#utility.yul\":23371:23438   */\n      tag_258\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":23364:23438   */\n      swap2\n      pop\n        /* \"#utility.yul\":23447:23540   */\n      tag_525\n        /* \"#utility.yul\":23536:23539   */\n      dup3\n        /* \"#utility.yul\":23447:23540   */\n      tag_305\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":23565:23567   */\n      0x20\n        /* \"#utility.yul\":23560:23563   */\n      dup3\n        /* \"#utility.yul\":23556:23568   */\n      add\n        /* \"#utility.yul\":23549:23568   */\n      swap1\n      pop\n        /* \"#utility.yul\":23208:23574   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23580:23999   */\n    tag_193:\n        /* \"#utility.yul\":23746:23750   */\n      0x00\n        /* \"#utility.yul\":23784:23786   */\n      0x20\n        /* \"#utility.yul\":23773:23782   */\n      dup3\n        /* \"#utility.yul\":23769:23787   */\n      add\n        /* \"#utility.yul\":23761:23787   */\n      swap1\n      pop\n        /* \"#utility.yul\":23833:23842   */\n      dup2\n        /* \"#utility.yul\":23827:23831   */\n      dup2\n        /* \"#utility.yul\":23823:23843   */\n      sub\n        /* \"#utility.yul\":23819:23820   */\n      0x00\n        /* \"#utility.yul\":23808:23817   */\n      dup4\n        /* \"#utility.yul\":23804:23821   */\n      add\n        /* \"#utility.yul\":23797:23844   */\n      mstore\n        /* \"#utility.yul\":23861:23992   */\n      tag_527\n        /* \"#utility.yul\":23987:23991   */\n      dup2\n        /* \"#utility.yul\":23861:23992   */\n      tag_306\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":23853:23992   */\n      swap1\n      pop\n        /* \"#utility.yul\":23580:23999   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24005:24242   */\n    tag_307:\n        /* \"#utility.yul\":24145:24179   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":24141:24142   */\n      0x00\n        /* \"#utility.yul\":24133:24139   */\n      dup3\n        /* \"#utility.yul\":24129:24143   */\n      add\n        /* \"#utility.yul\":24122:24180   */\n      mstore\n        /* \"#utility.yul\":24214:24234   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":24209:24211   */\n      0x20\n        /* \"#utility.yul\":24201:24207   */\n      dup3\n        /* \"#utility.yul\":24197:24212   */\n      add\n        /* \"#utility.yul\":24190:24235   */\n      mstore\n        /* \"#utility.yul\":24005:24242   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24248:24614   */\n    tag_308:\n        /* \"#utility.yul\":24390:24393   */\n      0x00\n        /* \"#utility.yul\":24411:24478   */\n      tag_530\n        /* \"#utility.yul\":24475:24477   */\n      0x32\n        /* \"#utility.yul\":24470:24473   */\n      dup4\n        /* \"#utility.yul\":24411:24478   */\n      tag_258\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":24404:24478   */\n      swap2\n      pop\n        /* \"#utility.yul\":24487:24580   */\n      tag_531\n        /* \"#utility.yul\":24576:24579   */\n      dup3\n        /* \"#utility.yul\":24487:24580   */\n      tag_307\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":24605:24607   */\n      0x40\n        /* \"#utility.yul\":24600:24603   */\n      dup3\n        /* \"#utility.yul\":24596:24608   */\n      add\n        /* \"#utility.yul\":24589:24608   */\n      swap1\n      pop\n        /* \"#utility.yul\":24248:24614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24620:25039   */\n    tag_201:\n        /* \"#utility.yul\":24786:24790   */\n      0x00\n        /* \"#utility.yul\":24824:24826   */\n      0x20\n        /* \"#utility.yul\":24813:24822   */\n      dup3\n        /* \"#utility.yul\":24809:24827   */\n      add\n        /* \"#utility.yul\":24801:24827   */\n      swap1\n      pop\n        /* \"#utility.yul\":24873:24882   */\n      dup2\n        /* \"#utility.yul\":24867:24871   */\n      dup2\n        /* \"#utility.yul\":24863:24883   */\n      sub\n        /* \"#utility.yul\":24859:24860   */\n      0x00\n        /* \"#utility.yul\":24848:24857   */\n      dup4\n        /* \"#utility.yul\":24844:24861   */\n      add\n        /* \"#utility.yul\":24837:24884   */\n      mstore\n        /* \"#utility.yul\":24901:25032   */\n      tag_533\n        /* \"#utility.yul\":25027:25031   */\n      dup2\n        /* \"#utility.yul\":24901:25032   */\n      tag_308\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":24893:25032   */\n      swap1\n      pop\n        /* \"#utility.yul\":24620:25039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25045:25278   */\n    tag_208:\n        /* \"#utility.yul\":25084:25087   */\n      0x00\n        /* \"#utility.yul\":25107:25131   */\n      tag_535\n        /* \"#utility.yul\":25125:25130   */\n      dup3\n        /* \"#utility.yul\":25107:25131   */\n      tag_262\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25098:25131   */\n      swap2\n      pop\n        /* \"#utility.yul\":25153:25219   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":25146:25151   */\n      dup3\n        /* \"#utility.yul\":25143:25220   */\n      sub\n        /* \"#utility.yul\":25140:25243   */\n      tag_536\n      jumpi\n        /* \"#utility.yul\":25223:25241   */\n      tag_537\n      tag_304\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25140:25243   */\n    tag_536:\n        /* \"#utility.yul\":25270:25271   */\n      0x01\n        /* \"#utility.yul\":25263:25268   */\n      dup3\n        /* \"#utility.yul\":25259:25272   */\n      add\n        /* \"#utility.yul\":25252:25272   */\n      swap1\n      pop\n        /* \"#utility.yul\":25045:25278   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25284:25464   */\n    tag_309:\n        /* \"#utility.yul\":25332:25409   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25329:25330   */\n      0x00\n        /* \"#utility.yul\":25322:25410   */\n      mstore\n        /* \"#utility.yul\":25429:25433   */\n      0x12\n        /* \"#utility.yul\":25426:25427   */\n      0x04\n        /* \"#utility.yul\":25419:25434   */\n      mstore\n        /* \"#utility.yul\":25453:25457   */\n      0x24\n        /* \"#utility.yul\":25450:25451   */\n      0x00\n        /* \"#utility.yul\":25443:25458   */\n      revert\n        /* \"#utility.yul\":25470:25655   */\n    tag_210:\n        /* \"#utility.yul\":25510:25511   */\n      0x00\n        /* \"#utility.yul\":25527:25547   */\n      tag_540\n        /* \"#utility.yul\":25545:25546   */\n      dup3\n        /* \"#utility.yul\":25527:25547   */\n      tag_262\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":25522:25547   */\n      swap2\n      pop\n        /* \"#utility.yul\":25561:25581   */\n      tag_541\n        /* \"#utility.yul\":25579:25580   */\n      dup4\n        /* \"#utility.yul\":25561:25581   */\n      tag_262\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":25556:25581   */\n      swap3\n      pop\n        /* \"#utility.yul\":25600:25601   */\n      dup3\n        /* \"#utility.yul\":25590:25625   */\n      tag_542\n      jumpi\n        /* \"#utility.yul\":25605:25623   */\n      tag_543\n      tag_309\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":25590:25625   */\n    tag_542:\n        /* \"#utility.yul\":25647:25648   */\n      dup3\n        /* \"#utility.yul\":25644:25645   */\n      dup3\n        /* \"#utility.yul\":25640:25649   */\n      div\n        /* \"#utility.yul\":25635:25649   */\n      swap1\n      pop\n        /* \"#utility.yul\":25470:25655   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25661:25837   */\n    tag_219:\n        /* \"#utility.yul\":25693:25694   */\n      0x00\n        /* \"#utility.yul\":25710:25730   */\n      tag_545\n        /* \"#utility.yul\":25728:25729   */\n      dup3\n        /* \"#utility.yul\":25710:25730   */\n      tag_262\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":25705:25730   */\n      swap2\n      pop\n        /* \"#utility.yul\":25744:25764   */\n      tag_546\n        /* \"#utility.yul\":25762:25763   */\n      dup4\n        /* \"#utility.yul\":25744:25764   */\n      tag_262\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":25739:25764   */\n      swap3\n      pop\n        /* \"#utility.yul\":25783:25784   */\n      dup3\n        /* \"#utility.yul\":25773:25808   */\n      tag_547\n      jumpi\n        /* \"#utility.yul\":25788:25806   */\n      tag_548\n      tag_309\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":25773:25808   */\n    tag_547:\n        /* \"#utility.yul\":25829:25830   */\n      dup3\n        /* \"#utility.yul\":25826:25827   */\n      dup3\n        /* \"#utility.yul\":25822:25831   */\n      mod\n        /* \"#utility.yul\":25817:25831   */\n      swap1\n      pop\n        /* \"#utility.yul\":25661:25837   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25843:26023   */\n    tag_223:\n        /* \"#utility.yul\":25891:25968   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":25888:25889   */\n      0x00\n        /* \"#utility.yul\":25881:25969   */\n      mstore\n        /* \"#utility.yul\":25988:25992   */\n      0x32\n        /* \"#utility.yul\":25985:25986   */\n      0x04\n        /* \"#utility.yul\":25978:25993   */\n      mstore\n        /* \"#utility.yul\":26012:26016   */\n      0x24\n        /* \"#utility.yul\":26009:26010   */\n      0x00\n        /* \"#utility.yul\":26002:26017   */\n      revert\n        /* \"#utility.yul\":26029:26127   */\n    tag_310:\n        /* \"#utility.yul\":26080:26086   */\n      0x00\n        /* \"#utility.yul\":26114:26119   */\n      dup2\n        /* \"#utility.yul\":26108:26120   */\n      mload\n        /* \"#utility.yul\":26098:26120   */\n      swap1\n      pop\n        /* \"#utility.yul\":26029:26127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26133:26301   */\n    tag_311:\n        /* \"#utility.yul\":26216:26227   */\n      0x00\n        /* \"#utility.yul\":26250:26256   */\n      dup3\n        /* \"#utility.yul\":26245:26248   */\n      dup3\n        /* \"#utility.yul\":26238:26257   */\n      mstore\n        /* \"#utility.yul\":26290:26294   */\n      0x20\n        /* \"#utility.yul\":26285:26288   */\n      dup3\n        /* \"#utility.yul\":26281:26295   */\n      add\n        /* \"#utility.yul\":26266:26295   */\n      swap1\n      pop\n        /* \"#utility.yul\":26133:26301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26307:26667   */\n    tag_312:\n        /* \"#utility.yul\":26393:26396   */\n      0x00\n        /* \"#utility.yul\":26421:26459   */\n      tag_553\n        /* \"#utility.yul\":26453:26458   */\n      dup3\n        /* \"#utility.yul\":26421:26459   */\n      tag_310\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":26475:26545   */\n      tag_554\n        /* \"#utility.yul\":26538:26544   */\n      dup2\n        /* \"#utility.yul\":26533:26536   */\n      dup6\n        /* \"#utility.yul\":26475:26545   */\n      tag_311\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":26468:26545   */\n      swap4\n      pop\n        /* \"#utility.yul\":26554:26606   */\n      tag_555\n        /* \"#utility.yul\":26599:26605   */\n      dup2\n        /* \"#utility.yul\":26594:26597   */\n      dup6\n        /* \"#utility.yul\":26587:26591   */\n      0x20\n        /* \"#utility.yul\":26580:26585   */\n      dup7\n        /* \"#utility.yul\":26576:26592   */\n      add\n        /* \"#utility.yul\":26554:26606   */\n      tag_259\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":26631:26660   */\n      tag_556\n        /* \"#utility.yul\":26653:26659   */\n      dup2\n        /* \"#utility.yul\":26631:26660   */\n      tag_260\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":26626:26629   */\n      dup5\n        /* \"#utility.yul\":26622:26661   */\n      add\n        /* \"#utility.yul\":26615:26661   */\n      swap2\n      pop\n        /* \"#utility.yul\":26397:26667   */\n      pop\n        /* \"#utility.yul\":26307:26667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26673:27313   */\n    tag_233:\n        /* \"#utility.yul\":26868:26872   */\n      0x00\n        /* \"#utility.yul\":26906:26909   */\n      0x80\n        /* \"#utility.yul\":26895:26904   */\n      dup3\n        /* \"#utility.yul\":26891:26910   */\n      add\n        /* \"#utility.yul\":26883:26910   */\n      swap1\n      pop\n        /* \"#utility.yul\":26920:26991   */\n      tag_558\n        /* \"#utility.yul\":26988:26989   */\n      0x00\n        /* \"#utility.yul\":26977:26986   */\n      dup4\n        /* \"#utility.yul\":26973:26990   */\n      add\n        /* \"#utility.yul\":26964:26970   */\n      dup8\n        /* \"#utility.yul\":26920:26991   */\n      tag_267\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":27001:27073   */\n      tag_559\n        /* \"#utility.yul\":27069:27071   */\n      0x20\n        /* \"#utility.yul\":27058:27067   */\n      dup4\n        /* \"#utility.yul\":27054:27072   */\n      add\n        /* \"#utility.yul\":27045:27051   */\n      dup7\n        /* \"#utility.yul\":27001:27073   */\n      tag_267\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":27083:27155   */\n      tag_560\n        /* \"#utility.yul\":27151:27153   */\n      0x40\n        /* \"#utility.yul\":27140:27149   */\n      dup4\n        /* \"#utility.yul\":27136:27154   */\n      add\n        /* \"#utility.yul\":27127:27133   */\n      dup6\n        /* \"#utility.yul\":27083:27155   */\n      tag_270\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":27202:27211   */\n      dup2\n        /* \"#utility.yul\":27196:27200   */\n      dup2\n        /* \"#utility.yul\":27192:27212   */\n      sub\n        /* \"#utility.yul\":27187:27189   */\n      0x60\n        /* \"#utility.yul\":27176:27185   */\n      dup4\n        /* \"#utility.yul\":27172:27190   */\n      add\n        /* \"#utility.yul\":27165:27213   */\n      mstore\n        /* \"#utility.yul\":27230:27306   */\n      tag_561\n        /* \"#utility.yul\":27301:27305   */\n      dup2\n        /* \"#utility.yul\":27292:27298   */\n      dup5\n        /* \"#utility.yul\":27230:27306   */\n      tag_312\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":27222:27306   */\n      swap1\n      pop\n        /* \"#utility.yul\":26673:27313   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27319:27460   */\n    tag_313:\n        /* \"#utility.yul\":27375:27380   */\n      0x00\n        /* \"#utility.yul\":27406:27412   */\n      dup2\n        /* \"#utility.yul\":27400:27413   */\n      mload\n        /* \"#utility.yul\":27391:27413   */\n      swap1\n      pop\n        /* \"#utility.yul\":27422:27454   */\n      tag_563\n        /* \"#utility.yul\":27448:27453   */\n      dup2\n        /* \"#utility.yul\":27422:27454   */\n      tag_253\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":27319:27460   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27466:27815   */\n    tag_236:\n        /* \"#utility.yul\":27535:27541   */\n      0x00\n        /* \"#utility.yul\":27584:27586   */\n      0x20\n        /* \"#utility.yul\":27572:27581   */\n      dup3\n        /* \"#utility.yul\":27563:27570   */\n      dup5\n        /* \"#utility.yul\":27559:27582   */\n      sub\n        /* \"#utility.yul\":27555:27587   */\n      slt\n        /* \"#utility.yul\":27552:27671   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":27590:27669   */\n      tag_566\n      tag_250\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":27552:27671   */\n    tag_565:\n        /* \"#utility.yul\":27710:27711   */\n      0x00\n        /* \"#utility.yul\":27735:27798   */\n      tag_567\n        /* \"#utility.yul\":27790:27797   */\n      dup5\n        /* \"#utility.yul\":27781:27787   */\n      dup3\n        /* \"#utility.yul\":27770:27779   */\n      dup6\n        /* \"#utility.yul\":27766:27788   */\n      add\n        /* \"#utility.yul\":27735:27798   */\n      tag_313\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":27725:27798   */\n      swap2\n      pop\n        /* \"#utility.yul\":27681:27808   */\n      pop\n        /* \"#utility.yul\":27466:27815   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b0db5267c4f30b4fbde5b954a8fab56b3e318af1ce48b0bad6b5738fc27ddd9b64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 835,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 336,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4093:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:17",
														"type": ""
													}
												],
												"src": "580:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:17"
															},
															"nodeType": "YulIf",
															"src": "1030:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:17",
														"type": ""
													}
												],
												"src": "874:281:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:17",
														"type": ""
													}
												],
												"src": "1161:129:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:17"
															},
															"nodeType": "YulIf",
															"src": "1434:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:17",
														"type": ""
													}
												],
												"src": "1296:308:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1659:258:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1669:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1678:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1673:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1738:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1763:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1768:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1759:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1759:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1782:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1787:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1778:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1778:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1772:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1752:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1752:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1752:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1699:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1702:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1696:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1696:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1710:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1712:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1721:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1724:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1717:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1712:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1692:3:17",
																"statements": []
															},
															"src": "1688:113:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1835:76:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1885:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "1890:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1881:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1881:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1899:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1874:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1874:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1874:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1816:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1819:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1813:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1813:13:17"
															},
															"nodeType": "YulIf",
															"src": "1810:101:17"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1641:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1646:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1651:6:17",
														"type": ""
													}
												],
												"src": "1610:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2018:326:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2028:75:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2095:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2053:41:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:49:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2037:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:66:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2028:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2119:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2142:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2157:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2164:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2153:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2146:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2209:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2188:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2193:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2184:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2184:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2202:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2181:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:25:17"
															},
															"nodeType": "YulIf",
															"src": "2178:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:17"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2326:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2331:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2299:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2299:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2299:39:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1991:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1996:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2004:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2012:5:17",
														"type": ""
													}
												],
												"src": "1923:421:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2437:282:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2488:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2488:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2488:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2465:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2473:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2480:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2457:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2457:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2450:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2450:35:17"
															},
															"nodeType": "YulIf",
															"src": "2447:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2578:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2598:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2592:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2582:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2614:99:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2701:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2709:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2623:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2623:90:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2614:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2415:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2423:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2431:5:17",
														"type": ""
													}
												],
												"src": "2364:355:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2839:739:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2869:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2852:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2852:32:17"
															},
															"nodeType": "YulIf",
															"src": "2849:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "2978:291:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2993:38:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3017:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3028:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3013:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3013:17:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3007:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3007:24:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2997:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3078:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3080:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3080:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3080:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3058:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3047:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3047:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "3044:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3175:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3231:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3242:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3227:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3251:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3185:41:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3279:292:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:39:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3329:2:17",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:18:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3308:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3308:25:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3380:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3382:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3382:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3382:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3360:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3349:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3349:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "3346:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3477:84:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3533:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3544:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3529:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3529:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3553:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3487:41:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3487:74:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3477:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2801:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2812:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2824:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2832:6:17",
														"type": ""
													}
												],
												"src": "2725:853:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3612:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3629:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3632:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3584:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3821:269:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3831:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3845:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3851:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3862:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3898:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3888:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3888:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3866:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3939:51:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3953:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3967:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3975:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3963:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3963:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3919:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3912:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:26:17"
															},
															"nodeType": "YulIf",
															"src": "3909:81:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4042:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4056:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4056:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4006:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4029:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4037:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4026:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4003:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4003:38:17"
															},
															"nodeType": "YulIf",
															"src": "4000:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3805:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3814:6:17",
														"type": ""
													}
												],
												"src": "3770:320:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200278d3803806200278d8339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a7565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b602082108103620003a157620003a062000343565b5b50919050565b6123d680620003b76000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611433565b6102bc565b6040516100fb919061147b565b60405180910390f35b61010c61039e565b604051610119919061152f565b60405180910390f35b61013c60048036038101906101379190611587565b610430565b60405161014991906115f5565b60405180910390f35b61016c6004803603810190610167919061163c565b6104b5565b005b6101886004803603810190610183919061167c565b6105cc565b005b6101a4600480360381019061019f919061167c565b61062c565b005b6101c060048036038101906101bb9190611587565b61064c565b6040516101cd91906115f5565b60405180910390f35b6101f060048036038101906101eb91906116cf565b6106fd565b6040516101fd919061170b565b60405180910390f35b61020e6107b4565b60405161021b919061152f565b60405180910390f35b61023e60048036038101906102399190611752565b610846565b005b61025a600480360381019061025591906118c7565b61085c565b005b61027660048036038101906102719190611587565b6108be565b604051610283919061152f565b60405180910390f35b6102a660048036038101906102a1919061194a565b610965565b6040516102b3919061147b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826109f9565b5b9050919050565b6060600080546103ad906119b9565b80601f01602080910402602001604051908101604052809291908181526020018280546103d9906119b9565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610a63565b61047a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047190611a5c565b60405180910390fd5b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104c08261064c565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052790611aee565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661054f610acf565b73ffffffffffffffffffffffffffffffffffffffff16148061057e575061057d81610578610acf565b610965565b5b6105bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b490611b80565b60405180910390fd5b6105c78383610ad7565b505050565b6105dd6105d7610acf565b82610b90565b61061c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061390611c12565b60405180910390fd5b610627838383610c6e565b505050565b6106478383836040518060200160405280600081525061085c565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106eb90611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546107c3906119b9565b80601f01602080910402602001604051908101604052809291908181526020018280546107ef906119b9565b801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b5050505050905090565b610858610851610acf565b8383610ed4565b5050565b61086d610867610acf565b83610b90565b6108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a390611c12565b60405180910390fd5b6108b884848484611040565b50505050565b60606108c982610a63565b610908576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ff90611dc8565b60405180910390fd5b600061091261109c565b90506000815111610932576040518060200160405280600081525061095d565b8061093c846110b3565b60405160200161094d929190611e24565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b4a8361064c565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b9b82610a63565b610bda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd190611eba565b60405180910390fd5b6000610be58361064c565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c5457508373ffffffffffffffffffffffffffffffffffffffff16610c3c84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c655750610c648185610965565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c8e8261064c565b73ffffffffffffffffffffffffffffffffffffffff1614610ce4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cdb90611f4c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a90611fde565b60405180910390fd5b610d5e838383611213565b610d69600082610ad7565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610db9919061202d565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e109190612061565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ecf838383611218565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3990612103565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611033919061147b565b60405180910390a3505050565b61104b848484610c6e565b6110578484848461121d565b611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108d90612195565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060600082036110fa576040518060400160405280600181526020017f3000000000000000000000000000000000000000000000000000000000000000815250905061120e565b600082905060005b6000821461112c578080611115906121b5565b915050600a82611125919061222c565b9150611102565b60008167ffffffffffffffff8111156111485761114761179c565b5b6040519080825280601f01601f19166020018201604052801561117a5781602001600182028036833780820191505090505b5090505b6000851461120757600182611193919061202d565b9150600a856111a2919061225d565b60306111ae9190612061565b60f81b8183815181106111c4576111c361228e565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a85611200919061222c565b945061117e565b8093505050505b919050565b505050565b505050565b600061123e8473ffffffffffffffffffffffffffffffffffffffff166113a4565b15611397578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611267610acf565b8786866040518563ffffffff1660e01b81526004016112899493929190612312565b6020604051808303816000875af19250505080156112c557506040513d601f19601f820116820180604052508101906112c29190612373565b60015b611347573d80600081146112f5576040519150601f19603f3d011682016040523d82523d6000602084013e6112fa565b606091505b50600081510361133f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133690612195565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061139c565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611410816113db565b811461141b57600080fd5b50565b60008135905061142d81611407565b92915050565b600060208284031215611449576114486113d1565b5b60006114578482850161141e565b91505092915050565b60008115159050919050565b61147581611460565b82525050565b6000602082019050611490600083018461146c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114d05780820151818401526020810190506114b5565b838111156114df576000848401525b50505050565b6000601f19601f8301169050919050565b600061150182611496565b61150b81856114a1565b935061151b8185602086016114b2565b611524816114e5565b840191505092915050565b6000602082019050818103600083015261154981846114f6565b905092915050565b6000819050919050565b61156481611551565b811461156f57600080fd5b50565b6000813590506115818161155b565b92915050565b60006020828403121561159d5761159c6113d1565b5b60006115ab84828501611572565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115df826115b4565b9050919050565b6115ef816115d4565b82525050565b600060208201905061160a60008301846115e6565b92915050565b611619816115d4565b811461162457600080fd5b50565b60008135905061163681611610565b92915050565b60008060408385031215611653576116526113d1565b5b600061166185828601611627565b925050602061167285828601611572565b9150509250929050565b600080600060608486031215611695576116946113d1565b5b60006116a386828701611627565b93505060206116b486828701611627565b92505060406116c586828701611572565b9150509250925092565b6000602082840312156116e5576116e46113d1565b5b60006116f384828501611627565b91505092915050565b61170581611551565b82525050565b600060208201905061172060008301846116fc565b92915050565b61172f81611460565b811461173a57600080fd5b50565b60008135905061174c81611726565b92915050565b60008060408385031215611769576117686113d1565b5b600061177785828601611627565b92505060206117888582860161173d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117d4826114e5565b810181811067ffffffffffffffff821117156117f3576117f261179c565b5b80604052505050565b60006118066113c7565b905061181282826117cb565b919050565b600067ffffffffffffffff8211156118325761183161179c565b5b61183b826114e5565b9050602081019050919050565b82818337600083830152505050565b600061186a61186584611817565b6117fc565b90508281526020810184848401111561188657611885611797565b5b611891848285611848565b509392505050565b600082601f8301126118ae576118ad611792565b5b81356118be848260208601611857565b91505092915050565b600080600080608085870312156118e1576118e06113d1565b5b60006118ef87828801611627565b945050602061190087828801611627565b935050604061191187828801611572565b925050606085013567ffffffffffffffff811115611932576119316113d6565b5b61193e87828801611899565b91505092959194509250565b60008060408385031215611961576119606113d1565b5b600061196f85828601611627565b925050602061198085828601611627565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119d157607f821691505b6020821081036119e4576119e361198a565b5b50919050565b7f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611a46602c836114a1565b9150611a51826119ea565b604082019050919050565b60006020820190508181036000830152611a7581611a39565b9050919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ad86021836114a1565b9150611ae382611a7c565b604082019050919050565b60006020820190508181036000830152611b0781611acb565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000602082015250565b6000611b6a6038836114a1565b9150611b7582611b0e565b604082019050919050565b60006020820190508181036000830152611b9981611b5d565b9050919050565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b6000611bfc6031836114a1565b9150611c0782611ba0565b604082019050919050565b60006020820190508181036000830152611c2b81611bef565b9050919050565b7f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008201527f656e7420746f6b656e0000000000000000000000000000000000000000000000602082015250565b6000611c8e6029836114a1565b9150611c9982611c32565b604082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000611d20602a836114a1565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b7f4552433732314d657461646174613a2055524920717565727920666f72206e6f60008201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000602082015250565b6000611db2602f836114a1565b9150611dbd82611d56565b604082019050919050565b60006020820190508181036000830152611de181611da5565b9050919050565b600081905092915050565b6000611dfe82611496565b611e088185611de8565b9350611e188185602086016114b2565b80840191505092915050565b6000611e308285611df3565b9150611e3c8284611df3565b91508190509392505050565b7f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008201527f697374656e7420746f6b656e0000000000000000000000000000000000000000602082015250565b6000611ea4602c836114a1565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f366025836114a1565b9150611f4182611eda565b604082019050919050565b60006020820190508181036000830152611f6581611f29565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fc86024836114a1565b9150611fd382611f6c565b604082019050919050565b60006020820190508181036000830152611ff781611fbb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061203882611551565b915061204383611551565b92508282101561205657612055611ffe565b5b828203905092915050565b600061206c82611551565b915061207783611551565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156120ac576120ab611ffe565b5b828201905092915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006120ed6019836114a1565b91506120f8826120b7565b602082019050919050565b6000602082019050818103600083015261211c816120e0565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b600061217f6032836114a1565b915061218a82612123565b604082019050919050565b600060208201905081810360008301526121ae81612172565b9050919050565b60006121c082611551565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121f2576121f1611ffe565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061223782611551565b915061224283611551565b925082612252576122516121fd565b5b828204905092915050565b600061226882611551565b915061227383611551565b925082612283576122826121fd565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006122e4826122bd565b6122ee81856122c8565b93506122fe8185602086016114b2565b612307816114e5565b840191505092915050565b600060808201905061232760008301876115e6565b61233460208301866115e6565b61234160408301856116fc565b818103606083015261235381846122d9565b905095945050505050565b60008151905061236d81611407565b92915050565b600060208284031215612389576123886113d1565b5b60006123978482850161235e565b9150509291505056fea2646970667358221220b0db5267c4f30b4fbde5b954a8fab56b3e318af1ce48b0bad6b5738fc27ddd9b64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x278D CODESIZE SUB DUP1 PUSH3 0x278D DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A7 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3A1 JUMPI PUSH3 0x3A0 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23D6 DUP1 PUSH3 0x3B7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x9F9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54F PUSH2 0xACF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x57E JUMPI POP PUSH2 0x57D DUP2 PUSH2 0x578 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C7 DUP4 DUP4 PUSH2 0xAD7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D7 PUSH2 0xACF JUMP JUMPDEST DUP3 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x627 DUP4 DUP4 DUP4 PUSH2 0xC6E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x647 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x85C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x764 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7C3 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x811 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x858 PUSH2 0x851 PUSH2 0xACF JUMP JUMPDEST DUP4 DUP4 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86D PUSH2 0x867 PUSH2 0xACF JUMP JUMPDEST DUP4 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1040 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C9 DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x95D JUMP JUMPDEST DUP1 PUSH2 0x93C DUP5 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x94D SWAP3 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4A DUP4 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9B DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD1 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP4 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC54 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC3C DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xC65 JUMPI POP PUSH2 0xC64 DUP2 DUP6 PUSH2 0x965 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8E DUP3 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5E DUP4 DUP4 DUP4 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x0 DUP3 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xECF DUP4 DUP4 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF39 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x104B DUP5 DUP5 DUP5 PUSH2 0xC6E JUMP JUMPDEST PUSH2 0x1057 DUP5 DUP5 DUP5 DUP5 PUSH2 0x121D JUMP JUMPDEST PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108D SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x10FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x120E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x112C JUMPI DUP1 DUP1 PUSH2 0x1115 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1148 JUMPI PUSH2 0x1147 PUSH2 0x179C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x117A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1207 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1193 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x11A2 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x228E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP5 POP PUSH2 0x117E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A4 JUMP JUMPDEST ISZERO PUSH2 0x1397 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1267 PUSH2 0xACF JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12C5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1347 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1336 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x139C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x13DB JUMP JUMPDEST DUP2 EQ PUSH2 0x141B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142D DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH2 0x1448 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1457 DUP5 DUP3 DUP6 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1475 DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1490 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1501 DUP3 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x150B DUP2 DUP6 PUSH2 0x14A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x151B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1549 DUP2 DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP2 EQ PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1581 DUP2 PUSH2 0x155B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP5 DUP3 DUP6 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DF DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EF DUP2 PUSH2 0x15D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x160A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1619 DUP2 PUSH2 0x15D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1636 DUP2 PUSH2 0x1610 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1661 DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1672 DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1695 JUMPI PUSH2 0x1694 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E5 JUMPI PUSH2 0x16E4 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1705 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1720 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172F DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP2 EQ PUSH2 0x173A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174C DUP2 PUSH2 0x1726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1788 DUP6 DUP3 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17D4 DUP3 PUSH2 0x14E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F2 PUSH2 0x179C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1812 DUP3 DUP3 PUSH2 0x17CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x179C JUMP JUMPDEST JUMPDEST PUSH2 0x183B DUP3 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186A PUSH2 0x1865 DUP5 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1886 JUMPI PUSH2 0x1885 PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH2 0x1891 DUP5 DUP3 DUP6 PUSH2 0x1848 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18AE JUMPI PUSH2 0x18AD PUSH2 0x1792 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18BE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18E1 JUMPI PUSH2 0x18E0 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18EF DUP8 DUP3 DUP9 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1900 DUP8 DUP3 DUP9 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1911 DUP8 DUP3 DUP9 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1932 JUMPI PUSH2 0x1931 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x193E DUP8 DUP3 DUP9 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1961 JUMPI PUSH2 0x1960 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x196F DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1980 DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x198A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A46 PUSH1 0x2C DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A51 DUP3 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A75 DUP2 PUSH2 0x1A39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 PUSH1 0x21 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE3 DUP3 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B07 DUP2 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6A PUSH1 0x38 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B75 DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B99 DUP2 PUSH2 0x1B5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFC PUSH1 0x31 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C07 DUP3 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C2B DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x29 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x2A DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 PUSH1 0x2F DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBD DUP3 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DFE DUP3 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x1E08 DUP2 DUP6 PUSH2 0x1DE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E18 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E30 DUP3 DUP6 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3C DUP3 DUP5 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x2C DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F36 PUSH1 0x25 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F41 DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F65 DUP2 PUSH2 0x1F29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC8 PUSH1 0x24 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD3 DUP3 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF7 DUP2 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2038 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2043 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206C DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2077 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED PUSH1 0x19 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F8 DUP3 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211C DUP2 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217F PUSH1 0x32 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x218A DUP3 PUSH2 0x2123 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21AE DUP2 PUSH2 0x2172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C0 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2237 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2242 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2252 JUMPI PUSH2 0x2251 PUSH2 0x21FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2268 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2283 JUMPI PUSH2 0x2282 PUSH2 0x21FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E4 DUP3 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x22EE DUP2 DUP6 PUSH2 0x22C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x22FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x2307 DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2327 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x2334 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x2341 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2353 DUP2 DUP5 PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x236D DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2389 JUMPI PUSH2 0x2388 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2397 DUP5 DUP3 DUP6 ADD PUSH2 0x235E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xDB MSTORE PUSH8 0xC4F30B4FBDE5B954 0xA8 STATICCALL 0xB5 PUSH12 0x3E318AF1CE48B0BAD6B5738F 0xC2 PUSH30 0xDD9B64736F6C634300080D00330000000000000000000000000000000000 ",
							"sourceMap": "563:13657:4:-:0;;;1325:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1399:5;1391;:13;;;;;;;;;;;;:::i;:::-;;1424:7;1414;:17;;;;;;;;;;;;:::i;:::-;;1325:113;;563:13657;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;563:13657:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1279": {
									"entryPoint": 4632,
									"id": 1279,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1163": {
									"entryPoint": 2775,
									"id": 1163,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_631": {
									"entryPoint": 4252,
									"id": 631,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1268": {
									"entryPoint": 4627,
									"id": 1268,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1257": {
									"entryPoint": 4637,
									"id": 1257,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_853": {
									"entryPoint": 2659,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_894": {
									"entryPoint": 2960,
									"id": 894,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_306": {
									"entryPoint": 2767,
									"id": 306,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_835": {
									"entryPoint": 4160,
									"id": 835,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1195": {
									"entryPoint": 3796,
									"id": 1195,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1139": {
									"entryPoint": 3182,
									"id": 1139,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_674": {
									"entryPoint": 1205,
									"id": 674,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_532": {
									"entryPoint": 1789,
									"id": 532,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_695": {
									"entryPoint": 1072,
									"id": 695,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_730": {
									"entryPoint": 2405,
									"id": 730,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_17": {
									"entryPoint": 5028,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_570": {
									"entryPoint": 926,
									"id": 570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_560": {
									"entryPoint": 1612,
									"id": 560,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_776": {
									"entryPoint": 1580,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_806": {
									"entryPoint": 2140,
									"id": 806,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_712": {
									"entryPoint": 2118,
									"id": 712,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_413": {
									"entryPoint": 2553,
									"id": 413,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_508": {
									"entryPoint": 700,
									"id": 508,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_580": {
									"entryPoint": 1972,
									"id": 580,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_2284": {
									"entryPoint": 4275,
									"id": 2284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_622": {
									"entryPoint": 2238,
									"id": 622,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_757": {
									"entryPoint": 1484,
									"id": 757,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7040,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 6167,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 6216,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6585,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 8629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8701,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6044,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6034,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 8375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c": {
									"entryPoint": 7752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d": {
									"entryPoint": 6926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba": {
									"entryPoint": 7364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397": {
									"entryPoint": 7218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27818:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:17"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:17",
														"type": ""
													}
												],
												"src": "7:75:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:17"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:17"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:17",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:17",
														"type": ""
													}
												],
												"src": "334:149:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:17"
															},
															"nodeType": "YulIf",
															"src": "541:62:17"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:17",
														"type": ""
													}
												],
												"src": "489:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:17",
														"type": ""
													}
												],
												"src": "615:137:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:17"
															},
															"nodeType": "YulIf",
															"src": "833:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:17",
														"type": ""
													}
												],
												"src": "758:327:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:17",
														"type": ""
													}
												],
												"src": "1091:90:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:17"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:17",
														"type": ""
													}
												],
												"src": "1187:109:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:17",
														"type": ""
													}
												],
												"src": "1302:210:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:17",
														"type": ""
													}
												],
												"src": "1518:99:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:17",
														"type": ""
													}
												],
												"src": "1623:169:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:258:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1857:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1866:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1861:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1926:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1951:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1956:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1947:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1970:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1975:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1960:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1940:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1940:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1940:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1887:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1884:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1884:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1898:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1909:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1905:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1905:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1900:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1880:3:17",
																"statements": []
															},
															"src": "1876:113:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2023:76:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2073:3:17"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2078:6:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2069:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2069:16:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2087:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2062:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2062:27:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2062:27:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2004:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2001:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2001:13:17"
															},
															"nodeType": "YulIf",
															"src": "1998:101:17"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1829:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1834:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1839:6:17",
														"type": ""
													}
												],
												"src": "1798:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2159:54:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2169:38:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2187:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2194:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:17",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:7:17"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:28:17"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:17"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2142:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2152:6:17",
														"type": ""
													}
												],
												"src": "2111:102:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2311:272:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2321:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2368:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2335:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2325:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2383:78:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2449:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2454:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2390:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:71:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2496:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2503:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2492:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2492:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2510:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2515:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2470:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2470:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2531:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2542:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2569:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2547:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2547:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2292:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2299:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2307:3:17",
														"type": ""
													}
												],
												"src": "2219:364:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:195:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2717:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2729:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2740:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2725:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2725:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2717:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2783:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2789:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2753:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2753:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2753:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2809:86:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2881:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2890:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2817:63:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:78:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2809:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2679:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2691:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2702:4:17",
														"type": ""
													}
												],
												"src": "2589:313:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2974:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2963:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2935:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2945:7:17",
														"type": ""
													}
												],
												"src": "2908:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3034:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3091:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3103:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3093:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3093:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3093:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3057:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3082:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3064:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3064:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3054:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:43:17"
															},
															"nodeType": "YulIf",
															"src": "3044:63:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3027:5:17",
														"type": ""
													}
												],
												"src": "2991:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3171:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3181:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3203:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3190:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3190:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3246:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3219:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3219:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3149:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3157:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3165:5:17",
														"type": ""
													}
												],
												"src": "3119:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3330:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3378:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3378:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3378:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3351:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3360:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3372:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3343:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3343:32:17"
															},
															"nodeType": "YulIf",
															"src": "3340:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3469:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3484:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3488:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3513:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3548:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3559:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3544:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3544:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3568:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3523:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3523:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3513:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3300:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3311:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3323:6:17",
														"type": ""
													}
												],
												"src": "3264:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3644:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3654:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3669:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3665:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3665:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3654:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3626:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3636:7:17",
														"type": ""
													}
												],
												"src": "3599:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3776:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3786:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3815:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3797:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3786:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3758:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3768:7:17",
														"type": ""
													}
												],
												"src": "3731:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3915:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3938:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3920:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3920:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3908:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3908:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3908:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3886:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:17",
														"type": ""
													}
												],
												"src": "3833:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4055:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4065:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4077:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4088:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4073:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4073:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4065:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4145:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4158:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4169:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4154:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4154:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4101:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4101:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4101:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4027:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4039:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4050:4:17",
														"type": ""
													}
												],
												"src": "3957:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4285:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4294:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4297:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4287:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4287:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4287:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4251:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4276:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4258:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4258:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4248:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:43:17"
															},
															"nodeType": "YulIf",
															"src": "4238:63:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4221:5:17",
														"type": ""
													}
												],
												"src": "4185:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4365:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4375:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4397:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4384:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4375:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4440:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4413:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4413:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4413:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4343:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4351:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4359:5:17",
														"type": ""
													}
												],
												"src": "4313:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4541:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4587:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4589:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4589:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4589:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4562:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4558:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4558:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4554:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:17"
															},
															"nodeType": "YulIf",
															"src": "4551:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "4680:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4695:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4709:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4699:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4724:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4759:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4770:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4755:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4755:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4779:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4734:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4734:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4724:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4807:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4822:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4826:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4852:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4887:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4898:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4883:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4883:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4907:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4862:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4862:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4852:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4503:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4514:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4526:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4534:6:17",
														"type": ""
													}
												],
												"src": "4458:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:519:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5084:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5086:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5086:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5086:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5059:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5068:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5055:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5055:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5080:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5051:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5051:32:17"
															},
															"nodeType": "YulIf",
															"src": "5048:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "5177:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5192:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5206:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5196:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5221:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5256:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5267:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5252:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5276:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5231:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5221:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5304:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5319:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5333:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5323:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5349:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5384:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5395:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5380:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5380:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5404:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5359:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5359:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5349:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5432:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5447:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5451:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5477:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5512:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5523:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5508:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5508:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5532:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5487:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5487:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5477:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4992:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5003:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5015:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5023:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5031:6:17",
														"type": ""
													}
												],
												"src": "4938:619:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5629:263:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5675:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5677:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5677:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5677:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5650:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5659:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5646:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5646:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5671:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5642:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5642:32:17"
															},
															"nodeType": "YulIf",
															"src": "5639:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "5768:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5783:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5787:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5812:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5847:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5858:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5843:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5843:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5867:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5822:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5822:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5812:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5599:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5610:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5622:6:17",
														"type": ""
													}
												],
												"src": "5563:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5963:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5980:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6003:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5985:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5985:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5973:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5951:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5958:3:17",
														"type": ""
													}
												],
												"src": "5898:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6120:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6130:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6142:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6153:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6138:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6130:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6210:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6223:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6234:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6219:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6219:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6166:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6166:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6166:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6092:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6104:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6115:4:17",
														"type": ""
													}
												],
												"src": "6022:222:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6290:76:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6344:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6353:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6356:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6346:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6346:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6313:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6335:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6320:14:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6320:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6310:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:40:17"
															},
															"nodeType": "YulIf",
															"src": "6300:60:17"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6283:5:17",
														"type": ""
													}
												],
												"src": "6250:116:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6421:84:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6431:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6453:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6440:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6440:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6431:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6493:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6469:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6469:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6469:30:17"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6399:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6407:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6415:5:17",
														"type": ""
													}
												],
												"src": "6372:133:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6591:388:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6637:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6639:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6639:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6639:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6612:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6621:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6608:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6633:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6604:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6604:32:17"
															},
															"nodeType": "YulIf",
															"src": "6601:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "6730:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6745:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6749:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6774:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6809:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6820:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6805:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6805:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6829:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6784:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6784:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6774:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6857:115:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6872:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6886:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6876:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6902:60:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6934:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6945:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6930:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6930:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6912:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:50:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6902:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6553:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6564:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6576:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6584:6:17",
														"type": ""
													}
												],
												"src": "6511:468:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7074:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7091:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7084:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7084:12:17"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6985:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7197:28:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7217:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7207:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7207:12:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7207:12:17"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7108:117:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7259:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7276:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7279:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7373:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7376:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7366:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7366:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7397:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7400:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7390:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7390:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7231:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7460:238:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7492:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7522:4:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7500:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7500:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7488:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7488:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7474:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7639:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7641:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7641:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7641:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7594:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7579:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7579:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7618:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7630:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7615:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7615:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7576:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7576:62:17"
															},
															"nodeType": "YulIf",
															"src": "7573:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7677:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7681:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7670:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:22:17"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7446:6:17",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7454:4:17",
														"type": ""
													}
												],
												"src": "7417:281:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7745:88:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7755:30:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7765:18:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7755:6:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7814:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7822:4:17"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7794:19:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7794:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7794:33:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7729:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7738:6:17",
														"type": ""
													}
												],
												"src": "7704:129:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7905:241:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8010:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8012:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8012:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8012:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7982:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7990:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7979:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7979:30:17"
															},
															"nodeType": "YulIf",
															"src": "7976:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8072:6:17"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8050:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8050:29:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8042:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8116:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8128:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8134:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8124:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8116:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7889:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7900:4:17",
														"type": ""
													}
												],
												"src": "7839:307:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8203:103:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:17"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8231:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8236:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8213:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8213:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8213:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8284:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8289:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8298:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8273:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:27:17"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8185:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8190:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8195:6:17",
														"type": ""
													}
												],
												"src": "8152:154:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8395:327:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8405:74:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8471:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8430:40:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8430:48:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8414:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8414:65:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8405:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8495:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8502:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8488:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8488:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8518:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8533:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8540:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8529:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:16:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8522:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8585:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8564:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8569:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8560:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8560:16:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8578:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8557:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:25:17"
															},
															"nodeType": "YulIf",
															"src": "8554:112:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8699:3:17"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8704:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8709:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8675:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8675:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8675:41:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8368:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8373:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8381:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8389:5:17",
														"type": ""
													}
												],
												"src": "8312:410:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8802:277:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8851:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8853:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8853:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8853:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8830:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8826:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8826:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8822:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8822:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8815:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8815:35:17"
															},
															"nodeType": "YulIf",
															"src": "8812:122:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8943:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8970:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8957:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8957:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8947:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8986:87:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9046:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9042:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9042:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9061:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9069:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8995:46:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8995:78:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8986:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8780:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8788:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8796:5:17",
														"type": ""
													}
												],
												"src": "8741:338:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:817:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9258:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9260:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9260:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9260:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9232:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9241:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9228:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9228:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9253:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9224:33:17"
															},
															"nodeType": "YulIf",
															"src": "9221:120:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "9351:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9366:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9370:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9395:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9430:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9441:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9426:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9426:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9450:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9405:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9405:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9395:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9478:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9493:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9507:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9497:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9523:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9558:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9569:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9554:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9554:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9578:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9533:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9523:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9606:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9621:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9635:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9625:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9651:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9686:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9697:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9682:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9682:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9706:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9661:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9661:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9651:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9734:287:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9749:46:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9780:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9776:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9776:18:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9763:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:32:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9753:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9842:83:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9844:77:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9844:79:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9844:79:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9814:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9822:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9811:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "9808:117:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9939:72:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9983:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9994:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9979:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9979:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10003:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9949:29:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9949:62:17"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9939:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9157:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9168:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9180:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9188:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9196:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9204:6:17",
														"type": ""
													}
												],
												"src": "9085:943:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10117:391:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10163:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10165:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10165:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10165:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10138:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10147:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10134:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10134:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10130:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10130:32:17"
															},
															"nodeType": "YulIf",
															"src": "10127:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "10256:117:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10271:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10285:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10275:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10300:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10335:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10346:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10331:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10331:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10355:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10310:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10310:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10300:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10383:118:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10398:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10412:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10402:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10428:63:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10463:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10474:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10459:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10459:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10483:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10438:20:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:53:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10428:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10079:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10090:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10102:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10110:6:17",
														"type": ""
													}
												],
												"src": "10034:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10542:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10559:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10552:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:4:17",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10673:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10673:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10673:15:17"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10514:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10751:269:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10761:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10775:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10781:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10771:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10771:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10761:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10792:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10822:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10828:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10818:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10818:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10796:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10869:51:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10883:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10897:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10905:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10893:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10893:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10883:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10849:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10842:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:26:17"
															},
															"nodeType": "YulIf",
															"src": "10839:81:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10972:42:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10986:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10986:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10986:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10936:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10959:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10967:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10956:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10933:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10933:38:17"
															},
															"nodeType": "YulIf",
															"src": "10930:84:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10735:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10744:6:17",
														"type": ""
													}
												],
												"src": "10700:320:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11132:125:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11154:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11162:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11150:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11150:14:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11166:34:17",
																		"type": "",
																		"value": "ERC721: approved query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11143:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11143:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11143:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11222:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11230:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11218:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11218:15:17"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11235:14:17",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11211:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11211:39:17"
														}
													]
												},
												"name": "store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11124:6:17",
														"type": ""
													}
												],
												"src": "11026:231:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11409:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11419:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11485:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11490:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11426:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11426:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11419:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11591:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																	"nodeType": "YulIdentifier",
																	"src": "11502:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11502:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11502:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11604:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11615:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11620:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11611:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11611:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11397:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11405:3:17",
														"type": ""
													}
												],
												"src": "11263:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11806:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11816:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11828:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11839:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11824:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11824:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11816:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11863:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11874:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11859:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11859:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11882:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11888:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11878:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11878:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11852:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11852:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11852:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11908:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12042:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11916:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11916:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11908:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11786:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11801:4:17",
														"type": ""
													}
												],
												"src": "11635:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12166:114:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12188:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12196:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12184:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12184:14:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12200:34:17",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12177:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12177:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12177:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12256:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12264:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12252:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12252:15:17"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12269:3:17",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12245:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12245:28:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12245:28:17"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12158:6:17",
														"type": ""
													}
												],
												"src": "12060:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12432:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12442:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12508:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12513:2:17",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12449:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12449:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12442:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12614:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nodeType": "YulIdentifier",
																	"src": "12525:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12525:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12525:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12627:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12638:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12643:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12634:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12634:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12627:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12420:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12428:3:17",
														"type": ""
													}
												],
												"src": "12286:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12829:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12839:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12851:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12862:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12847:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12847:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12839:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12886:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12897:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12882:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12882:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12905:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12911:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12901:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12901:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12875:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12875:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12875:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12931:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13065:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12939:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12939:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12931:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12809:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12824:4:17",
														"type": ""
													}
												],
												"src": "12658:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13189:137:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13211:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13219:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13207:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13207:14:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13223:34:17",
																		"type": "",
																		"value": "ERC721: approve caller is not ow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13200:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13200:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13200:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13279:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13287:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13275:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13275:15:17"
																	},
																	{
																		"hexValue": "6e6572206e6f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13292:26:17",
																		"type": "",
																		"value": "ner nor approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13268:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13268:51:17"
														}
													]
												},
												"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13181:6:17",
														"type": ""
													}
												],
												"src": "13083:243:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13478:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13488:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13554:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13559:2:17",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13495:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13495:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13488:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13660:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																	"nodeType": "YulIdentifier",
																	"src": "13571:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13571:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13571:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13673:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13684:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13689:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13680:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13680:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13673:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13466:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13474:3:17",
														"type": ""
													}
												],
												"src": "13332:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13875:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13885:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13897:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13908:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13893:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13893:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13885:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13932:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13943:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13928:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13928:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13951:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13957:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13947:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13947:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13921:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13921:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13921:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13977:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14111:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13985:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13985:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13977:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13855:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13870:4:17",
														"type": ""
													}
												],
												"src": "13704:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14235:130:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14257:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14265:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14253:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14253:14:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14269:34:17",
																		"type": "",
																		"value": "ERC721: transfer caller is not o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14246:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14246:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14246:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14325:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14333:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14321:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:15:17"
																	},
																	{
																		"hexValue": "776e6572206e6f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14338:19:17",
																		"type": "",
																		"value": "wner nor approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14314:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14314:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14314:44:17"
														}
													]
												},
												"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14227:6:17",
														"type": ""
													}
												],
												"src": "14129:236:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14517:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14527:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14593:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14598:2:17",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14534:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14534:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14527:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14699:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																	"nodeType": "YulIdentifier",
																	"src": "14610:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14610:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14610:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14712:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14723:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14728:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14719:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14719:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14712:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14505:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14513:3:17",
														"type": ""
													}
												],
												"src": "14371:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14914:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14924:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14936:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14947:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14932:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14932:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14924:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14971:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14982:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14967:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14967:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14990:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14996:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14986:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14986:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14960:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14960:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14960:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15016:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15150:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15024:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15016:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14894:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14909:4:17",
														"type": ""
													}
												],
												"src": "14743:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15274:122:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15296:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15304:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15292:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15292:14:17"
																	},
																	{
																		"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15308:34:17",
																		"type": "",
																		"value": "ERC721: owner query for nonexist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15285:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15285:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15285:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15364:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15372:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15360:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15360:15:17"
																	},
																	{
																		"hexValue": "656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15377:11:17",
																		"type": "",
																		"value": "ent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15353:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15353:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15353:36:17"
														}
													]
												},
												"name": "store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15266:6:17",
														"type": ""
													}
												],
												"src": "15168:228:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15548:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15558:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15624:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15629:2:17",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15565:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15565:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15558:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15730:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																	"nodeType": "YulIdentifier",
																	"src": "15641:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15641:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15641:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15743:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15754:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15759:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15750:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15750:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15743:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15536:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15544:3:17",
														"type": ""
													}
												],
												"src": "15402:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15945:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15955:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15967:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15978:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15963:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15963:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15955:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16002:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16013:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15998:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15998:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16021:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16027:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16017:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16017:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15991:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15991:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15991:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16047:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16181:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16055:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16055:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16047:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15925:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15940:4:17",
														"type": ""
													}
												],
												"src": "15774:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16305:123:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16327:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16335:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16323:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16323:14:17"
																	},
																	{
																		"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16339:34:17",
																		"type": "",
																		"value": "ERC721: balance query for the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16316:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16316:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16316:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16395:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16403:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16391:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16391:15:17"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16408:12:17",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16384:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16384:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16384:37:17"
														}
													]
												},
												"name": "store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16297:6:17",
														"type": ""
													}
												],
												"src": "16199:229:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16580:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16590:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16656:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16661:2:17",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16597:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16597:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16590:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16762:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																	"nodeType": "YulIdentifier",
																	"src": "16673:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16673:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16673:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16775:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16786:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16791:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16782:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16782:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16775:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16568:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16576:3:17",
														"type": ""
													}
												],
												"src": "16434:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16977:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16987:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16999:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17010:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16995:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16995:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16987:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17034:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17045:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17030:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17030:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17053:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17059:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17049:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17049:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17023:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17023:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17023:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17079:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17213:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17087:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17087:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17079:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16957:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16972:4:17",
														"type": ""
													}
												],
												"src": "16806:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17337:128:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17359:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17367:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17355:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17355:14:17"
																	},
																	{
																		"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17371:34:17",
																		"type": "",
																		"value": "ERC721Metadata: URI query for no"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17348:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17348:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17348:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17427:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17435:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17423:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17423:15:17"
																	},
																	{
																		"hexValue": "6e6578697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17440:17:17",
																		"type": "",
																		"value": "nexistent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17416:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17416:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17416:42:17"
														}
													]
												},
												"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17329:6:17",
														"type": ""
													}
												],
												"src": "17231:234:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17617:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17627:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17693:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17698:2:17",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17634:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17634:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17627:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17799:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																	"nodeType": "YulIdentifier",
																	"src": "17710:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17710:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17710:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17812:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17823:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17828:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17819:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17819:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17812:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17605:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17613:3:17",
														"type": ""
													}
												],
												"src": "17471:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18014:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18024:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18036:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18047:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18032:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18032:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18024:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18071:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18082:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18067:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18067:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18090:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18096:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18086:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18086:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18060:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18060:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18060:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18116:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18250:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18124:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18124:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18116:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17994:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18009:4:17",
														"type": ""
													}
												],
												"src": "17843:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18382:34:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18392:18:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "18407:3:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18392:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18354:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18359:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18370:11:17",
														"type": ""
													}
												],
												"src": "18268:148:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18532:267:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18542:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18589:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18556:32:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18556:39:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18546:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18604:96:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18688:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18693:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18611:76:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18611:89:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18604:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18735:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18742:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18731:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18749:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18754:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "18709:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18709:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18709:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18770:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18781:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18786:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18777:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18777:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18770:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18513:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18520:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18528:3:17",
														"type": ""
													}
												],
												"src": "18422:377:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18989:251:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19000:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19089:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19098:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19007:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19007:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19000:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19112:102:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19201:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19210:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19119:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19119:95:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19112:3:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19224:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "19231:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19224:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18960:3:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18966:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18974:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18985:3:17",
														"type": ""
													}
												],
												"src": "18805:435:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19352:125:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19374:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19382:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19370:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19370:14:17"
																	},
																	{
																		"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19386:34:17",
																		"type": "",
																		"value": "ERC721: operator query for nonex"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19363:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19363:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19363:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19442:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19450:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19438:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19438:15:17"
																	},
																	{
																		"hexValue": "697374656e7420746f6b656e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19455:14:17",
																		"type": "",
																		"value": "istent token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19431:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19431:39:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19431:39:17"
														}
													]
												},
												"name": "store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19344:6:17",
														"type": ""
													}
												],
												"src": "19246:231:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19629:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19639:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19705:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19710:2:17",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19646:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19646:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19639:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19811:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																	"nodeType": "YulIdentifier",
																	"src": "19722:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19722:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19722:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19824:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19835:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19840:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19831:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19831:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19824:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19617:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19625:3:17",
														"type": ""
													}
												],
												"src": "19483:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20026:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20036:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20048:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20059:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20044:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20044:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20036:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20083:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20094:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20079:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20079:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20102:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20108:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20098:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20098:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20072:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20072:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20072:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20128:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20262:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20136:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20136:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20128:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20006:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20021:4:17",
														"type": ""
													}
												],
												"src": "19855:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20386:118:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20408:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20416:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20404:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20404:14:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20420:34:17",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20397:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20397:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20397:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20476:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20484:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20472:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20472:15:17"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20489:7:17",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20465:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20465:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20465:32:17"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20378:6:17",
														"type": ""
													}
												],
												"src": "20280:224:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20656:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20666:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20732:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20737:2:17",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20673:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20673:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20666:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20838:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nodeType": "YulIdentifier",
																	"src": "20749:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20749:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20749:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20851:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20862:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20867:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20858:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20858:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20851:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20644:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20652:3:17",
														"type": ""
													}
												],
												"src": "20510:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21053:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21063:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21075:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21086:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21071:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21071:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21063:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21110:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21121:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21106:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21106:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21129:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21135:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21125:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21125:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21099:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21099:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21099:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21155:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21289:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21163:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21163:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21155:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21033:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21048:4:17",
														"type": ""
													}
												],
												"src": "20882:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21413:117:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21435:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21443:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21431:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21431:14:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21447:34:17",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21424:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21424:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21424:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21503:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21511:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21499:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21499:15:17"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21516:6:17",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21492:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21492:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21492:31:17"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21405:6:17",
														"type": ""
													}
												],
												"src": "21307:223:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21682:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21692:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21758:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21763:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21699:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21699:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21692:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21864:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nodeType": "YulIdentifier",
																	"src": "21775:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21775:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21775:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21877:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21888:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21893:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21884:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21884:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21877:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21670:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21678:3:17",
														"type": ""
													}
												],
												"src": "21536:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22079:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22089:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22101:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22112:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22097:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22097:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22089:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22136:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22147:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22132:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22132:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22155:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22161:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22151:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22151:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22125:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22125:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22125:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22181:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22315:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22189:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22189:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22181:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22059:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22074:4:17",
														"type": ""
													}
												],
												"src": "21908:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22361:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22378:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22381:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22371:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22371:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22371:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22475:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22478:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22468:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22468:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22468:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22499:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22502:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22492:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22492:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22492:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "22333:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22564:146:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22574:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22597:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22579:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22579:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22574:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22608:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22631:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22613:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22613:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22608:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22655:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22657:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22657:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22657:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22649:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22652:1:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22646:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22646:8:17"
															},
															"nodeType": "YulIf",
															"src": "22643:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22687:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22699:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22702:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22695:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22695:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22687:4:17"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22550:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22553:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22559:4:17",
														"type": ""
													}
												],
												"src": "22519:191:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22760:261:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22770:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22793:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22775:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22775:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "22770:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "22804:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22827:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22809:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22809:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "22804:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22967:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22969:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22969:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22969:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22888:1:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22895:66:17",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "22963:1:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:74:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22885:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22885:81:17"
															},
															"nodeType": "YulIf",
															"src": "22882:107:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22999:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23010:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23013:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23006:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23006:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "22999:3:17"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22747:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22750:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "22756:3:17",
														"type": ""
													}
												],
												"src": "22716:305:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23133:69:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23155:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23163:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23151:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23151:14:17"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23167:27:17",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23144:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23144:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23144:51:17"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23125:6:17",
														"type": ""
													}
												],
												"src": "23027:175:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23354:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23364:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23430:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23435:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23371:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23371:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23364:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23536:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nodeType": "YulIdentifier",
																	"src": "23447:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23447:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23447:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23549:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23560:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23565:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23556:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23556:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23549:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23342:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23350:3:17",
														"type": ""
													}
												],
												"src": "23208:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23751:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23761:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23773:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23784:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23769:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23769:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23761:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23808:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23819:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23804:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23804:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23827:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23833:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23823:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23823:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23797:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23797:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23797:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23853:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23987:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23861:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23861:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23853:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23731:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23746:4:17",
														"type": ""
													}
												],
												"src": "23580:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24111:131:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24133:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24141:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24129:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24129:14:17"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24145:34:17",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24122:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24122:58:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24122:58:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24201:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24209:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24197:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24197:15:17"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24214:20:17",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24190:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24190:45:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24190:45:17"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24103:6:17",
														"type": ""
													}
												],
												"src": "24005:237:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24394:220:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24404:74:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24470:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24475:2:17",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24411:58:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24411:67:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24404:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24576:3:17"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nodeType": "YulIdentifier",
																	"src": "24487:88:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24487:93:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24487:93:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24589:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24600:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24605:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24596:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24596:12:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24589:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24382:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24390:3:17",
														"type": ""
													}
												],
												"src": "24248:366:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24791:248:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24801:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24813:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24824:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24809:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24809:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24801:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24848:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24859:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24844:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24844:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24867:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24873:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24863:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24863:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24837:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24837:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24837:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24893:139:17",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25027:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24901:124:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24901:131:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24893:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24771:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24786:4:17",
														"type": ""
													}
												],
												"src": "24620:419:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25088:190:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25098:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25125:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25107:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25107:24:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "25098:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25221:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "25223:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25223:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25223:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25146:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25153:66:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "25143:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25143:77:17"
															},
															"nodeType": "YulIf",
															"src": "25140:103:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25252:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25263:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25270:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25259:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25259:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "25252:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25074:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "25084:3:17",
														"type": ""
													}
												],
												"src": "25045:233:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25312:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25329:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25332:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25322:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25322:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25322:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25426:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25429:4:17",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25419:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25419:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25419:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25450:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25453:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "25443:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25443:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25443:15:17"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "25284:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25512:143:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25522:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25545:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25527:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25527:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25522:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25556:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25579:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25561:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25561:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25556:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25603:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25605:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25605:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25605:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25600:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25593:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25593:9:17"
															},
															"nodeType": "YulIf",
															"src": "25590:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25635:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25644:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25647:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "25640:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25640:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25635:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25501:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25504:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25510:1:17",
														"type": ""
													}
												],
												"src": "25470:185:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25695:142:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25705:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25728:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25710:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25710:20:17"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "25705:1:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25739:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25762:1:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "25744:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25744:20:17"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "25739:1:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25786:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "25788:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25788:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25788:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25783:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25776:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25776:9:17"
															},
															"nodeType": "YulIf",
															"src": "25773:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25817:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "25826:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "25829:1:17"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "25822:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25822:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "25817:1:17"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "25684:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "25687:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "25693:1:17",
														"type": ""
													}
												],
												"src": "25661:176:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25871:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25888:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25891:77:17",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25881:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25881:88:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25881:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25985:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25988:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25978:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25978:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25978:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26009:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26012:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "26002:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26002:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26002:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "25843:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26087:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26098:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26114:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26108:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26108:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "26098:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26070:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26080:6:17",
														"type": ""
													}
												],
												"src": "26029:98:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26228:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26245:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26250:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26238:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26238:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26238:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26266:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26285:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26290:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26281:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26281:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "26266:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26200:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "26205:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "26216:11:17",
														"type": ""
													}
												],
												"src": "26133:168:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26397:270:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26407:52:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26453:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "26421:31:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26421:38:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "26411:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26468:77:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26533:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26538:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26475:57:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26475:70:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26468:3:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "26580:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26587:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26576:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26576:16:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26594:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "26599:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "26554:21:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26554:52:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26554:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26615:46:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26626:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "26653:6:17"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "26631:21:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26631:29:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26622:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26622:39:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26615:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "26378:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26385:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26393:3:17",
														"type": ""
													}
												],
												"src": "26307:360:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26873:440:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26883:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26895:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26906:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26891:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26891:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26883:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26964:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26977:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26988:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26973:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26973:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26920:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26920:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26920:71:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27045:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27058:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27069:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27054:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27054:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27001:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27001:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27001:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27127:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27140:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27151:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27136:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27136:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27083:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27083:72:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27083:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27176:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27187:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27172:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27172:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27196:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27202:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27192:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27192:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27165:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27165:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27165:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27222:84:17",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "27292:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27301:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27230:61:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27230:76:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27222:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26821:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "26833:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "26841:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26849:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26857:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26868:4:17",
														"type": ""
													}
												],
												"src": "26673:640:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27381:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27391:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "27406:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27400:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27400:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "27391:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "27448:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "27422:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27422:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27422:32:17"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "27359:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27367:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "27375:5:17",
														"type": ""
													}
												],
												"src": "27319:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27542:273:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "27588:83:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "27590:77:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27590:79:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27590:79:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27563:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27572:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27559:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27559:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27584:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "27555:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27555:32:17"
															},
															"nodeType": "YulIf",
															"src": "27552:119:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "27681:127:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "27696:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27710:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "27700:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "27725:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "27770:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "27781:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27766:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27766:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "27790:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "27735:30:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27735:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "27725:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27512:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "27523:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27535:6:17",
														"type": ""
													}
												],
												"src": "27466:349:17"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approved query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not ow\")\n\n        mstore(add(memPtr, 32), \"ner nor approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 56)\n        store_literal_in_memory_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer caller is not o\")\n\n        mstore(add(memPtr, 32), \"wner nor approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: owner query for nonexist\")\n\n        mstore(add(memPtr, 32), \"ent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: balance query for the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721Metadata: URI query for no\")\n\n        mstore(add(memPtr, 32), \"nexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: operator query for nonex\")\n\n        mstore(add(memPtr, 32), \"istent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 44)\n        store_literal_in_memory_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x4B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x167C JUMP JUMPDEST PUSH2 0x62C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x170B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x7B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x846 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x18C7 JUMP JUMPDEST PUSH2 0x85C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x8BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x152F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x9F9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x47A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x471 SWAP1 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C0 DUP3 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x527 SWAP1 PUSH2 0x1AEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x54F PUSH2 0xACF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x57E JUMPI POP PUSH2 0x57D DUP2 PUSH2 0x578 PUSH2 0xACF JUMP JUMPDEST PUSH2 0x965 JUMP JUMPDEST JUMPDEST PUSH2 0x5BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5B4 SWAP1 PUSH2 0x1B80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5C7 DUP4 DUP4 PUSH2 0xAD7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D7 PUSH2 0xACF JUMP JUMPDEST DUP3 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x613 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x627 DUP4 DUP4 DUP4 PUSH2 0xC6E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x647 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x85C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6EB SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x764 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7C3 SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7EF SWAP1 PUSH2 0x19B9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x83C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x811 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x83C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x81F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x858 PUSH2 0x851 PUSH2 0xACF JUMP JUMPDEST DUP4 DUP4 PUSH2 0xED4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x86D PUSH2 0x867 PUSH2 0xACF JUMP JUMPDEST DUP4 PUSH2 0xB90 JUMP JUMPDEST PUSH2 0x8AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A3 SWAP1 PUSH2 0x1C12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B8 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1040 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8C9 DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP1 PUSH2 0x1DC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x912 PUSH2 0x109C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x932 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x95D JUMP JUMPDEST DUP1 PUSH2 0x93C DUP5 PUSH2 0x10B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x94D SWAP3 SWAP2 SWAP1 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB4A DUP4 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB9B DUP3 PUSH2 0xA63 JUMP JUMPDEST PUSH2 0xBDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD1 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE5 DUP4 PUSH2 0x64C JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xC54 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC3C DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0xC65 JUMPI POP PUSH2 0xC64 DUP2 DUP6 PUSH2 0x965 JUMP JUMPDEST JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC8E DUP3 PUSH2 0x64C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDB SWAP1 PUSH2 0x1F4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x1FDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD5E DUP4 DUP4 DUP4 PUSH2 0x1213 JUMP JUMPDEST PUSH2 0xD69 PUSH1 0x0 DUP3 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDB9 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE10 SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xECF DUP4 DUP4 DUP4 PUSH2 0x1218 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF39 SWAP1 PUSH2 0x2103 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1033 SWAP2 SWAP1 PUSH2 0x147B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x104B DUP5 DUP5 DUP5 PUSH2 0xC6E JUMP JUMPDEST PUSH2 0x1057 DUP5 DUP5 DUP5 DUP5 PUSH2 0x121D JUMP JUMPDEST PUSH2 0x1096 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x108D SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SUB PUSH2 0x10FA JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP SWAP1 POP PUSH2 0x120E JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP3 EQ PUSH2 0x112C JUMPI DUP1 DUP1 PUSH2 0x1115 SWAP1 PUSH2 0x21B5 JUMP JUMPDEST SWAP2 POP POP PUSH1 0xA DUP3 PUSH2 0x1125 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP2 POP PUSH2 0x1102 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1148 JUMPI PUSH2 0x1147 PUSH2 0x179C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x117A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST PUSH1 0x0 DUP6 EQ PUSH2 0x1207 JUMPI PUSH1 0x1 DUP3 PUSH2 0x1193 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST SWAP2 POP PUSH1 0xA DUP6 PUSH2 0x11A2 SWAP2 SWAP1 PUSH2 0x225D JUMP JUMPDEST PUSH1 0x30 PUSH2 0x11AE SWAP2 SWAP1 PUSH2 0x2061 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x11C4 JUMPI PUSH2 0x11C3 PUSH2 0x228E JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP6 PUSH2 0x1200 SWAP2 SWAP1 PUSH2 0x222C JUMP JUMPDEST SWAP5 POP PUSH2 0x117E JUMP JUMPDEST DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x123E DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13A4 JUMP JUMPDEST ISZERO PUSH2 0x1397 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1267 PUSH2 0xACF JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1289 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12C5 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C2 SWAP2 SWAP1 PUSH2 0x2373 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1347 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12FA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1336 SWAP1 PUSH2 0x2195 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x139C JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x13DB JUMP JUMPDEST DUP2 EQ PUSH2 0x141B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142D DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1449 JUMPI PUSH2 0x1448 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1457 DUP5 DUP3 DUP6 ADD PUSH2 0x141E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1475 DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1490 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x146C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14D0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x14B5 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1501 DUP3 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x150B DUP2 DUP6 PUSH2 0x14A1 JUMP JUMPDEST SWAP4 POP PUSH2 0x151B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x1524 DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1549 DUP2 DUP5 PUSH2 0x14F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1564 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP2 EQ PUSH2 0x156F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1581 DUP2 PUSH2 0x155B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x159D JUMPI PUSH2 0x159C PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15AB DUP5 DUP3 DUP6 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DF DUP3 PUSH2 0x15B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15EF DUP2 PUSH2 0x15D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x160A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x15E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1619 DUP2 PUSH2 0x15D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1624 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1636 DUP2 PUSH2 0x1610 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1653 JUMPI PUSH2 0x1652 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1661 DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1672 DUP6 DUP3 DUP7 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1695 JUMPI PUSH2 0x1694 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A3 DUP7 DUP3 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16C5 DUP7 DUP3 DUP8 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E5 JUMPI PUSH2 0x16E4 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16F3 DUP5 DUP3 DUP6 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1705 DUP2 PUSH2 0x1551 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1720 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x172F DUP2 PUSH2 0x1460 JUMP JUMPDEST DUP2 EQ PUSH2 0x173A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174C DUP2 PUSH2 0x1726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1769 JUMPI PUSH2 0x1768 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1777 DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1788 DUP6 DUP3 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x17D4 DUP3 PUSH2 0x14E5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x17F3 JUMPI PUSH2 0x17F2 PUSH2 0x179C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1806 PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1812 DUP3 DUP3 PUSH2 0x17CB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x179C JUMP JUMPDEST JUMPDEST PUSH2 0x183B DUP3 PUSH2 0x14E5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x186A PUSH2 0x1865 DUP5 PUSH2 0x1817 JUMP JUMPDEST PUSH2 0x17FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1886 JUMPI PUSH2 0x1885 PUSH2 0x1797 JUMP JUMPDEST JUMPDEST PUSH2 0x1891 DUP5 DUP3 DUP6 PUSH2 0x1848 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x18AE JUMPI PUSH2 0x18AD PUSH2 0x1792 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x18BE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1857 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x18E1 JUMPI PUSH2 0x18E0 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18EF DUP8 DUP3 DUP9 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1900 DUP8 DUP3 DUP9 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1911 DUP8 DUP3 DUP9 ADD PUSH2 0x1572 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1932 JUMPI PUSH2 0x1931 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x193E DUP8 DUP3 DUP9 ADD PUSH2 0x1899 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1961 JUMPI PUSH2 0x1960 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x196F DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1980 DUP6 DUP3 DUP7 ADD PUSH2 0x1627 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x19D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x19E4 JUMPI PUSH2 0x19E3 PUSH2 0x198A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A46 PUSH1 0x2C DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A51 DUP3 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A75 DUP2 PUSH2 0x1A39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD8 PUSH1 0x21 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AE3 DUP3 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B07 DUP2 PUSH2 0x1ACB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B6A PUSH1 0x38 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B75 DUP3 PUSH2 0x1B0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B99 DUP2 PUSH2 0x1B5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x776E6572206E6F7220617070726F766564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BFC PUSH1 0x31 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C07 DUP3 PUSH2 0x1BA0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C2B DUP2 PUSH2 0x1BEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E7420746F6B656E0000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x29 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C32 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x2A DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6578697374656E7420746F6B656E0000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 PUSH1 0x2F DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBD DUP3 PUSH2 0x1D56 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DE1 DUP2 PUSH2 0x1DA5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DFE DUP3 PUSH2 0x1496 JUMP JUMPDEST PUSH2 0x1E08 DUP2 DUP6 PUSH2 0x1DE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E18 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B2 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E30 DUP3 DUP6 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3C DUP3 DUP5 PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x697374656E7420746F6B656E0000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x2C DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F36 PUSH1 0x25 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F41 DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F65 DUP2 PUSH2 0x1F29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FC8 PUSH1 0x24 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD3 DUP3 PUSH2 0x1F6C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FF7 DUP2 PUSH2 0x1FBB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2038 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2043 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2056 JUMPI PUSH2 0x2055 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x206C DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2077 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x20AC JUMPI PUSH2 0x20AB PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20ED PUSH1 0x19 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x20F8 DUP3 PUSH2 0x20B7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x211C DUP2 PUSH2 0x20E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217F PUSH1 0x32 DUP4 PUSH2 0x14A1 JUMP JUMPDEST SWAP2 POP PUSH2 0x218A DUP3 PUSH2 0x2123 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21AE DUP2 PUSH2 0x2172 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21C0 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x21F2 JUMPI PUSH2 0x21F1 PUSH2 0x1FFE JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2237 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2242 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2252 JUMPI PUSH2 0x2251 PUSH2 0x21FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2268 DUP3 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x2273 DUP4 PUSH2 0x1551 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2283 JUMPI PUSH2 0x2282 PUSH2 0x21FD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E4 DUP3 PUSH2 0x22BD JUMP JUMPDEST PUSH2 0x22EE DUP2 DUP6 PUSH2 0x22C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x22FE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x2307 DUP2 PUSH2 0x14E5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2327 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x2334 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0x2341 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x16FC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2353 DUP2 DUP5 PUSH2 0x22D9 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x236D DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2389 JUMPI PUSH2 0x2388 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2397 DUP5 DUP3 DUP6 ADD PUSH2 0x235E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB0 0xDB MSTORE PUSH8 0xC4F30B4FBDE5B954 0xA8 STATICCALL 0xB5 PUSH12 0x3E318AF1CE48B0BAD6B5738F 0xC2 PUSH30 0xDD9B64736F6C634300080D00330000000000000000000000000000000000 ",
							"sourceMap": "563:13657:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1505:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2423:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3934:217;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3472:401;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4661:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5057:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2126:235;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1864:205;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2585:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4218:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5302:320;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2753:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4437:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1505:300;1607:4;1657:25;1642:40;;;:11;:40;;;;:104;;;;1713:33;1698:48;;;:11;:48;;;;1642:104;:156;;;;1762:36;1786:11;1762:23;:36::i;:::-;1642:156;1623:175;;1505:300;;;:::o;2423:98::-;2477:13;2509:5;2502:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2423:98;:::o;3934:217::-;4010:7;4037:16;4045:7;4037;:16::i;:::-;4029:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;4120:15;:24;4136:7;4120:24;;;;;;;;;;;;;;;;;;;;;4113:31;;3934:217;;;:::o;3472:401::-;3552:13;3568:23;3583:7;3568:14;:23::i;:::-;3552:39;;3615:5;3609:11;;:2;:11;;;3601:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3706:5;3690:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3715:37;3732:5;3739:12;:10;:12::i;:::-;3715:16;:37::i;:::-;3690:62;3669:165;;;;;;;;;;;;:::i;:::-;;;;;;;;;3845:21;3854:2;3858:7;3845:8;:21::i;:::-;3542:331;3472:401;;:::o;4661:330::-;4850:41;4869:12;:10;:12::i;:::-;4883:7;4850:18;:41::i;:::-;4842:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;4956:28;4966:4;4972:2;4976:7;4956:9;:28::i;:::-;4661:330;;;:::o;5057:179::-;5190:39;5207:4;5213:2;5217:7;5190:39;;;;;;;;;;;;:16;:39::i;:::-;5057:179;;;:::o;2126:235::-;2198:7;2217:13;2233:7;:16;2241:7;2233:16;;;;;;;;;;;;;;;;;;;;;2217:32;;2284:1;2267:19;;:5;:19;;;2259:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2349:5;2342:12;;;2126:235;;;:::o;1864:205::-;1936:7;1980:1;1963:19;;:5;:19;;;1955:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;2046:9;:16;2056:5;2046:16;;;;;;;;;;;;;;;;2039:23;;1864:205;;;:::o;2585:102::-;2641:13;2673:7;2666:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2585:102;:::o;4218:153::-;4312:52;4331:12;:10;:12::i;:::-;4345:8;4355;4312:18;:52::i;:::-;4218:153;;:::o;5302:320::-;5471:41;5490:12;:10;:12::i;:::-;5504:7;5471:18;:41::i;:::-;5463:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;5576:39;5590:4;5596:2;5600:7;5609:5;5576:13;:39::i;:::-;5302:320;;;;:::o;2753:329::-;2826:13;2859:16;2867:7;2859;:16::i;:::-;2851:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2938:21;2962:10;:8;:10::i;:::-;2938:34;;3013:1;2995:7;2989:21;:25;:86;;;;;;;;;;;;;;;;;3041:7;3050:18;:7;:16;:18::i;:::-;3024:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2989:86;2982:93;;;2753:329;;;:::o;4437:162::-;4534:4;4557:18;:25;4576:5;4557:25;;;;;;;;;;;;;;;:35;4583:8;4557:35;;;;;;;;;;;;;;;;;;;;;;;;;4550:42;;4437:162;;;;:::o;829:155:3:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7094:125:4:-;7159:4;7210:1;7182:30;;:7;:16;7190:7;7182:16;;;;;;;;;;;;;;;;;;;;;:30;;;;7175:37;;7094:125;;;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;11103:171:4:-;11204:2;11177:15;:24;11193:7;11177:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11259:7;11255:2;11221:46;;11230:23;11245:7;11230:14;:23::i;:::-;11221:46;;;;;;;;;;;;11103:171;;:::o;7377:344::-;7470:4;7494:16;7502:7;7494;:16::i;:::-;7486:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;7569:13;7585:23;7600:7;7585:14;:23::i;:::-;7569:39;;7637:5;7626:16;;:7;:16;;;:51;;;;7670:7;7646:31;;:20;7658:7;7646:11;:20::i;:::-;:31;;;7626:51;:87;;;;7681:32;7698:5;7705:7;7681:16;:32::i;:::-;7626:87;7618:96;;;7377:344;;;;:::o;10387:605::-;10541:4;10514:31;;:23;10529:7;10514:14;:23::i;:::-;:31;;;10506:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;10619:1;10605:16;;:2;:16;;;10597:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10673:39;10694:4;10700:2;10704:7;10673:20;:39::i;:::-;10774:29;10791:1;10795:7;10774:8;:29::i;:::-;10833:1;10814:9;:15;10824:4;10814:15;;;;;;;;;;;;;;;;:20;;;;;;;:::i;:::-;;;;;;;;10861:1;10844:9;:13;10854:2;10844:13;;;;;;;;;;;;;;;;:18;;;;;;;:::i;:::-;;;;;;;;10891:2;10872:7;:16;10880:7;10872:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;10928:7;10924:2;10909:27;;10918:4;10909:27;;;;;;;;;;;;10947:38;10967:4;10973:2;10977:7;10947:19;:38::i;:::-;10387:605;;;:::o;11409:307::-;11559:8;11550:17;;:5;:17;;;11542:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11645:8;11607:18;:25;11626:5;11607:25;;;;;;;;;;;;;;;:35;11633:8;11607:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11690:8;11668:41;;11683:5;11668:41;;;11700:8;11668:41;;;;;;:::i;:::-;;;;;;;;11409:307;;;:::o;6484:::-;6635:28;6645:4;6651:2;6655:7;6635:9;:28::i;:::-;6681:48;6704:4;6710:2;6714:7;6723:5;6681:22;:48::i;:::-;6673:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;6484:307;;;;:::o;3323:92::-;3374:13;3399:9;;;;;;;;;;;;;;3323:92;:::o;328:703:16:-;384:13;610:1;601:5;:10;597:51;;627:10;;;;;;;;;;;;;;;;;;;;;597:51;657:12;672:5;657:20;;687:14;711:75;726:1;718:4;:9;711:75;;743:8;;;;;:::i;:::-;;;;773:2;765:10;;;;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;795:39;;844:150;860:1;851:5;:10;844:150;;887:1;877:11;;;;;:::i;:::-;;;953:2;945:5;:10;;;;:::i;:::-;932:2;:24;;;;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;;:56;;;;;;;;;;;981:2;972:11;;;;;:::i;:::-;;;844:150;;;1017:6;1003:21;;;;;328:703;;;;:::o;13603:122:4:-;;;;:::o;14097:121::-;;;;:::o;12269:778::-;12419:4;12439:15;:2;:13;;;:15::i;:::-;12435:606;;;12490:2;12474:36;;;12511:12;:10;:12::i;:::-;12525:4;12531:7;12540:5;12474:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12470:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12730:1;12713:6;:13;:18;12709:266;;12755:60;;;;;;;;;;:::i;:::-;;;;;;;;12709:266;12927:6;12921:13;12912:6;12908:2;12904:15;12897:38;12470:519;12606:41;;;12596:51;;;:6;:51;;;;12589:58;;;;;12435:606;13026:4;13019:11;;12269:778;;;;;;;:::o;1175:320:0:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:231::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:14;11230:2;11222:6;11218:15;11211:39;11026:231;:::o;11263:366::-;11405:3;11426:67;11490:2;11485:3;11426:67;:::i;:::-;11419:74;;11502:93;11591:3;11502:93;:::i;:::-;11620:2;11615:3;11611:12;11604:19;;11263:366;;;:::o;11635:419::-;11801:4;11839:2;11828:9;11824:18;11816:26;;11888:9;11882:4;11878:20;11874:1;11863:9;11859:17;11852:47;11916:131;12042:4;11916:131;:::i;:::-;11908:139;;11635:419;;;:::o;12060:220::-;12200:34;12196:1;12188:6;12184:14;12177:58;12269:3;12264:2;12256:6;12252:15;12245:28;12060:220;:::o;12286:366::-;12428:3;12449:67;12513:2;12508:3;12449:67;:::i;:::-;12442:74;;12525:93;12614:3;12525:93;:::i;:::-;12643:2;12638:3;12634:12;12627:19;;12286:366;;;:::o;12658:419::-;12824:4;12862:2;12851:9;12847:18;12839:26;;12911:9;12905:4;12901:20;12897:1;12886:9;12882:17;12875:47;12939:131;13065:4;12939:131;:::i;:::-;12931:139;;12658:419;;;:::o;13083:243::-;13223:34;13219:1;13211:6;13207:14;13200:58;13292:26;13287:2;13279:6;13275:15;13268:51;13083:243;:::o;13332:366::-;13474:3;13495:67;13559:2;13554:3;13495:67;:::i;:::-;13488:74;;13571:93;13660:3;13571:93;:::i;:::-;13689:2;13684:3;13680:12;13673:19;;13332:366;;;:::o;13704:419::-;13870:4;13908:2;13897:9;13893:18;13885:26;;13957:9;13951:4;13947:20;13943:1;13932:9;13928:17;13921:47;13985:131;14111:4;13985:131;:::i;:::-;13977:139;;13704:419;;;:::o;14129:236::-;14269:34;14265:1;14257:6;14253:14;14246:58;14338:19;14333:2;14325:6;14321:15;14314:44;14129:236;:::o;14371:366::-;14513:3;14534:67;14598:2;14593:3;14534:67;:::i;:::-;14527:74;;14610:93;14699:3;14610:93;:::i;:::-;14728:2;14723:3;14719:12;14712:19;;14371:366;;;:::o;14743:419::-;14909:4;14947:2;14936:9;14932:18;14924:26;;14996:9;14990:4;14986:20;14982:1;14971:9;14967:17;14960:47;15024:131;15150:4;15024:131;:::i;:::-;15016:139;;14743:419;;;:::o;15168:228::-;15308:34;15304:1;15296:6;15292:14;15285:58;15377:11;15372:2;15364:6;15360:15;15353:36;15168:228;:::o;15402:366::-;15544:3;15565:67;15629:2;15624:3;15565:67;:::i;:::-;15558:74;;15641:93;15730:3;15641:93;:::i;:::-;15759:2;15754:3;15750:12;15743:19;;15402:366;;;:::o;15774:419::-;15940:4;15978:2;15967:9;15963:18;15955:26;;16027:9;16021:4;16017:20;16013:1;16002:9;15998:17;15991:47;16055:131;16181:4;16055:131;:::i;:::-;16047:139;;15774:419;;;:::o;16199:229::-;16339:34;16335:1;16327:6;16323:14;16316:58;16408:12;16403:2;16395:6;16391:15;16384:37;16199:229;:::o;16434:366::-;16576:3;16597:67;16661:2;16656:3;16597:67;:::i;:::-;16590:74;;16673:93;16762:3;16673:93;:::i;:::-;16791:2;16786:3;16782:12;16775:19;;16434:366;;;:::o;16806:419::-;16972:4;17010:2;16999:9;16995:18;16987:26;;17059:9;17053:4;17049:20;17045:1;17034:9;17030:17;17023:47;17087:131;17213:4;17087:131;:::i;:::-;17079:139;;16806:419;;;:::o;17231:234::-;17371:34;17367:1;17359:6;17355:14;17348:58;17440:17;17435:2;17427:6;17423:15;17416:42;17231:234;:::o;17471:366::-;17613:3;17634:67;17698:2;17693:3;17634:67;:::i;:::-;17627:74;;17710:93;17799:3;17710:93;:::i;:::-;17828:2;17823:3;17819:12;17812:19;;17471:366;;;:::o;17843:419::-;18009:4;18047:2;18036:9;18032:18;18024:26;;18096:9;18090:4;18086:20;18082:1;18071:9;18067:17;18060:47;18124:131;18250:4;18124:131;:::i;:::-;18116:139;;17843:419;;;:::o;18268:148::-;18370:11;18407:3;18392:18;;18268:148;;;;:::o;18422:377::-;18528:3;18556:39;18589:5;18556:39;:::i;:::-;18611:89;18693:6;18688:3;18611:89;:::i;:::-;18604:96;;18709:52;18754:6;18749:3;18742:4;18735:5;18731:16;18709:52;:::i;:::-;18786:6;18781:3;18777:16;18770:23;;18532:267;18422:377;;;;:::o;18805:435::-;18985:3;19007:95;19098:3;19089:6;19007:95;:::i;:::-;19000:102;;19119:95;19210:3;19201:6;19119:95;:::i;:::-;19112:102;;19231:3;19224:10;;18805:435;;;;;:::o;19246:231::-;19386:34;19382:1;19374:6;19370:14;19363:58;19455:14;19450:2;19442:6;19438:15;19431:39;19246:231;:::o;19483:366::-;19625:3;19646:67;19710:2;19705:3;19646:67;:::i;:::-;19639:74;;19722:93;19811:3;19722:93;:::i;:::-;19840:2;19835:3;19831:12;19824:19;;19483:366;;;:::o;19855:419::-;20021:4;20059:2;20048:9;20044:18;20036:26;;20108:9;20102:4;20098:20;20094:1;20083:9;20079:17;20072:47;20136:131;20262:4;20136:131;:::i;:::-;20128:139;;19855:419;;;:::o;20280:224::-;20420:34;20416:1;20408:6;20404:14;20397:58;20489:7;20484:2;20476:6;20472:15;20465:32;20280:224;:::o;20510:366::-;20652:3;20673:67;20737:2;20732:3;20673:67;:::i;:::-;20666:74;;20749:93;20838:3;20749:93;:::i;:::-;20867:2;20862:3;20858:12;20851:19;;20510:366;;;:::o;20882:419::-;21048:4;21086:2;21075:9;21071:18;21063:26;;21135:9;21129:4;21125:20;21121:1;21110:9;21106:17;21099:47;21163:131;21289:4;21163:131;:::i;:::-;21155:139;;20882:419;;;:::o;21307:223::-;21447:34;21443:1;21435:6;21431:14;21424:58;21516:6;21511:2;21503:6;21499:15;21492:31;21307:223;:::o;21536:366::-;21678:3;21699:67;21763:2;21758:3;21699:67;:::i;:::-;21692:74;;21775:93;21864:3;21775:93;:::i;:::-;21893:2;21888:3;21884:12;21877:19;;21536:366;;;:::o;21908:419::-;22074:4;22112:2;22101:9;22097:18;22089:26;;22161:9;22155:4;22151:20;22147:1;22136:9;22132:17;22125:47;22189:131;22315:4;22189:131;:::i;:::-;22181:139;;21908:419;;;:::o;22333:180::-;22381:77;22378:1;22371:88;22478:4;22475:1;22468:15;22502:4;22499:1;22492:15;22519:191;22559:4;22579:20;22597:1;22579:20;:::i;:::-;22574:25;;22613:20;22631:1;22613:20;:::i;:::-;22608:25;;22652:1;22649;22646:8;22643:34;;;22657:18;;:::i;:::-;22643:34;22702:1;22699;22695:9;22687:17;;22519:191;;;;:::o;22716:305::-;22756:3;22775:20;22793:1;22775:20;:::i;:::-;22770:25;;22809:20;22827:1;22809:20;:::i;:::-;22804:25;;22963:1;22895:66;22891:74;22888:1;22885:81;22882:107;;;22969:18;;:::i;:::-;22882:107;23013:1;23010;23006:9;22999:16;;22716:305;;;;:::o;23027:175::-;23167:27;23163:1;23155:6;23151:14;23144:51;23027:175;:::o;23208:366::-;23350:3;23371:67;23435:2;23430:3;23371:67;:::i;:::-;23364:74;;23447:93;23536:3;23447:93;:::i;:::-;23565:2;23560:3;23556:12;23549:19;;23208:366;;;:::o;23580:419::-;23746:4;23784:2;23773:9;23769:18;23761:26;;23833:9;23827:4;23823:20;23819:1;23808:9;23804:17;23797:47;23861:131;23987:4;23861:131;:::i;:::-;23853:139;;23580:419;;;:::o;24005:237::-;24145:34;24141:1;24133:6;24129:14;24122:58;24214:20;24209:2;24201:6;24197:15;24190:45;24005:237;:::o;24248:366::-;24390:3;24411:67;24475:2;24470:3;24411:67;:::i;:::-;24404:74;;24487:93;24576:3;24487:93;:::i;:::-;24605:2;24600:3;24596:12;24589:19;;24248:366;;;:::o;24620:419::-;24786:4;24824:2;24813:9;24809:18;24801:26;;24873:9;24867:4;24863:20;24859:1;24848:9;24844:17;24837:47;24901:131;25027:4;24901:131;:::i;:::-;24893:139;;24620:419;;;:::o;25045:233::-;25084:3;25107:24;25125:5;25107:24;:::i;:::-;25098:33;;25153:66;25146:5;25143:77;25140:103;;25223:18;;:::i;:::-;25140:103;25270:1;25263:5;25259:13;25252:20;;25045:233;;;:::o;25284:180::-;25332:77;25329:1;25322:88;25429:4;25426:1;25419:15;25453:4;25450:1;25443:15;25470:185;25510:1;25527:20;25545:1;25527:20;:::i;:::-;25522:25;;25561:20;25579:1;25561:20;:::i;:::-;25556:25;;25600:1;25590:35;;25605:18;;:::i;:::-;25590:35;25647:1;25644;25640:9;25635:14;;25470:185;;;;:::o;25661:176::-;25693:1;25710:20;25728:1;25710:20;:::i;:::-;25705:25;;25744:20;25762:1;25744:20;:::i;:::-;25739:25;;25783:1;25773:35;;25788:18;;:::i;:::-;25773:35;25829:1;25826;25822:9;25817:14;;25661:176;;;;:::o;25843:180::-;25891:77;25888:1;25881:88;25988:4;25985:1;25978:15;26012:4;26009:1;26002:15;26029:98;26080:6;26114:5;26108:12;26098:22;;26029:98;;;:::o;26133:168::-;26216:11;26250:6;26245:3;26238:19;26290:4;26285:3;26281:14;26266:29;;26133:168;;;;:::o;26307:360::-;26393:3;26421:38;26453:5;26421:38;:::i;:::-;26475:70;26538:6;26533:3;26475:70;:::i;:::-;26468:77;;26554:52;26599:6;26594:3;26587:4;26580:5;26576:16;26554:52;:::i;:::-;26631:29;26653:6;26631:29;:::i;:::-;26626:3;26622:39;26615:46;;26397:270;26307:360;;;;:::o;26673:640::-;26868:4;26906:3;26895:9;26891:19;26883:27;;26920:71;26988:1;26977:9;26973:17;26964:6;26920:71;:::i;:::-;27001:72;27069:2;27058:9;27054:18;27045:6;27001:72;:::i;:::-;27083;27151:2;27140:9;27136:18;27127:6;27083:72;:::i;:::-;27202:9;27196:4;27192:20;27187:2;27176:9;27172:18;27165:48;27230:76;27301:4;27292:6;27230:76;:::i;:::-;27222:84;;26673:640;;;;;;;:::o;27319:141::-;27375:5;27406:6;27400:13;27391:22;;27422:32;27448:5;27422:32;:::i;:::-;27319:141;;;;:::o;27466:349::-;27535:6;27584:2;27572:9;27563:7;27559:23;27555:32;27552:119;;;27590:79;;:::i;:::-;27552:119;27710:1;27735:63;27790:7;27781:6;27770:9;27766:22;27735:63;:::i;:::-;27725:73;;27681:127;27466:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1834800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2921",
								"getApproved(uint256)": "5205",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "2997",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "774",
								"symbol()": "infinite",
								"tokenURI(uint256)": "3395",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,uint256)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "2269",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1399,
									"end": 1404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1396,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1391,
									"end": 1404,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1424,
									"end": 1431,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1421,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1414,
									"end": 1431,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1325,
									"end": 1438,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "21"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "28"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 17,
									"value": "52"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "26"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 17,
									"value": "53"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "tag",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1678,
									"end": 1679,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1702,
									"end": 1708,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1699,
									"end": 1700,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1696,
									"end": 1709,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1787,
									"end": 1788,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1782,
									"end": 1785,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1778,
									"end": 1789,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1772,
									"end": 1790,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1768,
									"end": 1769,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1763,
									"end": 1766,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1759,
									"end": 1770,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1752,
									"end": 1791,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1724,
									"end": 1726,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1721,
									"end": 1722,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1717,
									"end": 1727,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1712,
									"end": 1727,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "tag",
									"source": 17,
									"value": "57"
								},
								{
									"begin": 1688,
									"end": 1801,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1819,
									"end": 1825,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1816,
									"end": 1817,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1813,
									"end": 1826,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1899,
									"end": 1900,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1890,
									"end": 1896,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 1881,
									"end": 1897,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1874,
									"end": 1901,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 1810,
									"end": 1911,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1659,
									"end": 1917,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1610,
									"end": 1917,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 2095,
									"end": 2101,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "30"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "tag",
									"source": 17,
									"value": "61"
								},
								{
									"begin": 2053,
									"end": 2102,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "tag",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 2037,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2028,
									"end": 2103,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2126,
									"end": 2132,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2119,
									"end": 2124,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2112,
									"end": 2133,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2164,
									"end": 2168,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2157,
									"end": 2162,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2153,
									"end": 2169,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2202,
									"end": 2205,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2193,
									"end": 2199,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2188,
									"end": 2191,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2181,
									"end": 2206,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "tag",
									"source": 17,
									"value": "63"
								},
								{
									"begin": 2209,
									"end": 2288,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "tag",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 2178,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2326,
									"end": 2329,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2321,
									"end": 2324,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "31"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "tag",
									"source": 17,
									"value": "64"
								},
								{
									"begin": 2299,
									"end": 2338,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2018,
									"end": 2344,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1923,
									"end": 2344,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "tag",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2431,
									"end": 2436,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2473,
									"end": 2477,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2465,
									"end": 2471,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2461,
									"end": 2478,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2457,
									"end": 2484,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 2488,
									"end": 2567,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 2447,
									"end": 2569,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2598,
									"end": 2604,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2592,
									"end": 2605,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 2709,
									"end": 2712,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 2701,
									"end": 2707,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2694,
									"end": 2698,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2686,
									"end": 2692,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 2682,
									"end": 2699,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "tag",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 2623,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2614,
									"end": 2713,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2437,
									"end": 2719,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2364,
									"end": 2719,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2824,
									"end": 2830,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2838,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2881,
									"end": 2883,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 2869,
									"end": 2878,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 2860,
									"end": 2867,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2856,
									"end": 2879,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 2852,
									"end": 2884,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "tag",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 2887,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 2849,
									"end": 2968,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3028,
									"end": 3029,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3017,
									"end": 3026,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3013,
									"end": 3030,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3007,
									"end": 3031,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3058,
									"end": 3076,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3050,
									"end": 3056,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3047,
									"end": 3077,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "tag",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 3080,
									"end": 3159,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "tag",
									"source": 17,
									"value": "72"
								},
								{
									"begin": 3044,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 3251,
									"end": 3258,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3242,
									"end": 3248,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3231,
									"end": 3240,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3227,
									"end": 3249,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "tag",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 3185,
									"end": 3259,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 3175,
									"end": 3259,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2978,
									"end": 3269,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3329,
									"end": 3331,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3318,
									"end": 3327,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3314,
									"end": 3332,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3308,
									"end": 3333,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 3360,
									"end": 3378,
									"name": "PUSH",
									"source": 17,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3352,
									"end": 3358,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3349,
									"end": 3379,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "tag",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 3382,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "tag",
									"source": 17,
									"value": "75"
								},
								{
									"begin": 3346,
									"end": 3463,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 3553,
									"end": 3560,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3544,
									"end": 3550,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3533,
									"end": 3542,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3529,
									"end": 3551,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "33"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "tag",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 3487,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3477,
									"end": 3561,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3279,
									"end": 3571,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2725,
									"end": 3578,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 3584,
									"end": 3764,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3632,
									"end": 3709,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3629,
									"end": 3630,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3710,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 3726,
									"end": 3727,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 3719,
									"end": 3734,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 3753,
									"end": 3757,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 3750,
									"end": 3751,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3758,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "tag",
									"source": 17,
									"value": "11"
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3814,
									"end": 3820,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3852,
									"name": "PUSH",
									"source": 17,
									"value": "2"
								},
								{
									"begin": 3845,
									"end": 3849,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3841,
									"end": 3853,
									"name": "DIV",
									"source": 17
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3831,
									"end": 3853,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3898,
									"end": 3899,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3888,
									"end": 3900,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3919,
									"end": 3937,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3975,
									"end": 3979,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 3967,
									"end": 3973,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3963,
									"end": 3980,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3953,
									"end": 3980,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "tag",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 3909,
									"end": 3990,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4037,
									"end": 4039,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 4029,
									"end": 4035,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4026,
									"end": 4040,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4003,
									"end": 4041,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMP",
									"source": 17,
									"value": "[in]"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "tag",
									"source": 17,
									"value": "82"
								},
								{
									"begin": 4056,
									"end": 4074,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "tag",
									"source": 17,
									"value": "81"
								},
								{
									"begin": 4000,
									"end": 4084,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3821,
									"end": 4090,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3770,
									"end": 4090,
									"name": "JUMP",
									"source": 17,
									"value": "[out]"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 14220,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b0db5267c4f30b4fbde5b954a8fab56b3e318af1ce48b0bad6b5738fc27ddd9b64736f6c634300080d0033",
									".code": [
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "A22CB465"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "B88D4FDE"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "C87B56DD"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "E985E9C5"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A7"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "81812FC"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "42842E0E"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 563,
											"end": 14220,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1607,
											"end": 1611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1682,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1746,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1642,
											"end": 1746,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1746,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1746,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1642,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1798,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1642,
											"end": 1798,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1786,
											"end": 1797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1762,
											"end": 1798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1762,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1762,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1798,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1642,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1805,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2490,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2502,
											"end": 2514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2423,
											"end": 2521,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4010,
											"end": 4017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4037,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4037,
											"end": 4053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4037,
											"end": 4053,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4037,
											"end": 4053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4029,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4120,
											"end": 4144,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4144,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4113,
											"end": 4144,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3934,
											"end": 4151,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3583,
											"end": 3590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3568,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3620,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3611,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3620,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3620,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3601,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3706,
											"end": 3711,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3690,
											"end": 3700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3690,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3711,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3690,
											"end": 3752,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3732,
											"end": 3737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3739,
											"end": 3749,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3739,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3715,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3715,
											"end": 3752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3715,
											"end": 3752,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3715,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3690,
											"end": 3752,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3690,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3669,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3854,
											"end": 3856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 3845,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3542,
											"end": 3873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3472,
											"end": 3873,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4869,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4869,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4883,
											"end": 4890,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 4850,
											"end": 4891,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4850,
											"end": 4891,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4850,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4842,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4956,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4966,
											"end": 4970,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4972,
											"end": 4974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 4983,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4956,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 4956,
											"end": 4984,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4956,
											"end": 4984,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 4956,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4661,
											"end": 4991,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5207,
											"end": 5211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5215,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5190,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5057,
											"end": 5236,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2198,
											"end": 2205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2248,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2259,
											"end": 2332,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2126,
											"end": 2361,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1936,
											"end": 1943,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1968,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1982,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1955,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2056,
											"end": 2061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2046,
											"end": 2062,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2039,
											"end": 2062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 2069,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2641,
											"end": 2654,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2673,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2666,
											"end": 2680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2585,
											"end": 2687,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4331,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4331,
											"end": 4341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 4331,
											"end": 4343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4331,
											"end": 4343,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4331,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4345,
											"end": 4353,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4355,
											"end": 4363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 4312,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4371,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5490,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 5490,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5471,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5471,
											"end": 5512,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5512,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 5471,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 5463,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5590,
											"end": 5594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5596,
											"end": 5598,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5600,
											"end": 5607,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5576,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5576,
											"end": 5615,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5576,
											"end": 5615,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 5576,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5302,
											"end": 5622,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2839,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2867,
											"end": 2874,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2851,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2962,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2962,
											"end": 2972,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2962,
											"end": 2972,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2962,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 2972,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3013,
											"end": 3014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3002,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3014,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3050,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2989,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3075,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3075,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3075,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 3082,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4575,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4576,
											"end": 4581,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4582,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4583,
											"end": 4591,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4557,
											"end": 4592,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4550,
											"end": 4592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4550,
											"end": 4592,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4599,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7094,
											"end": 7219,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7094,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7159,
											"end": 7163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7210,
											"end": 7211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7212,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7212,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7189,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7197,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7212,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7182,
											"end": 7212,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7212,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7182,
											"end": 7212,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7175,
											"end": 7212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7175,
											"end": 7212,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7219,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7219,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7094,
											"end": 7219,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11103,
											"end": 11274,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 11103,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11204,
											"end": 11206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11192,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11193,
											"end": 11200,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11201,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11255,
											"end": 11257,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11230,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11245,
											"end": 11252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11230,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11230,
											"end": 11253,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11230,
											"end": 11253,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11230,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11267,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11274,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7470,
											"end": 7474,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7494,
											"end": 7510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7502,
											"end": 7509,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7494,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 7494,
											"end": 7510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7494,
											"end": 7510,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7494,
											"end": 7510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7486,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7569,
											"end": 7582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7600,
											"end": 7607,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7585,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 7585,
											"end": 7608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7569,
											"end": 7608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7569,
											"end": 7608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7637,
											"end": 7642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7633,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7642,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7626,
											"end": 7677,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7677,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7677,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7677,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7658,
											"end": 7665,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 7646,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7677,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7646,
											"end": 7677,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7646,
											"end": 7677,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7677,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 7626,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7713,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7626,
											"end": 7713,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7698,
											"end": 7703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7705,
											"end": 7712,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7681,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 7681,
											"end": 7713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7681,
											"end": 7713,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7681,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7626,
											"end": 7713,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 7626,
											"end": 7713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7618,
											"end": 7714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7618,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7618,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7377,
											"end": 7721,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10387,
											"end": 10992,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 10387,
											"end": 10992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10545,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10514,
											"end": 10545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 10529,
											"end": 10536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10528,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 10514,
											"end": 10537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10545,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10514,
											"end": 10545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10545,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 10506,
											"end": 10587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10619,
											"end": 10620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10605,
											"end": 10607,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10605,
											"end": 10621,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 10597,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10673,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10694,
											"end": 10698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10700,
											"end": 10702,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10704,
											"end": 10711,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10673,
											"end": 10693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 10673,
											"end": 10712,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10673,
											"end": 10712,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10673,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10774,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10795,
											"end": 10802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10774,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 10774,
											"end": 10803,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10774,
											"end": 10803,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10774,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10833,
											"end": 10834,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10824,
											"end": 10828,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10861,
											"end": 10862,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10844,
											"end": 10853,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10854,
											"end": 10856,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10857,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 10893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10879,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10880,
											"end": 10887,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10888,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10872,
											"end": 10893,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10928,
											"end": 10935,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10918,
											"end": 10922,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10909,
											"end": 10936,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10967,
											"end": 10971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10973,
											"end": 10975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10977,
											"end": 10984,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10947,
											"end": 10966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 10947,
											"end": 10985,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10947,
											"end": 10985,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10947,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10992,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10387,
											"end": 10992,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11409,
											"end": 11716,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 11409,
											"end": 11716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11559,
											"end": 11567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11550,
											"end": 11567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11550,
											"end": 11555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11550,
											"end": 11567,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11550,
											"end": 11567,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11550,
											"end": 11567,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 11542,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11645,
											"end": 11653,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11625,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11631,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11633,
											"end": 11641,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11642,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11607,
											"end": 11653,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11690,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11683,
											"end": 11688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 11700,
											"end": 11708,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11668,
											"end": 11709,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11716,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11716,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6635,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6645,
											"end": 6649,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6651,
											"end": 6653,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6655,
											"end": 6662,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6635,
											"end": 6644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6635,
											"end": 6663,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6635,
											"end": 6663,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 6635,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6704,
											"end": 6708,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6710,
											"end": 6712,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6714,
											"end": 6721,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6723,
											"end": 6728,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6681,
											"end": 6703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6681,
											"end": 6729,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6681,
											"end": 6729,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 6681,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6673,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6791,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3323,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3323,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3374,
											"end": 3387,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3399,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3415,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 16,
											"value": "154"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 384,
											"end": 397,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 606,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 601,
											"end": 611,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 597,
											"end": 648,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH",
											"source": 16,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 627,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 597,
											"end": 648,
											"name": "tag",
											"source": 16,
											"value": "204"
										},
										{
											"begin": 597,
											"end": 648,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 657,
											"end": 669,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 657,
											"end": 677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 657,
											"end": 677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 687,
											"end": 701,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 726,
											"end": 727,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 722,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 718,
											"end": 727,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "208"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "tag",
											"source": 16,
											"value": "207"
										},
										{
											"begin": 743,
											"end": 751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 743,
											"end": 751,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 773,
											"end": 775,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 765,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "tag",
											"source": 16,
											"value": "209"
										},
										{
											"begin": 765,
											"end": 775,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 765,
											"end": 775,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 765,
											"end": 775,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "205"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 786,
											"name": "tag",
											"source": 16,
											"value": "206"
										},
										{
											"begin": 711,
											"end": 786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 795,
											"end": 814,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "213"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 16,
											"value": "211"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "tag",
											"source": 16,
											"value": "214"
										},
										{
											"begin": 817,
											"end": 834,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 817,
											"end": 834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 795,
											"end": 834,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 795,
											"end": 834,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 860,
											"end": 861,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 851,
											"end": 861,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 887,
											"end": 888,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 877,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "185"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "tag",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 877,
											"end": 888,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 953,
											"end": 955,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 945,
											"end": 955,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 945,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "219"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "tag",
											"source": 16,
											"value": "218"
										},
										{
											"begin": 945,
											"end": 955,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 932,
											"end": 956,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 932,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "187"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "tag",
											"source": 16,
											"value": "220"
										},
										{
											"begin": 932,
											"end": 956,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 919,
											"end": 958,
											"name": "PUSH",
											"source": 16,
											"value": "F8"
										},
										{
											"begin": 919,
											"end": 958,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 902,
											"end": 908,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 909,
											"end": 915,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "tag",
											"source": 16,
											"value": "221"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 902,
											"end": 916,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 958,
											"name": "BYTE",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "MSTORE8",
											"source": 16
										},
										{
											"begin": 902,
											"end": 958,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 981,
											"end": 983,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 972,
											"end": 983,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "210"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "tag",
											"source": 16,
											"value": "224"
										},
										{
											"begin": 972,
											"end": 983,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 972,
											"end": 983,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 972,
											"end": 983,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 844,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "215"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 844,
											"end": 994,
											"name": "tag",
											"source": 16,
											"value": "216"
										},
										{
											"begin": 844,
											"end": 994,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1003,
											"end": 1024,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "tag",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 328,
											"end": 1031,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 13603,
											"end": 13725,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 13603,
											"end": 13725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13603,
											"end": 13725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13603,
											"end": 13725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13603,
											"end": 13725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13603,
											"end": 13725,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14097,
											"end": 14218,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 14097,
											"end": 14218,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14097,
											"end": 14218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14097,
											"end": 14218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14097,
											"end": 14218,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14097,
											"end": 14218,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12439,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 12439,
											"end": 12441,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12439,
											"end": 12452,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12439,
											"end": 12452,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12439,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 12439,
											"end": 12454,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12439,
											"end": 12454,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 12439,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12435,
											"end": 13041,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12435,
											"end": 13041,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 12435,
											"end": 13041,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12490,
											"end": 12492,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12510,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12474,
											"end": 12510,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12510,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 12511,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 12511,
											"end": 12523,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12511,
											"end": 12523,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 12511,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12525,
											"end": 12529,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12531,
											"end": 12538,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12540,
											"end": 12545,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 12474,
											"end": 12546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12730,
											"end": 12731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12719,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12713,
											"end": 12726,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12713,
											"end": 12731,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12709,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 12709,
											"end": 12975,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12755,
											"end": 12815,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12709,
											"end": 12975,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 12709,
											"end": 12975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12927,
											"end": 12933,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12921,
											"end": 12934,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12912,
											"end": 12918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12908,
											"end": 12910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12904,
											"end": 12919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12897,
											"end": 12935,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 12470,
											"end": 12989,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12606,
											"end": 12647,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 12606,
											"end": 12647,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 12606,
											"end": 12647,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12602,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12647,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 12589,
											"end": 12647,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12589,
											"end": 12647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12589,
											"end": 12647,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12589,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 12589,
											"end": 12647,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12435,
											"end": 13041,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 12435,
											"end": 13041,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13026,
											"end": 13030,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 13019,
											"end": 13030,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13019,
											"end": 13030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12269,
											"end": 13047,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "252"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 17,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 17,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 17,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "254"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 17,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "tag",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1867,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1887,
											"end": 1888,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1975,
											"end": 1976,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1970,
											"end": 1973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1966,
											"end": 1977,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1956,
											"end": 1957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1947,
											"end": 1958,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1940,
											"end": 1979,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1905,
											"end": 1915,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "336"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "tag",
											"source": 17,
											"value": "338"
										},
										{
											"begin": 1876,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2007,
											"end": 2013,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2004,
											"end": 2005,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2001,
											"end": 2014,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2087,
											"end": 2088,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2073,
											"end": 2076,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2069,
											"end": 2085,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2062,
											"end": 2089,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "tag",
											"source": 17,
											"value": "339"
										},
										{
											"begin": 1998,
											"end": 2099,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1847,
											"end": 2105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1798,
											"end": 2105,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2187,
											"end": 2192,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2183,
											"end": 2197,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2179,
											"end": 2207,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2169,
											"end": 2207,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2213,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "tag",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 2368,
											"end": 2373,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "tag",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 2335,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2449,
											"end": 2452,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 2390,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2383,
											"end": 2461,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 2515,
											"end": 2521,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2503,
											"end": 2507,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2496,
											"end": 2501,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "tag",
											"source": 17,
											"value": "344"
										},
										{
											"begin": 2470,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "tag",
											"source": 17,
											"value": "345"
										},
										{
											"begin": 2547,
											"end": 2576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2542,
											"end": 2545,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2538,
											"end": 2577,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2531,
											"end": 2577,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2311,
											"end": 2583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2219,
											"end": 2583,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2702,
											"end": 2706,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2740,
											"end": 2742,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2729,
											"end": 2738,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2725,
											"end": 2743,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2717,
											"end": 2743,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2783,
											"end": 2787,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2779,
											"end": 2799,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2753,
											"end": 2800,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 2890,
											"end": 2894,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2881,
											"end": 2887,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "261"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "tag",
											"source": 17,
											"value": "347"
										},
										{
											"begin": 2817,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2809,
											"end": 2895,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2589,
											"end": 2902,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 2979,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2963,
											"end": 2979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2908,
											"end": 2985,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 3082,
											"end": 3087,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 3064,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3057,
											"end": 3062,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3089,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3103,
											"end": 3104,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3093,
											"end": 3105,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "tag",
											"source": 17,
											"value": "351"
										},
										{
											"begin": 3044,
											"end": 3107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2991,
											"end": 3113,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3165,
											"end": 3170,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3209,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3190,
											"end": 3210,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3181,
											"end": 3210,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 3246,
											"end": 3251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 3219,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3119,
											"end": 3258,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3372,
											"end": 3374,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3369,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3351,
											"end": 3358,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3347,
											"end": 3370,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 3378,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "tag",
											"source": 17,
											"value": "355"
										},
										{
											"begin": 3340,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 3568,
											"end": 3575,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3544,
											"end": 3566,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "tag",
											"source": 17,
											"value": "357"
										},
										{
											"begin": 3523,
											"end": 3576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3513,
											"end": 3576,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3469,
											"end": 3586,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3264,
											"end": 3593,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3718,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3665,
											"end": 3719,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3654,
											"end": 3719,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3599,
											"end": 3725,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "tag",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3775,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 3815,
											"end": 3820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "tag",
											"source": 17,
											"value": "360"
										},
										{
											"begin": 3797,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3786,
											"end": 3821,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3731,
											"end": 3827,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "tag",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 3938,
											"end": 3943,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "tag",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 3920,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3908,
											"end": 3945,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3833,
											"end": 3951,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4050,
											"end": 4054,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4088,
											"end": 4090,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4077,
											"end": 4086,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4073,
											"end": 4091,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4065,
											"end": 4091,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4167,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4171,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4145,
											"end": 4151,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "tag",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 4101,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3957,
											"end": 4179,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "tag",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 4276,
											"end": 4281,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "266"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "tag",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 4258,
											"end": 4282,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4251,
											"end": 4256,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4248,
											"end": 4283,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4297,
											"end": 4298,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4287,
											"end": 4299,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "tag",
											"source": 17,
											"value": "367"
										},
										{
											"begin": 4238,
											"end": 4301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4185,
											"end": 4307,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4359,
											"end": 4364,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4384,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4375,
											"end": 4404,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 4440,
											"end": 4445,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "268"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "tag",
											"source": 17,
											"value": "369"
										},
										{
											"begin": 4413,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4313,
											"end": 4452,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4526,
											"end": 4532,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4540,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4571,
											"end": 4580,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4558,
											"end": 4581,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4554,
											"end": 4586,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "tag",
											"source": 17,
											"value": "372"
										},
										{
											"begin": 4589,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "tag",
											"source": 17,
											"value": "371"
										},
										{
											"begin": 4551,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 4779,
											"end": 4786,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4770,
											"end": 4776,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4768,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4755,
											"end": 4777,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "tag",
											"source": 17,
											"value": "373"
										},
										{
											"begin": 4734,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4724,
											"end": 4787,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4680,
											"end": 4797,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4836,
											"end": 4838,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 4907,
											"end": 4914,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4887,
											"end": 4896,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4883,
											"end": 4905,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "tag",
											"source": 17,
											"value": "374"
										},
										{
											"begin": 4862,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4852,
											"end": 4915,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4807,
											"end": 4925,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4932,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "tag",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5015,
											"end": 5021,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5029,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5031,
											"end": 5037,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5080,
											"end": 5082,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5068,
											"end": 5077,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5055,
											"end": 5078,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5051,
											"end": 5083,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "tag",
											"source": 17,
											"value": "377"
										},
										{
											"begin": 5086,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "tag",
											"source": 17,
											"value": "376"
										},
										{
											"begin": 5048,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5206,
											"end": 5207,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 5276,
											"end": 5283,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5267,
											"end": 5273,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5252,
											"end": 5274,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "tag",
											"source": 17,
											"value": "378"
										},
										{
											"begin": 5231,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5221,
											"end": 5284,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5221,
											"end": 5284,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5177,
											"end": 5294,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5333,
											"end": 5335,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 5404,
											"end": 5411,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5384,
											"end": 5393,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5380,
											"end": 5402,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "tag",
											"source": 17,
											"value": "379"
										},
										{
											"begin": 5359,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5349,
											"end": 5412,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5349,
											"end": 5412,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5304,
											"end": 5422,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5461,
											"end": 5463,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 5532,
											"end": 5539,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5523,
											"end": 5529,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5512,
											"end": 5521,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5508,
											"end": 5530,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "tag",
											"source": 17,
											"value": "380"
										},
										{
											"begin": 5487,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5540,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5540,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5432,
											"end": 5550,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 5557,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5622,
											"end": 5628,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5671,
											"end": 5673,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5659,
											"end": 5668,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5650,
											"end": 5657,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5646,
											"end": 5669,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5642,
											"end": 5674,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "tag",
											"source": 17,
											"value": "383"
										},
										{
											"begin": 5677,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "tag",
											"source": 17,
											"value": "382"
										},
										{
											"begin": 5639,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5797,
											"end": 5798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 5867,
											"end": 5874,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5858,
											"end": 5864,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5847,
											"end": 5856,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5843,
											"end": 5865,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "tag",
											"source": 17,
											"value": "384"
										},
										{
											"begin": 5822,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5875,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5812,
											"end": 5875,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5768,
											"end": 5885,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5563,
											"end": 5892,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "tag",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 6003,
											"end": 6008,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "tag",
											"source": 17,
											"value": "386"
										},
										{
											"begin": 5985,
											"end": 6009,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5980,
											"end": 5983,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5973,
											"end": 6010,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 6016,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6153,
											"end": 6155,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6142,
											"end": 6151,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6138,
											"end": 6156,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6130,
											"end": 6156,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6130,
											"end": 6156,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 6234,
											"end": 6235,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6223,
											"end": 6232,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6219,
											"end": 6236,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "tag",
											"source": 17,
											"value": "388"
										},
										{
											"begin": 6166,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6022,
											"end": 6244,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "tag",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 6335,
											"end": 6340,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "255"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "tag",
											"source": 17,
											"value": "390"
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6313,
											"end": 6318,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6310,
											"end": 6342,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6356,
											"end": 6357,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6353,
											"end": 6354,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6346,
											"end": 6358,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "tag",
											"source": 17,
											"value": "391"
										},
										{
											"begin": 6300,
											"end": 6360,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6250,
											"end": 6366,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "tag",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6415,
											"end": 6420,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6453,
											"end": 6459,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6440,
											"end": 6460,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6431,
											"end": 6460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 6493,
											"end": 6498,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "271"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "tag",
											"source": 17,
											"value": "393"
										},
										{
											"begin": 6469,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6372,
											"end": 6505,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6576,
											"end": 6582,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6621,
											"end": 6630,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6612,
											"end": 6619,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6608,
											"end": 6631,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6604,
											"end": 6636,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "tag",
											"source": 17,
											"value": "396"
										},
										{
											"begin": 6639,
											"end": 6718,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "tag",
											"source": 17,
											"value": "395"
										},
										{
											"begin": 6601,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6759,
											"end": 6760,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 6829,
											"end": 6836,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6809,
											"end": 6818,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6805,
											"end": 6827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "tag",
											"source": 17,
											"value": "397"
										},
										{
											"begin": 6784,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6774,
											"end": 6837,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6730,
											"end": 6847,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6886,
											"end": 6888,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6934,
											"end": 6943,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6930,
											"end": 6952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "272"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "tag",
											"source": 17,
											"value": "398"
										},
										{
											"begin": 6912,
											"end": 6962,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6902,
											"end": 6962,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6857,
											"end": 6972,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6511,
											"end": 6979,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "tag",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 6985,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7094,
											"end": 7095,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7084,
											"end": 7096,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 7108,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7217,
											"end": 7218,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7215,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7207,
											"end": 7219,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "tag",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 7231,
											"end": 7411,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7279,
											"end": 7356,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7357,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7376,
											"end": 7380,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 7373,
											"end": 7374,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 7366,
											"end": 7381,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7400,
											"end": 7404,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7405,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "tag",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 7522,
											"end": 7526,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "tag",
											"source": 17,
											"value": "403"
										},
										{
											"begin": 7500,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7492,
											"end": 7498,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7488,
											"end": 7528,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7630,
											"end": 7636,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7618,
											"end": 7628,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7615,
											"end": 7637,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7594,
											"end": 7612,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7592,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7579,
											"end": 7613,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7576,
											"end": 7638,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "tag",
											"source": 17,
											"value": "405"
										},
										{
											"begin": 7641,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "tag",
											"source": 17,
											"value": "404"
										},
										{
											"begin": 7573,
											"end": 7661,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7681,
											"end": 7691,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7677,
											"end": 7679,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7460,
											"end": 7698,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7417,
											"end": 7698,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7738,
											"end": 7744,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "249"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 17,
											"value": "407"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7755,
											"end": 7785,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 7822,
											"end": 7826,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7814,
											"end": 7820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "275"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 7794,
											"end": 7827,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7704,
											"end": 7833,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "tag",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7979,
											"end": 8009,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "213"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "tag",
											"source": 17,
											"value": "411"
										},
										{
											"begin": 8012,
											"end": 8030,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "tag",
											"source": 17,
											"value": "410"
										},
										{
											"begin": 7976,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 8050,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8042,
											"end": 8079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8134,
											"end": 8138,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8124,
											"end": 8139,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8116,
											"end": 8139,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7839,
											"end": 8146,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8236,
											"end": 8242,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8231,
											"end": 8234,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8213,
											"end": 8243,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 8298,
											"end": 8299,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8284,
											"end": 8287,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8280,
											"end": 8296,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8273,
											"end": 8300,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8152,
											"end": 8306,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "tag",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8389,
											"end": 8394,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 8471,
											"end": 8477,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "277"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "tag",
											"source": 17,
											"value": "416"
										},
										{
											"begin": 8430,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "tag",
											"source": 17,
											"value": "415"
										},
										{
											"begin": 8414,
											"end": 8479,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8405,
											"end": 8479,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8502,
											"end": 8508,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8488,
											"end": 8509,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8540,
											"end": 8544,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8533,
											"end": 8538,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8529,
											"end": 8545,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8578,
											"end": 8581,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8569,
											"end": 8575,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8564,
											"end": 8567,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8560,
											"end": 8576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8557,
											"end": 8582,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "tag",
											"source": 17,
											"value": "418"
										},
										{
											"begin": 8585,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "tag",
											"source": 17,
											"value": "417"
										},
										{
											"begin": 8554,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8704,
											"end": 8707,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "tag",
											"source": 17,
											"value": "419"
										},
										{
											"begin": 8675,
											"end": 8716,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8395,
											"end": 8722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8312,
											"end": 8722,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8796,
											"end": 8801,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8838,
											"end": 8842,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 8830,
											"end": 8836,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 8826,
											"end": 8843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8822,
											"end": 8849,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "tag",
											"source": 17,
											"value": "422"
										},
										{
											"begin": 8853,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "tag",
											"source": 17,
											"value": "421"
										},
										{
											"begin": 8812,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8970,
											"end": 8976,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8957,
											"end": 8977,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 9069,
											"end": 9072,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9061,
											"end": 9067,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9054,
											"end": 9058,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9052,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 9042,
											"end": 9059,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "tag",
											"source": 17,
											"value": "423"
										},
										{
											"begin": 8995,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8986,
											"end": 9073,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8802,
											"end": 9079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8741,
											"end": 9079,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9180,
											"end": 9186,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9194,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9196,
											"end": 9202,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9204,
											"end": 9210,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9253,
											"end": 9256,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 9241,
											"end": 9250,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9232,
											"end": 9239,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9228,
											"end": 9251,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9224,
											"end": 9257,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "tag",
											"source": 17,
											"value": "426"
										},
										{
											"begin": 9260,
											"end": 9339,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "tag",
											"source": 17,
											"value": "425"
										},
										{
											"begin": 9221,
											"end": 9341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 9450,
											"end": 9457,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9441,
											"end": 9447,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9430,
											"end": 9439,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9426,
											"end": 9448,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "tag",
											"source": 17,
											"value": "427"
										},
										{
											"begin": 9405,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9395,
											"end": 9458,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9351,
											"end": 9468,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9507,
											"end": 9509,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 9578,
											"end": 9585,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9569,
											"end": 9575,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9558,
											"end": 9567,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9554,
											"end": 9576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "tag",
											"source": 17,
											"value": "428"
										},
										{
											"begin": 9533,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 9523,
											"end": 9586,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9478,
											"end": 9596,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9635,
											"end": 9637,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 9706,
											"end": 9713,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9682,
											"end": 9704,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "tag",
											"source": 17,
											"value": "429"
										},
										{
											"begin": 9661,
											"end": 9714,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9651,
											"end": 9714,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9606,
											"end": 9724,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9763,
											"end": 9795,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9820,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9811,
											"end": 9841,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "251"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 17,
											"value": "431"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "tag",
											"source": 17,
											"value": "430"
										},
										{
											"begin": 9808,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 10003,
											"end": 10010,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 9994,
											"end": 10000,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 9979,
											"end": 10001,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "tag",
											"source": 17,
											"value": "432"
										},
										{
											"begin": 9949,
											"end": 10011,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9939,
											"end": 10011,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9734,
											"end": 10021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9085,
											"end": 10028,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10102,
											"end": 10108,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10147,
											"end": 10156,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 10138,
											"end": 10145,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10134,
											"end": 10157,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10130,
											"end": 10162,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "tag",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 10165,
											"end": 10244,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "tag",
											"source": 17,
											"value": "434"
										},
										{
											"begin": 10127,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 10355,
											"end": 10362,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10346,
											"end": 10352,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10335,
											"end": 10344,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10331,
											"end": 10353,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "tag",
											"source": 17,
											"value": "436"
										},
										{
											"begin": 10310,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10300,
											"end": 10363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10256,
											"end": 10373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10412,
											"end": 10414,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 10483,
											"end": 10490,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 10474,
											"end": 10480,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10463,
											"end": 10472,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 10459,
											"end": 10481,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "tag",
											"source": 17,
											"value": "437"
										},
										{
											"begin": 10438,
											"end": 10491,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10428,
											"end": 10491,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10383,
											"end": 10501,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10034,
											"end": 10508,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 10514,
											"end": 10694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10562,
											"end": 10639,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10552,
											"end": 10640,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10659,
											"end": 10663,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 10649,
											"end": 10664,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10688,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10775,
											"end": 10779,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10771,
											"end": 10783,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10761,
											"end": 10783,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10828,
											"end": 10829,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10818,
											"end": 10830,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10849,
											"end": 10867,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10905,
											"end": 10909,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 10897,
											"end": 10903,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10893,
											"end": 10910,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10883,
											"end": 10910,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "tag",
											"source": 17,
											"value": "440"
										},
										{
											"begin": 10839,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10967,
											"end": 10969,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10959,
											"end": 10965,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 10936,
											"end": 10954,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10933,
											"end": 10971,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "tag",
											"source": 17,
											"value": "442"
										},
										{
											"begin": 10986,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "tag",
											"source": 17,
											"value": "441"
										},
										{
											"begin": 10930,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10751,
											"end": 11020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 10700,
											"end": 11020,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11026,
											"end": 11257,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 11026,
											"end": 11257,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11166,
											"end": 11200,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11150,
											"end": 11164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11143,
											"end": 11201,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11235,
											"end": 11249,
											"name": "PUSH",
											"source": 17,
											"value": "697374656E7420746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 11230,
											"end": 11232,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11222,
											"end": 11228,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11218,
											"end": 11233,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11211,
											"end": 11250,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11026,
											"end": 11257,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11026,
											"end": 11257,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11405,
											"end": 11408,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 11490,
											"end": 11492,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 11485,
											"end": 11488,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "tag",
											"source": 17,
											"value": "445"
										},
										{
											"begin": 11426,
											"end": 11493,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11419,
											"end": 11493,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11419,
											"end": 11493,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 11591,
											"end": 11594,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "tag",
											"source": 17,
											"value": "446"
										},
										{
											"begin": 11502,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11620,
											"end": 11622,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 11615,
											"end": 11618,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11611,
											"end": 11623,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11604,
											"end": 11623,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11604,
											"end": 11623,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11263,
											"end": 11629,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11801,
											"end": 11805,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11839,
											"end": 11841,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11828,
											"end": 11837,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11824,
											"end": 11842,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11816,
											"end": 11842,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11816,
											"end": 11842,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11888,
											"end": 11897,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11882,
											"end": 11886,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11878,
											"end": 11898,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11874,
											"end": 11875,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11863,
											"end": 11872,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11859,
											"end": 11876,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11852,
											"end": 11899,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 12042,
											"end": 12046,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "tag",
											"source": 17,
											"value": "448"
										},
										{
											"begin": 11916,
											"end": 12047,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11908,
											"end": 12047,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11908,
											"end": 12047,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 12054,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 12060,
											"end": 12280,
											"name": "tag",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 12060,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12200,
											"end": 12234,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 12196,
											"end": 12197,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12188,
											"end": 12194,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12184,
											"end": 12198,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12177,
											"end": 12235,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12269,
											"end": 12272,
											"name": "PUSH",
											"source": 17,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12264,
											"end": 12266,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12256,
											"end": 12262,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12252,
											"end": 12267,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12245,
											"end": 12273,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12060,
											"end": 12280,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12060,
											"end": 12280,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 12286,
											"end": 12652,
											"name": "tag",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 12286,
											"end": 12652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12428,
											"end": 12431,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12449,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 12513,
											"end": 12515,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 12508,
											"end": 12511,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12449,
											"end": 12516,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 12449,
											"end": 12516,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12449,
											"end": 12516,
											"name": "tag",
											"source": 17,
											"value": "451"
										},
										{
											"begin": 12449,
											"end": 12516,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12442,
											"end": 12516,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12442,
											"end": 12516,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12525,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 12614,
											"end": 12617,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12525,
											"end": 12618,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "284"
										},
										{
											"begin": 12525,
											"end": 12618,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12525,
											"end": 12618,
											"name": "tag",
											"source": 17,
											"value": "452"
										},
										{
											"begin": 12525,
											"end": 12618,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12643,
											"end": 12645,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12634,
											"end": 12646,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12627,
											"end": 12646,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12627,
											"end": 12646,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12286,
											"end": 12652,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12286,
											"end": 12652,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12286,
											"end": 12652,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12286,
											"end": 12652,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 12658,
											"end": 13077,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 12658,
											"end": 13077,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12824,
											"end": 12828,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12862,
											"end": 12864,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12851,
											"end": 12860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12847,
											"end": 12865,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12839,
											"end": 12865,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12839,
											"end": 12865,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12911,
											"end": 12920,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12905,
											"end": 12909,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12901,
											"end": 12921,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12897,
											"end": 12898,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12886,
											"end": 12895,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12882,
											"end": 12899,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12875,
											"end": 12922,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12939,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 13065,
											"end": 13069,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12939,
											"end": 13070,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "285"
										},
										{
											"begin": 12939,
											"end": 13070,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 12939,
											"end": 13070,
											"name": "tag",
											"source": 17,
											"value": "454"
										},
										{
											"begin": 12939,
											"end": 13070,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12931,
											"end": 13070,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12931,
											"end": 13070,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12658,
											"end": 13077,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12658,
											"end": 13077,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 12658,
											"end": 13077,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 12658,
											"end": 13077,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 13083,
											"end": 13326,
											"name": "tag",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 13083,
											"end": 13326,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13223,
											"end": 13257,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
										},
										{
											"begin": 13219,
											"end": 13220,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13211,
											"end": 13217,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13207,
											"end": 13221,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13200,
											"end": 13258,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13292,
											"end": 13318,
											"name": "PUSH",
											"source": 17,
											"value": "6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
										},
										{
											"begin": 13287,
											"end": 13289,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13279,
											"end": 13285,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13275,
											"end": 13290,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13268,
											"end": 13319,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13083,
											"end": 13326,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13083,
											"end": 13326,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 13332,
											"end": 13698,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 13332,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13474,
											"end": 13477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13495,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 13559,
											"end": 13561,
											"name": "PUSH",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 13554,
											"end": 13557,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13495,
											"end": 13562,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 13495,
											"end": 13562,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13495,
											"end": 13562,
											"name": "tag",
											"source": 17,
											"value": "457"
										},
										{
											"begin": 13495,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13488,
											"end": 13562,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13488,
											"end": 13562,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13571,
											"end": 13664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 13660,
											"end": 13663,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13571,
											"end": 13664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "286"
										},
										{
											"begin": 13571,
											"end": 13664,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13571,
											"end": 13664,
											"name": "tag",
											"source": 17,
											"value": "458"
										},
										{
											"begin": 13571,
											"end": 13664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13689,
											"end": 13691,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13684,
											"end": 13687,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13680,
											"end": 13692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13673,
											"end": 13692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13673,
											"end": 13692,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13698,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13698,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13698,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13332,
											"end": 13698,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 13704,
											"end": 14123,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 13704,
											"end": 14123,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13870,
											"end": 13874,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13908,
											"end": 13910,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13897,
											"end": 13906,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13893,
											"end": 13911,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13885,
											"end": 13911,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13885,
											"end": 13911,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13957,
											"end": 13966,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13951,
											"end": 13955,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13947,
											"end": 13967,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13943,
											"end": 13944,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13932,
											"end": 13941,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 13928,
											"end": 13945,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13921,
											"end": 13968,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13985,
											"end": 14116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 14111,
											"end": 14115,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13985,
											"end": 14116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 13985,
											"end": 14116,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 13985,
											"end": 14116,
											"name": "tag",
											"source": 17,
											"value": "460"
										},
										{
											"begin": 13985,
											"end": 14116,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13977,
											"end": 14116,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13977,
											"end": 14116,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13704,
											"end": 14123,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13704,
											"end": 14123,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13704,
											"end": 14123,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 13704,
											"end": 14123,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14129,
											"end": 14365,
											"name": "tag",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 14129,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14269,
											"end": 14303,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
										},
										{
											"begin": 14265,
											"end": 14266,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14257,
											"end": 14263,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14253,
											"end": 14267,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14246,
											"end": 14304,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14338,
											"end": 14357,
											"name": "PUSH",
											"source": 17,
											"value": "776E6572206E6F7220617070726F766564000000000000000000000000000000"
										},
										{
											"begin": 14333,
											"end": 14335,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14325,
											"end": 14331,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14321,
											"end": 14336,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14314,
											"end": 14358,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14129,
											"end": 14365,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14129,
											"end": 14365,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14371,
											"end": 14737,
											"name": "tag",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 14371,
											"end": 14737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14513,
											"end": 14516,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14534,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 14598,
											"end": 14600,
											"name": "PUSH",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 14593,
											"end": 14596,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14534,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 14534,
											"end": 14601,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14534,
											"end": 14601,
											"name": "tag",
											"source": 17,
											"value": "463"
										},
										{
											"begin": 14534,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14601,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14527,
											"end": 14601,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14610,
											"end": 14703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 14699,
											"end": 14702,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14610,
											"end": 14703,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "288"
										},
										{
											"begin": 14610,
											"end": 14703,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 14610,
											"end": 14703,
											"name": "tag",
											"source": 17,
											"value": "464"
										},
										{
											"begin": 14610,
											"end": 14703,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14728,
											"end": 14730,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14723,
											"end": 14726,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14719,
											"end": 14731,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14712,
											"end": 14731,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14712,
											"end": 14731,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14371,
											"end": 14737,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14371,
											"end": 14737,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14371,
											"end": 14737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14371,
											"end": 14737,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 14743,
											"end": 15162,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 14743,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14909,
											"end": 14913,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14947,
											"end": 14949,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14936,
											"end": 14945,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14932,
											"end": 14950,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14924,
											"end": 14950,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14924,
											"end": 14950,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14996,
											"end": 15005,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14990,
											"end": 14994,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14986,
											"end": 15006,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 14982,
											"end": 14983,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14971,
											"end": 14980,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14967,
											"end": 14984,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15007,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15024,
											"end": 15155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 15150,
											"end": 15154,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15024,
											"end": 15155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "289"
										},
										{
											"begin": 15024,
											"end": 15155,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15024,
											"end": 15155,
											"name": "tag",
											"source": 17,
											"value": "466"
										},
										{
											"begin": 15024,
											"end": 15155,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15016,
											"end": 15155,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15016,
											"end": 15155,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14743,
											"end": 15162,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 14743,
											"end": 15162,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14743,
											"end": 15162,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14743,
											"end": 15162,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 15168,
											"end": 15396,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 15168,
											"end": 15396,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15308,
											"end": 15342,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
										},
										{
											"begin": 15304,
											"end": 15305,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15296,
											"end": 15302,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15292,
											"end": 15306,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15285,
											"end": 15343,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15377,
											"end": 15388,
											"name": "PUSH",
											"source": 17,
											"value": "656E7420746F6B656E0000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15372,
											"end": 15374,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15364,
											"end": 15370,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15360,
											"end": 15375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15353,
											"end": 15389,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15168,
											"end": 15396,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15168,
											"end": 15396,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 15402,
											"end": 15768,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 15402,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15544,
											"end": 15547,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15565,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 15629,
											"end": 15631,
											"name": "PUSH",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 15624,
											"end": 15627,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15565,
											"end": 15632,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 15565,
											"end": 15632,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15565,
											"end": 15632,
											"name": "tag",
											"source": 17,
											"value": "469"
										},
										{
											"begin": 15565,
											"end": 15632,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15558,
											"end": 15632,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15558,
											"end": 15632,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15641,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 15730,
											"end": 15733,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15641,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 15641,
											"end": 15734,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 15641,
											"end": 15734,
											"name": "tag",
											"source": 17,
											"value": "470"
										},
										{
											"begin": 15641,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15759,
											"end": 15761,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 15754,
											"end": 15757,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15750,
											"end": 15762,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15743,
											"end": 15762,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15743,
											"end": 15762,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15402,
											"end": 15768,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15402,
											"end": 15768,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15402,
											"end": 15768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15402,
											"end": 15768,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 15774,
											"end": 16193,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 15774,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15940,
											"end": 15944,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15978,
											"end": 15980,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15967,
											"end": 15976,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15963,
											"end": 15981,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15955,
											"end": 15981,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15955,
											"end": 15981,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16027,
											"end": 16036,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16021,
											"end": 16025,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16017,
											"end": 16037,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16013,
											"end": 16014,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16002,
											"end": 16011,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15998,
											"end": 16015,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15991,
											"end": 16038,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16055,
											"end": 16186,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 16181,
											"end": 16185,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16055,
											"end": 16186,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 16055,
											"end": 16186,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16055,
											"end": 16186,
											"name": "tag",
											"source": 17,
											"value": "472"
										},
										{
											"begin": 16055,
											"end": 16186,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16186,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16047,
											"end": 16186,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15774,
											"end": 16193,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15774,
											"end": 16193,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15774,
											"end": 16193,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15774,
											"end": 16193,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16199,
											"end": 16428,
											"name": "tag",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 16199,
											"end": 16428,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16339,
											"end": 16373,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A2062616C616E636520717565727920666F7220746865207A65"
										},
										{
											"begin": 16335,
											"end": 16336,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16327,
											"end": 16333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16323,
											"end": 16337,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16316,
											"end": 16374,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16408,
											"end": 16420,
											"name": "PUSH",
											"source": 17,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 16403,
											"end": 16405,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16395,
											"end": 16401,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16391,
											"end": 16406,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16384,
											"end": 16421,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16199,
											"end": 16428,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16199,
											"end": 16428,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16434,
											"end": 16800,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 16434,
											"end": 16800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16576,
											"end": 16579,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16597,
											"end": 16664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 16661,
											"end": 16663,
											"name": "PUSH",
											"source": 17,
											"value": "2A"
										},
										{
											"begin": 16656,
											"end": 16659,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 16597,
											"end": 16664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 16597,
											"end": 16664,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16597,
											"end": 16664,
											"name": "tag",
											"source": 17,
											"value": "475"
										},
										{
											"begin": 16597,
											"end": 16664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16590,
											"end": 16664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16590,
											"end": 16664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16673,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 16762,
											"end": 16765,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16673,
											"end": 16766,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 16673,
											"end": 16766,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 16673,
											"end": 16766,
											"name": "tag",
											"source": 17,
											"value": "476"
										},
										{
											"begin": 16673,
											"end": 16766,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16791,
											"end": 16793,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16786,
											"end": 16789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16782,
											"end": 16794,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16775,
											"end": 16794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16775,
											"end": 16794,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16434,
											"end": 16800,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16434,
											"end": 16800,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16434,
											"end": 16800,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16434,
											"end": 16800,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 16806,
											"end": 17225,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 16806,
											"end": 17225,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16972,
											"end": 16976,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17010,
											"end": 17012,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16999,
											"end": 17008,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16995,
											"end": 17013,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16987,
											"end": 17013,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16987,
											"end": 17013,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17059,
											"end": 17068,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17053,
											"end": 17057,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17049,
											"end": 17069,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 17045,
											"end": 17046,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17043,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17030,
											"end": 17047,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17023,
											"end": 17070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17087,
											"end": 17218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 17213,
											"end": 17217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 17087,
											"end": 17218,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 17087,
											"end": 17218,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17087,
											"end": 17218,
											"name": "tag",
											"source": 17,
											"value": "478"
										},
										{
											"begin": 17087,
											"end": 17218,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17079,
											"end": 17218,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17079,
											"end": 17218,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16806,
											"end": 17225,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16806,
											"end": 17225,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16806,
											"end": 17225,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16806,
											"end": 17225,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 17231,
											"end": 17465,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 17231,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17371,
											"end": 17405,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732314D657461646174613A2055524920717565727920666F72206E6F"
										},
										{
											"begin": 17367,
											"end": 17368,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17359,
											"end": 17365,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17355,
											"end": 17369,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17348,
											"end": 17406,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17440,
											"end": 17457,
											"name": "PUSH",
											"source": 17,
											"value": "6E6578697374656E7420746F6B656E0000000000000000000000000000000000"
										},
										{
											"begin": 17435,
											"end": 17437,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 17427,
											"end": 17433,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17423,
											"end": 17438,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17416,
											"end": 17458,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17231,
											"end": 17465,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17231,
											"end": 17465,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 17471,
											"end": 17837,
											"name": "tag",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 17471,
											"end": 17837,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17613,
											"end": 17616,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 17634,
											"end": 17701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 17698,
											"end": 17700,
											"name": "PUSH",
											"source": 17,
											"value": "2F"
										},
										{
											"begin": 17693,
											"end": 17696,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 17634,
											"end": 17701,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 17634,
											"end": 17701,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17634,
											"end": 17701,
											"name": "tag",
											"source": 17,
											"value": "481"
										},
										{
											"begin": 17634,
											"end": 17701,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17627,
											"end": 17701,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17627,
											"end": 17701,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17710,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 17799,
											"end": 17802,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17710,
											"end": 17803,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 17710,
											"end": 17803,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 17710,
											"end": 17803,
											"name": "tag",
											"source": 17,
											"value": "482"
										},
										{
											"begin": 17710,
											"end": 17803,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 17828,
											"end": 17830,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 17823,
											"end": 17826,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17819,
											"end": 17831,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17812,
											"end": 17831,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17812,
											"end": 17831,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17471,
											"end": 17837,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17471,
											"end": 17837,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17471,
											"end": 17837,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17471,
											"end": 17837,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 17843,
											"end": 18262,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 17843,
											"end": 18262,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18009,
											"end": 18013,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18047,
											"end": 18049,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18036,
											"end": 18045,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18032,
											"end": 18050,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18024,
											"end": 18050,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18024,
											"end": 18050,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18096,
											"end": 18105,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18090,
											"end": 18094,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18086,
											"end": 18106,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 18082,
											"end": 18083,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18071,
											"end": 18080,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 18067,
											"end": 18084,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18060,
											"end": 18107,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18124,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 18250,
											"end": 18254,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18124,
											"end": 18255,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 18124,
											"end": 18255,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18124,
											"end": 18255,
											"name": "tag",
											"source": 17,
											"value": "484"
										},
										{
											"begin": 18124,
											"end": 18255,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18116,
											"end": 18255,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18116,
											"end": 18255,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17843,
											"end": 18262,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 17843,
											"end": 18262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 17843,
											"end": 18262,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 17843,
											"end": 18262,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18370,
											"end": 18381,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18407,
											"end": 18410,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18392,
											"end": 18410,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 18392,
											"end": 18410,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18268,
											"end": 18416,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "tag",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18528,
											"end": 18531,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 18556,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 18589,
											"end": 18594,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18556,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 18556,
											"end": 18595,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18556,
											"end": 18595,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 18556,
											"end": 18595,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18611,
											"end": 18700,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 18693,
											"end": 18699,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18688,
											"end": 18691,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18611,
											"end": 18700,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 18611,
											"end": 18700,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18611,
											"end": 18700,
											"name": "tag",
											"source": 17,
											"value": "488"
										},
										{
											"begin": 18611,
											"end": 18700,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18604,
											"end": 18700,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18604,
											"end": 18700,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18709,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 18754,
											"end": 18760,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 18749,
											"end": 18752,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 18742,
											"end": 18746,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 18735,
											"end": 18740,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 18731,
											"end": 18747,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18709,
											"end": 18761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 18709,
											"end": 18761,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 18709,
											"end": 18761,
											"name": "tag",
											"source": 17,
											"value": "489"
										},
										{
											"begin": 18709,
											"end": 18761,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18786,
											"end": 18792,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 18781,
											"end": 18784,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 18777,
											"end": 18793,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18770,
											"end": 18793,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18770,
											"end": 18793,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18532,
											"end": 18799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18422,
											"end": 18799,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 18985,
											"end": 18988,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19007,
											"end": 19102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 19098,
											"end": 19101,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19089,
											"end": 19095,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19007,
											"end": 19102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 19007,
											"end": 19102,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19007,
											"end": 19102,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 19007,
											"end": 19102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19000,
											"end": 19102,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19000,
											"end": 19102,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19119,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 19210,
											"end": 19213,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19201,
											"end": 19207,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19119,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 19119,
											"end": 19214,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19119,
											"end": 19214,
											"name": "tag",
											"source": 17,
											"value": "492"
										},
										{
											"begin": 19119,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19112,
											"end": 19214,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19112,
											"end": 19214,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19231,
											"end": 19234,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19224,
											"end": 19234,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19224,
											"end": 19234,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 18805,
											"end": 19240,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19246,
											"end": 19477,
											"name": "tag",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 19246,
											"end": 19477,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19386,
											"end": 19420,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
										},
										{
											"begin": 19382,
											"end": 19383,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19374,
											"end": 19380,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19370,
											"end": 19384,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19363,
											"end": 19421,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19455,
											"end": 19469,
											"name": "PUSH",
											"source": 17,
											"value": "697374656E7420746F6B656E0000000000000000000000000000000000000000"
										},
										{
											"begin": 19450,
											"end": 19452,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19442,
											"end": 19448,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19438,
											"end": 19453,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19431,
											"end": 19470,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19246,
											"end": 19477,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19246,
											"end": 19477,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19483,
											"end": 19849,
											"name": "tag",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 19483,
											"end": 19849,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19625,
											"end": 19628,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19646,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 19710,
											"end": 19712,
											"name": "PUSH",
											"source": 17,
											"value": "2C"
										},
										{
											"begin": 19705,
											"end": 19708,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19646,
											"end": 19713,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 19646,
											"end": 19713,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19646,
											"end": 19713,
											"name": "tag",
											"source": 17,
											"value": "495"
										},
										{
											"begin": 19646,
											"end": 19713,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19639,
											"end": 19713,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19639,
											"end": 19713,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19722,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 19811,
											"end": 19814,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19722,
											"end": 19815,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "298"
										},
										{
											"begin": 19722,
											"end": 19815,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 19722,
											"end": 19815,
											"name": "tag",
											"source": 17,
											"value": "496"
										},
										{
											"begin": 19722,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19840,
											"end": 19842,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 19835,
											"end": 19838,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19831,
											"end": 19843,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19824,
											"end": 19843,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19824,
											"end": 19843,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19483,
											"end": 19849,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19483,
											"end": 19849,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19483,
											"end": 19849,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19483,
											"end": 19849,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 19855,
											"end": 20274,
											"name": "tag",
											"source": 17,
											"value": "167"
										},
										{
											"begin": 19855,
											"end": 20274,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20021,
											"end": 20025,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20059,
											"end": 20061,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20048,
											"end": 20057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20044,
											"end": 20062,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20036,
											"end": 20062,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20036,
											"end": 20062,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20108,
											"end": 20117,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20102,
											"end": 20106,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20098,
											"end": 20118,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20094,
											"end": 20095,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20083,
											"end": 20092,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20079,
											"end": 20096,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20072,
											"end": 20119,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20136,
											"end": 20267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 20262,
											"end": 20266,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20136,
											"end": 20267,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "299"
										},
										{
											"begin": 20136,
											"end": 20267,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20136,
											"end": 20267,
											"name": "tag",
											"source": 17,
											"value": "498"
										},
										{
											"begin": 20136,
											"end": 20267,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20128,
											"end": 20267,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20128,
											"end": 20267,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19855,
											"end": 20274,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19855,
											"end": 20274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19855,
											"end": 20274,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19855,
											"end": 20274,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 20280,
											"end": 20504,
											"name": "tag",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 20280,
											"end": 20504,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20420,
											"end": 20454,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 20416,
											"end": 20417,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20408,
											"end": 20414,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20404,
											"end": 20418,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20397,
											"end": 20455,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20489,
											"end": 20496,
											"name": "PUSH",
											"source": 17,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20484,
											"end": 20486,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20476,
											"end": 20482,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20472,
											"end": 20487,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20465,
											"end": 20497,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20280,
											"end": 20504,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20280,
											"end": 20504,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 20510,
											"end": 20876,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 20510,
											"end": 20876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20652,
											"end": 20655,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20673,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 20737,
											"end": 20739,
											"name": "PUSH",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 20732,
											"end": 20735,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 20673,
											"end": 20740,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 20673,
											"end": 20740,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20673,
											"end": 20740,
											"name": "tag",
											"source": 17,
											"value": "501"
										},
										{
											"begin": 20673,
											"end": 20740,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20666,
											"end": 20740,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20666,
											"end": 20740,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20749,
											"end": 20842,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 20838,
											"end": 20841,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20749,
											"end": 20842,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "300"
										},
										{
											"begin": 20749,
											"end": 20842,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 20749,
											"end": 20842,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 20749,
											"end": 20842,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20867,
											"end": 20869,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 20862,
											"end": 20865,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20858,
											"end": 20870,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20851,
											"end": 20870,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20851,
											"end": 20870,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20510,
											"end": 20876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20510,
											"end": 20876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20510,
											"end": 20876,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20510,
											"end": 20876,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 20882,
											"end": 21301,
											"name": "tag",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 20882,
											"end": 21301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21048,
											"end": 21052,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21086,
											"end": 21088,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21075,
											"end": 21084,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21071,
											"end": 21089,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21063,
											"end": 21089,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21063,
											"end": 21089,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21135,
											"end": 21144,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21129,
											"end": 21133,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21125,
											"end": 21145,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21121,
											"end": 21122,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21110,
											"end": 21119,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21106,
											"end": 21123,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21099,
											"end": 21146,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21163,
											"end": 21294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 21289,
											"end": 21293,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21163,
											"end": 21294,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 21163,
											"end": 21294,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 21163,
											"end": 21294,
											"name": "tag",
											"source": 17,
											"value": "504"
										},
										{
											"begin": 21163,
											"end": 21294,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21155,
											"end": 21294,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21155,
											"end": 21294,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20882,
											"end": 21301,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 20882,
											"end": 21301,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 20882,
											"end": 21301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 20882,
											"end": 21301,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 21307,
											"end": 21530,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 21307,
											"end": 21530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21447,
											"end": 21481,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 21443,
											"end": 21444,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21435,
											"end": 21441,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21431,
											"end": 21445,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21424,
											"end": 21482,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21516,
											"end": 21522,
											"name": "PUSH",
											"source": 17,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21511,
											"end": 21513,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21503,
											"end": 21509,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21499,
											"end": 21514,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21492,
											"end": 21523,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 21307,
											"end": 21530,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21307,
											"end": 21530,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 21536,
											"end": 21902,
											"name": "tag",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 21536,
											"end": 21902,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21678,
											"end": 21681,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21699,
											"end": 21766,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 21763,
											"end": 21765,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 21758,
											"end": 21761,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21699,
											"end": 21766,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 21699,
											"end": 21766,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 21699,
											"end": 21766,
											"name": "tag",
											"source": 17,
											"value": "507"
										},
										{
											"begin": 21699,
											"end": 21766,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21692,
											"end": 21766,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21692,
											"end": 21766,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21775,
											"end": 21868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 21864,
											"end": 21867,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21775,
											"end": 21868,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 21775,
											"end": 21868,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 21775,
											"end": 21868,
											"name": "tag",
											"source": 17,
											"value": "508"
										},
										{
											"begin": 21775,
											"end": 21868,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21893,
											"end": 21895,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 21888,
											"end": 21891,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21884,
											"end": 21896,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21877,
											"end": 21896,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21877,
											"end": 21896,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21536,
											"end": 21902,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21536,
											"end": 21902,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21536,
											"end": 21902,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21536,
											"end": 21902,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 21908,
											"end": 22327,
											"name": "tag",
											"source": 17,
											"value": "180"
										},
										{
											"begin": 21908,
											"end": 22327,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22074,
											"end": 22078,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22112,
											"end": 22114,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22101,
											"end": 22110,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22097,
											"end": 22115,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22089,
											"end": 22115,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22089,
											"end": 22115,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22161,
											"end": 22170,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22155,
											"end": 22159,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22151,
											"end": 22171,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22147,
											"end": 22148,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22136,
											"end": 22145,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22132,
											"end": 22149,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22125,
											"end": 22172,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22189,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 22315,
											"end": 22319,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22189,
											"end": 22320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 22189,
											"end": 22320,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22189,
											"end": 22320,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 22189,
											"end": 22320,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22181,
											"end": 22320,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22181,
											"end": 22320,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21908,
											"end": 22327,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 21908,
											"end": 22327,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21908,
											"end": 22327,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 21908,
											"end": 22327,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 22333,
											"end": 22513,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 22333,
											"end": 22513,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22381,
											"end": 22458,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22378,
											"end": 22379,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22371,
											"end": 22459,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22478,
											"end": 22482,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 22475,
											"end": 22476,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 22468,
											"end": 22483,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22502,
											"end": 22506,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 22499,
											"end": 22500,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22492,
											"end": 22507,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "tag",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22559,
											"end": 22563,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22579,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 22597,
											"end": 22598,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22579,
											"end": 22599,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 22579,
											"end": 22599,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22579,
											"end": 22599,
											"name": "tag",
											"source": 17,
											"value": "513"
										},
										{
											"begin": 22579,
											"end": 22599,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22574,
											"end": 22599,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22574,
											"end": 22599,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 22631,
											"end": 22632,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22613,
											"end": 22633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 22613,
											"end": 22633,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22613,
											"end": 22633,
											"name": "tag",
											"source": 17,
											"value": "514"
										},
										{
											"begin": 22613,
											"end": 22633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22608,
											"end": 22633,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22608,
											"end": 22633,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22652,
											"end": 22653,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22649,
											"end": 22650,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22646,
											"end": 22654,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 22643,
											"end": 22677,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22643,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 22643,
											"end": 22677,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22657,
											"end": 22675,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 22657,
											"end": 22675,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 22657,
											"end": 22675,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22657,
											"end": 22675,
											"name": "tag",
											"source": 17,
											"value": "516"
										},
										{
											"begin": 22657,
											"end": 22675,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22643,
											"end": 22677,
											"name": "tag",
											"source": 17,
											"value": "515"
										},
										{
											"begin": 22643,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22702,
											"end": 22703,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22699,
											"end": 22700,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22695,
											"end": 22704,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22687,
											"end": 22704,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22687,
											"end": 22704,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22519,
											"end": 22710,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22756,
											"end": 22759,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22775,
											"end": 22795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 22793,
											"end": 22794,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22775,
											"end": 22795,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 22775,
											"end": 22795,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22775,
											"end": 22795,
											"name": "tag",
											"source": 17,
											"value": "518"
										},
										{
											"begin": 22775,
											"end": 22795,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22770,
											"end": 22795,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22770,
											"end": 22795,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22809,
											"end": 22829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 22827,
											"end": 22828,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22809,
											"end": 22829,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 22809,
											"end": 22829,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22809,
											"end": 22829,
											"name": "tag",
											"source": 17,
											"value": "519"
										},
										{
											"begin": 22809,
											"end": 22829,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22804,
											"end": 22829,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22804,
											"end": 22829,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22963,
											"end": 22964,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22895,
											"end": 22961,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22891,
											"end": 22965,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22888,
											"end": 22889,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22885,
											"end": 22966,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22969,
											"end": 22987,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 22969,
											"end": 22987,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 22969,
											"end": 22987,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 22969,
											"end": 22987,
											"name": "tag",
											"source": 17,
											"value": "521"
										},
										{
											"begin": 22969,
											"end": 22987,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "tag",
											"source": 17,
											"value": "520"
										},
										{
											"begin": 22882,
											"end": 22989,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23013,
											"end": 23014,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23010,
											"end": 23011,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23006,
											"end": 23015,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22999,
											"end": 23015,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22999,
											"end": 23015,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22716,
											"end": 23021,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 23027,
											"end": 23202,
											"name": "tag",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 23027,
											"end": 23202,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23167,
											"end": 23194,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 23163,
											"end": 23164,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23155,
											"end": 23161,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23151,
											"end": 23165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23144,
											"end": 23195,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23027,
											"end": 23202,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23027,
											"end": 23202,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 23208,
											"end": 23574,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 23208,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23350,
											"end": 23353,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23371,
											"end": 23438,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 23435,
											"end": 23437,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 23430,
											"end": 23433,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23371,
											"end": 23438,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 23371,
											"end": 23438,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23371,
											"end": 23438,
											"name": "tag",
											"source": 17,
											"value": "524"
										},
										{
											"begin": 23371,
											"end": 23438,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23364,
											"end": 23438,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23364,
											"end": 23438,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23447,
											"end": 23540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 23536,
											"end": 23539,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23447,
											"end": 23540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "305"
										},
										{
											"begin": 23447,
											"end": 23540,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23447,
											"end": 23540,
											"name": "tag",
											"source": 17,
											"value": "525"
										},
										{
											"begin": 23447,
											"end": 23540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23565,
											"end": 23567,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23560,
											"end": 23563,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23556,
											"end": 23568,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23549,
											"end": 23568,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23549,
											"end": 23568,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23208,
											"end": 23574,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23208,
											"end": 23574,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23208,
											"end": 23574,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23208,
											"end": 23574,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "tag",
											"source": 17,
											"value": "193"
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23746,
											"end": 23750,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23784,
											"end": 23786,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 23773,
											"end": 23782,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23769,
											"end": 23787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23761,
											"end": 23787,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23761,
											"end": 23787,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23833,
											"end": 23842,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23827,
											"end": 23831,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23823,
											"end": 23843,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 23819,
											"end": 23820,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23808,
											"end": 23817,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23804,
											"end": 23821,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23797,
											"end": 23844,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 23987,
											"end": 23991,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "tag",
											"source": 17,
											"value": "527"
										},
										{
											"begin": 23861,
											"end": 23992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23853,
											"end": 23992,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23853,
											"end": 23992,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 23580,
											"end": 23999,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 24005,
											"end": 24242,
											"name": "tag",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 24005,
											"end": 24242,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24145,
											"end": 24179,
											"name": "PUSH",
											"source": 17,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 24141,
											"end": 24142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24133,
											"end": 24139,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24129,
											"end": 24143,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24122,
											"end": 24180,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24214,
											"end": 24234,
											"name": "PUSH",
											"source": 17,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 24209,
											"end": 24211,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24201,
											"end": 24207,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24197,
											"end": 24212,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24190,
											"end": 24235,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24005,
											"end": 24242,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24005,
											"end": 24242,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 24248,
											"end": 24614,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 24248,
											"end": 24614,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24390,
											"end": 24393,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24411,
											"end": 24478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 24475,
											"end": 24477,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 24470,
											"end": 24473,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24411,
											"end": 24478,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 24411,
											"end": 24478,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 24411,
											"end": 24478,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 24411,
											"end": 24478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24404,
											"end": 24478,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24404,
											"end": 24478,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24487,
											"end": 24580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 24576,
											"end": 24579,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24487,
											"end": 24580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 24487,
											"end": 24580,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 24487,
											"end": 24580,
											"name": "tag",
											"source": 17,
											"value": "531"
										},
										{
											"begin": 24487,
											"end": 24580,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24605,
											"end": 24607,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 24600,
											"end": 24603,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24596,
											"end": 24608,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24589,
											"end": 24608,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24589,
											"end": 24608,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24248,
											"end": 24614,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24248,
											"end": 24614,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24248,
											"end": 24614,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24248,
											"end": 24614,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 24620,
											"end": 25039,
											"name": "tag",
											"source": 17,
											"value": "201"
										},
										{
											"begin": 24620,
											"end": 25039,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24786,
											"end": 24790,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24824,
											"end": 24826,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24813,
											"end": 24822,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24809,
											"end": 24827,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24801,
											"end": 24827,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24801,
											"end": 24827,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24873,
											"end": 24882,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24867,
											"end": 24871,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24863,
											"end": 24883,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 24859,
											"end": 24860,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24848,
											"end": 24857,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24844,
											"end": 24861,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24837,
											"end": 24884,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24901,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 25027,
											"end": 25031,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24901,
											"end": 25032,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 24901,
											"end": 25032,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 24901,
											"end": 25032,
											"name": "tag",
											"source": 17,
											"value": "533"
										},
										{
											"begin": 24901,
											"end": 25032,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24893,
											"end": 25032,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24893,
											"end": 25032,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24620,
											"end": 25039,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24620,
											"end": 25039,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24620,
											"end": 25039,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 24620,
											"end": 25039,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25045,
											"end": 25278,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 25045,
											"end": 25278,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25084,
											"end": 25087,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25107,
											"end": 25131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 25125,
											"end": 25130,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25107,
											"end": 25131,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 25107,
											"end": 25131,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25107,
											"end": 25131,
											"name": "tag",
											"source": 17,
											"value": "535"
										},
										{
											"begin": 25107,
											"end": 25131,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25098,
											"end": 25131,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25098,
											"end": 25131,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25153,
											"end": 25219,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25146,
											"end": 25151,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25143,
											"end": 25220,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 25140,
											"end": 25243,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 25140,
											"end": 25243,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25223,
											"end": 25241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 25223,
											"end": 25241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 25223,
											"end": 25241,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25223,
											"end": 25241,
											"name": "tag",
											"source": 17,
											"value": "537"
										},
										{
											"begin": 25223,
											"end": 25241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25140,
											"end": 25243,
											"name": "tag",
											"source": 17,
											"value": "536"
										},
										{
											"begin": 25140,
											"end": 25243,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25270,
											"end": 25271,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 25263,
											"end": 25268,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25259,
											"end": 25272,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25252,
											"end": 25272,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25252,
											"end": 25272,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25045,
											"end": 25278,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25045,
											"end": 25278,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25045,
											"end": 25278,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25045,
											"end": 25278,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25284,
											"end": 25464,
											"name": "tag",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 25284,
											"end": 25464,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25332,
											"end": 25409,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25329,
											"end": 25330,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25322,
											"end": 25410,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25429,
											"end": 25433,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 25426,
											"end": 25427,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 25419,
											"end": 25434,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25453,
											"end": 25457,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 25450,
											"end": 25451,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25443,
											"end": 25458,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "tag",
											"source": 17,
											"value": "210"
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25510,
											"end": 25511,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25527,
											"end": 25547,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 25545,
											"end": 25546,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25527,
											"end": 25547,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 25527,
											"end": 25547,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25527,
											"end": 25547,
											"name": "tag",
											"source": 17,
											"value": "540"
										},
										{
											"begin": 25527,
											"end": 25547,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25522,
											"end": 25547,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25522,
											"end": 25547,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 25579,
											"end": 25580,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 25561,
											"end": 25581,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25556,
											"end": 25581,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25556,
											"end": 25581,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25600,
											"end": 25601,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25590,
											"end": 25625,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 25590,
											"end": 25625,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "tag",
											"source": 17,
											"value": "543"
										},
										{
											"begin": 25605,
											"end": 25623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25590,
											"end": 25625,
											"name": "tag",
											"source": 17,
											"value": "542"
										},
										{
											"begin": 25590,
											"end": 25625,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25647,
											"end": 25648,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25644,
											"end": 25645,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25640,
											"end": 25649,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 25635,
											"end": 25649,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25635,
											"end": 25649,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25655,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "tag",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25693,
											"end": 25694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25710,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 25728,
											"end": 25729,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25710,
											"end": 25730,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 25710,
											"end": 25730,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25710,
											"end": 25730,
											"name": "tag",
											"source": 17,
											"value": "545"
										},
										{
											"begin": 25710,
											"end": 25730,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25705,
											"end": 25730,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25705,
											"end": 25730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25744,
											"end": 25764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 25762,
											"end": 25763,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25744,
											"end": 25764,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 25744,
											"end": 25764,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25744,
											"end": 25764,
											"name": "tag",
											"source": 17,
											"value": "546"
										},
										{
											"begin": 25744,
											"end": 25764,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25739,
											"end": 25764,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25739,
											"end": 25764,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25783,
											"end": 25784,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25773,
											"end": 25808,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 25773,
											"end": 25808,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25788,
											"end": 25806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 25788,
											"end": 25806,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "309"
										},
										{
											"begin": 25788,
											"end": 25806,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 25788,
											"end": 25806,
											"name": "tag",
											"source": 17,
											"value": "548"
										},
										{
											"begin": 25788,
											"end": 25806,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25773,
											"end": 25808,
											"name": "tag",
											"source": 17,
											"value": "547"
										},
										{
											"begin": 25773,
											"end": 25808,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25829,
											"end": 25830,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25826,
											"end": 25827,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25822,
											"end": 25831,
											"name": "MOD",
											"source": 17
										},
										{
											"begin": 25817,
											"end": 25831,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25817,
											"end": 25831,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25661,
											"end": 25837,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 25843,
											"end": 26023,
											"name": "tag",
											"source": 17,
											"value": "223"
										},
										{
											"begin": 25843,
											"end": 26023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25891,
											"end": 25968,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25888,
											"end": 25889,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25881,
											"end": 25969,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25988,
											"end": 25992,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 25985,
											"end": 25986,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 25978,
											"end": 25993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26012,
											"end": 26016,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 26009,
											"end": 26010,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26002,
											"end": 26017,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 26029,
											"end": 26127,
											"name": "tag",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 26029,
											"end": 26127,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26080,
											"end": 26086,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26114,
											"end": 26119,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26108,
											"end": 26120,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 26098,
											"end": 26120,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26098,
											"end": 26120,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26029,
											"end": 26127,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26029,
											"end": 26127,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26029,
											"end": 26127,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26029,
											"end": 26127,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26216,
											"end": 26227,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26250,
											"end": 26256,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26245,
											"end": 26248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26238,
											"end": 26257,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26290,
											"end": 26294,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26285,
											"end": 26288,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26281,
											"end": 26295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26266,
											"end": 26295,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26266,
											"end": 26295,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26133,
											"end": 26301,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "tag",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26393,
											"end": 26396,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26421,
											"end": 26459,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 26453,
											"end": 26458,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26421,
											"end": 26459,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "310"
										},
										{
											"begin": 26421,
											"end": 26459,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26421,
											"end": 26459,
											"name": "tag",
											"source": 17,
											"value": "553"
										},
										{
											"begin": 26421,
											"end": 26459,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26475,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 26538,
											"end": 26544,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26533,
											"end": 26536,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 26475,
											"end": 26545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 26475,
											"end": 26545,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26475,
											"end": 26545,
											"name": "tag",
											"source": 17,
											"value": "554"
										},
										{
											"begin": 26475,
											"end": 26545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26468,
											"end": 26545,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 26468,
											"end": 26545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26554,
											"end": 26606,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 26599,
											"end": 26605,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26594,
											"end": 26597,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 26587,
											"end": 26591,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26580,
											"end": 26585,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 26576,
											"end": 26592,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26554,
											"end": 26606,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 26554,
											"end": 26606,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26554,
											"end": 26606,
											"name": "tag",
											"source": 17,
											"value": "555"
										},
										{
											"begin": 26554,
											"end": 26606,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26631,
											"end": 26660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 26653,
											"end": 26659,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26631,
											"end": 26660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 26631,
											"end": 26660,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26631,
											"end": 26660,
											"name": "tag",
											"source": 17,
											"value": "556"
										},
										{
											"begin": 26631,
											"end": 26660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26626,
											"end": 26629,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26622,
											"end": 26661,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26615,
											"end": 26661,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26615,
											"end": 26661,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26397,
											"end": 26667,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26307,
											"end": 26667,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "tag",
											"source": 17,
											"value": "233"
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26868,
											"end": 26872,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26906,
											"end": 26909,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 26895,
											"end": 26904,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26891,
											"end": 26910,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26883,
											"end": 26910,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26883,
											"end": 26910,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26920,
											"end": 26991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 26988,
											"end": 26989,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26977,
											"end": 26986,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26973,
											"end": 26990,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26964,
											"end": 26970,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 26920,
											"end": 26991,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 26920,
											"end": 26991,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 26920,
											"end": 26991,
											"name": "tag",
											"source": 17,
											"value": "558"
										},
										{
											"begin": 26920,
											"end": 26991,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27001,
											"end": 27073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 27069,
											"end": 27071,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27058,
											"end": 27067,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27054,
											"end": 27072,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27045,
											"end": 27051,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 27001,
											"end": 27073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "267"
										},
										{
											"begin": 27001,
											"end": 27073,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27001,
											"end": 27073,
											"name": "tag",
											"source": 17,
											"value": "559"
										},
										{
											"begin": 27001,
											"end": 27073,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27083,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 27151,
											"end": 27153,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 27140,
											"end": 27149,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27136,
											"end": 27154,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27127,
											"end": 27133,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27083,
											"end": 27155,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "270"
										},
										{
											"begin": 27083,
											"end": 27155,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27083,
											"end": 27155,
											"name": "tag",
											"source": 17,
											"value": "560"
										},
										{
											"begin": 27083,
											"end": 27155,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27202,
											"end": 27211,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27196,
											"end": 27200,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27192,
											"end": 27212,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 27187,
											"end": 27189,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 27176,
											"end": 27185,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27172,
											"end": 27190,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27165,
											"end": 27213,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27230,
											"end": 27306,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 27301,
											"end": 27305,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27292,
											"end": 27298,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27230,
											"end": 27306,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "312"
										},
										{
											"begin": 27230,
											"end": 27306,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27230,
											"end": 27306,
											"name": "tag",
											"source": 17,
											"value": "561"
										},
										{
											"begin": 27230,
											"end": 27306,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27222,
											"end": 27306,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27222,
											"end": 27306,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 26673,
											"end": 27313,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "tag",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 27380,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27406,
											"end": 27412,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27400,
											"end": 27413,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27391,
											"end": 27413,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27391,
											"end": 27413,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27422,
											"end": 27454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 27448,
											"end": 27453,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27422,
											"end": 27454,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 27422,
											"end": 27454,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27422,
											"end": 27454,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 27422,
											"end": 27454,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27319,
											"end": 27460,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27535,
											"end": 27541,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27584,
											"end": 27586,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27572,
											"end": 27581,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27563,
											"end": 27570,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27559,
											"end": 27582,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 27555,
											"end": 27587,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 27552,
											"end": 27671,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 27552,
											"end": 27671,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 27552,
											"end": 27671,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 27590,
											"end": 27669,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 27590,
											"end": 27669,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 27590,
											"end": 27669,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27590,
											"end": 27669,
											"name": "tag",
											"source": 17,
											"value": "566"
										},
										{
											"begin": 27590,
											"end": 27669,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27552,
											"end": 27671,
											"name": "tag",
											"source": 17,
											"value": "565"
										},
										{
											"begin": 27552,
											"end": 27671,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27710,
											"end": 27711,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27735,
											"end": 27798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 27790,
											"end": 27797,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27781,
											"end": 27787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27770,
											"end": 27779,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27766,
											"end": 27788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27735,
											"end": 27798,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "313"
										},
										{
											"begin": 27735,
											"end": 27798,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 27735,
											"end": 27798,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 27735,
											"end": 27798,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27725,
											"end": 27798,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27725,
											"end": 27798,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27681,
											"end": 27808,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27466,
											"end": 27815,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Address.sol\":{\"keccak256\":\"0x4f73eedf878079f3c11b05bb9db39c789ae782c0c1a15a8a31ad36aa7047a32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23c79bf4124e0b203677c5ab55ce73d8faf43f0d5c49b071c9f9f16fee74249\",\"dweb:/ipfs/QmNsMhnyeFS22LXmGGG7j6eto36bz8SEGbfDGPVu1EZcB8\"]},\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"]},\"contracts/NFTContract3/ERC721.sol\":{\"keccak256\":\"0x3d17be12e89003806dbc7d6213577031eed629bdeebe0a3d5217613476c375ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255e40094c0e42e5a258f2602921cbf4e1d4562be66a4f05b31ab96793cf54d0\",\"dweb:/ipfs/QmZchvZz3r1EzTvNrKe2EoZ4BLoUfpXe1TGazJm8caKLGk\"]},\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Metadata.sol\":{\"keccak256\":\"0x23e882d3b074890de42e57af24d0a860eb341e04778a8f15f1a2ed90007b3499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3d84ff3c7e4f7739dd5d3528c571310c76c11da07c20e1aa70bfb1d82dd5d29\",\"dweb:/ipfs/QmV5sGjniV5qVa5jEwhQAD82i4j2tJ8pzHPrQvUbs6jhNb\"]},\"contracts/NFTContract3/IERC721Receiver.sol\":{\"keccak256\":\"0xc66c39db95b4f7b0c01f9ae6585a9bbc6d8415d7be14db9dfd871b8bd671f7e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cd8d0fb37823a820754b93cb6a7c32cd13fd6f98190515bb7d4a086ac88833\",\"dweb:/ipfs/Qmc14KrMucFrkykM4KJAfGK4BkCFJyZvkzDzoHhPucEgqC\"]},\"contracts/NFTContract3/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "contracts/NFTContract3/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 442,
								"contract": "contracts/NFTContract3/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/NFTContract3/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 450,
								"contract": "contracts/NFTContract3/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 454,
								"contract": "contracts/NFTContract3/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 460,
								"contract": "contracts/NFTContract3/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/ERC721Burnable.sol": {
				"ERC721Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 Token that can be irreversibly burned (destroyed).",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"title": "ERC721 Burnable Token",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 Token that can be irreversibly burned (destroyed).\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"ERC721 Burnable Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/ERC721Burnable.sol\":\"ERC721Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Address.sol\":{\"keccak256\":\"0x4f73eedf878079f3c11b05bb9db39c789ae782c0c1a15a8a31ad36aa7047a32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23c79bf4124e0b203677c5ab55ce73d8faf43f0d5c49b071c9f9f16fee74249\",\"dweb:/ipfs/QmNsMhnyeFS22LXmGGG7j6eto36bz8SEGbfDGPVu1EZcB8\"]},\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"]},\"contracts/NFTContract3/ERC721.sol\":{\"keccak256\":\"0x3d17be12e89003806dbc7d6213577031eed629bdeebe0a3d5217613476c375ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255e40094c0e42e5a258f2602921cbf4e1d4562be66a4f05b31ab96793cf54d0\",\"dweb:/ipfs/QmZchvZz3r1EzTvNrKe2EoZ4BLoUfpXe1TGazJm8caKLGk\"]},\"contracts/NFTContract3/ERC721Burnable.sol\":{\"keccak256\":\"0xff9feb9fe1f2c594b6d927eb39ed9ae8e4d082891581116eeb484ca5420bd0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ccf2ee73795fed324763f13b666c4d5c9c708c3156ea7f25f242e897179f449\",\"dweb:/ipfs/Qmafy8hPCnzgTsJuPAiueotdUTh58RhYN61fCiX5qo8Wum\"]},\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Metadata.sol\":{\"keccak256\":\"0x23e882d3b074890de42e57af24d0a860eb341e04778a8f15f1a2ed90007b3499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3d84ff3c7e4f7739dd5d3528c571310c76c11da07c20e1aa70bfb1d82dd5d29\",\"dweb:/ipfs/QmV5sGjniV5qVa5jEwhQAD82i4j2tJ8pzHPrQvUbs6jhNb\"]},\"contracts/NFTContract3/IERC721Receiver.sol\":{\"keccak256\":\"0xc66c39db95b4f7b0c01f9ae6585a9bbc6d8415d7be14db9dfd871b8bd671f7e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cd8d0fb37823a820754b93cb6a7c32cd13fd6f98190515bb7d4a086ac88833\",\"dweb:/ipfs/Qmc14KrMucFrkykM4KJAfGK4BkCFJyZvkzDzoHhPucEgqC\"]},\"contracts/NFTContract3/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "contracts/NFTContract3/ERC721Burnable.sol:ERC721Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 442,
								"contract": "contracts/NFTContract3/ERC721Burnable.sol:ERC721Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/NFTContract3/ERC721Burnable.sol:ERC721Burnable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 450,
								"contract": "contracts/NFTContract3/ERC721Burnable.sol:ERC721Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 454,
								"contract": "contracts/NFTContract3/ERC721Burnable.sol:ERC721Burnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 460,
								"contract": "contracts/NFTContract3/ERC721Burnable.sol:ERC721Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/ERC721Enumerable.sol": {
				"ERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenByIndex(uint256)": {
								"details": "See {IERC721Enumerable-tokenByIndex}."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"totalSupply()": {
								"details": "See {IERC721Enumerable-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This implements an optional extension of {ERC721} defined in the EIP that adds enumerability of all the token ids in the contract as well as all token ids owned by each account.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/ERC721Enumerable.sol\":\"ERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Address.sol\":{\"keccak256\":\"0x4f73eedf878079f3c11b05bb9db39c789ae782c0c1a15a8a31ad36aa7047a32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23c79bf4124e0b203677c5ab55ce73d8faf43f0d5c49b071c9f9f16fee74249\",\"dweb:/ipfs/QmNsMhnyeFS22LXmGGG7j6eto36bz8SEGbfDGPVu1EZcB8\"]},\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"]},\"contracts/NFTContract3/ERC721.sol\":{\"keccak256\":\"0x3d17be12e89003806dbc7d6213577031eed629bdeebe0a3d5217613476c375ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255e40094c0e42e5a258f2602921cbf4e1d4562be66a4f05b31ab96793cf54d0\",\"dweb:/ipfs/QmZchvZz3r1EzTvNrKe2EoZ4BLoUfpXe1TGazJm8caKLGk\"]},\"contracts/NFTContract3/ERC721Enumerable.sol\":{\"keccak256\":\"0x130afbf03759fe8d6615ad3e977b26ead89c5985351c0bd5d78f7a512fb71ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d1de3d4e9528762eb4960c7f10ae50c0d80c054221dc2bfaf6b144a10b0f78\",\"dweb:/ipfs/QmeqneJX1rUtf2sbHSf5BwnmPLkwXFm1BRKwdnr98HgmQ3\"]},\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Enumerable.sol\":{\"keccak256\":\"0x70425e4b2a4451fa570f8a98b73014602e175dda0c8ce712b96e81f23fb8c047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0dbc178d7d1b3e5417a992b7620a9a99af8c46ebaed230a2c5501e7ab0d0bbe\",\"dweb:/ipfs/QmNTFCW3CHW4sqZgoxFSQvjihyDfMZXenTT5Y9XsbRoeEN\"]},\"contracts/NFTContract3/IERC721Metadata.sol\":{\"keccak256\":\"0x23e882d3b074890de42e57af24d0a860eb341e04778a8f15f1a2ed90007b3499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3d84ff3c7e4f7739dd5d3528c571310c76c11da07c20e1aa70bfb1d82dd5d29\",\"dweb:/ipfs/QmV5sGjniV5qVa5jEwhQAD82i4j2tJ8pzHPrQvUbs6jhNb\"]},\"contracts/NFTContract3/IERC721Receiver.sol\":{\"keccak256\":\"0xc66c39db95b4f7b0c01f9ae6585a9bbc6d8415d7be14db9dfd871b8bd671f7e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cd8d0fb37823a820754b93cb6a7c32cd13fd6f98190515bb7d4a086ac88833\",\"dweb:/ipfs/Qmc14KrMucFrkykM4KJAfGK4BkCFJyZvkzDzoHhPucEgqC\"]},\"contracts/NFTContract3/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 442,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 450,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 454,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 460,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1325,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
							},
							{
								"astId": 1329,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_ownedTokensIndex",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1332,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokens",
								"offset": 0,
								"slot": "8",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1336,
								"contract": "contracts/NFTContract3/ERC721Enumerable.sol:ERC721Enumerable",
								"label": "_allTokensIndex",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Address.sol\":{\"keccak256\":\"0x4f73eedf878079f3c11b05bb9db39c789ae782c0c1a15a8a31ad36aa7047a32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23c79bf4124e0b203677c5ab55ce73d8faf43f0d5c49b071c9f9f16fee74249\",\"dweb:/ipfs/QmNsMhnyeFS22LXmGGG7j6eto36bz8SEGbfDGPVu1EZcB8\"]},\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"]},\"contracts/NFTContract3/ERC721.sol\":{\"keccak256\":\"0x3d17be12e89003806dbc7d6213577031eed629bdeebe0a3d5217613476c375ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255e40094c0e42e5a258f2602921cbf4e1d4562be66a4f05b31ab96793cf54d0\",\"dweb:/ipfs/QmZchvZz3r1EzTvNrKe2EoZ4BLoUfpXe1TGazJm8caKLGk\"]},\"contracts/NFTContract3/ERC721URIStorage.sol\":{\"keccak256\":\"0x753a6d3345a891caa1c379671308cf4bc139262980955093d925663a9b7fc390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869abdabf76e28e4c4bdaeb011321aa86bef70a80278bb5464299576d31a4163\",\"dweb:/ipfs/QmQFWSTqTmprtBYa4CT29HxWbiHnyHMF9q2zJUAm72tFQQ\"]},\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Metadata.sol\":{\"keccak256\":\"0x23e882d3b074890de42e57af24d0a860eb341e04778a8f15f1a2ed90007b3499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3d84ff3c7e4f7739dd5d3528c571310c76c11da07c20e1aa70bfb1d82dd5d29\",\"dweb:/ipfs/QmV5sGjniV5qVa5jEwhQAD82i4j2tJ8pzHPrQvUbs6jhNb\"]},\"contracts/NFTContract3/IERC721Receiver.sol\":{\"keccak256\":\"0xc66c39db95b4f7b0c01f9ae6585a9bbc6d8415d7be14db9dfd871b8bd671f7e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cd8d0fb37823a820754b93cb6a7c32cd13fd6f98190515bb7d4a086ac88833\",\"dweb:/ipfs/Qmc14KrMucFrkykM4KJAfGK4BkCFJyZvkzDzoHhPucEgqC\"]},\"contracts/NFTContract3/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 440,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 442,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 446,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 450,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 454,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 460,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1661,
								"contract": "contracts/NFTContract3/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Enumerable.sol\":{\"keccak256\":\"0x70425e4b2a4451fa570f8a98b73014602e175dda0c8ce712b96e81f23fb8c047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0dbc178d7d1b3e5417a992b7620a9a99af8c46ebaed230a2c5501e7ab0d0bbe\",\"dweb:/ipfs/QmNTFCW3CHW4sqZgoxFSQvjihyDfMZXenTT5Y9XsbRoeEN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Metadata.sol\":{\"keccak256\":\"0x23e882d3b074890de42e57af24d0a860eb341e04778a8f15f1a2ed90007b3499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3d84ff3c7e4f7739dd5d3528c571310c76c11da07c20e1aa70bfb1d82dd5d29\",\"dweb:/ipfs/QmV5sGjniV5qVa5jEwhQAD82i4j2tJ8pzHPrQvUbs6jhNb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/IERC721Receiver.sol\":{\"keccak256\":\"0xc66c39db95b4f7b0c01f9ae6585a9bbc6d8415d7be14db9dfd871b8bd671f7e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cd8d0fb37823a820754b93cb6a7c32cd13fd6f98190515bb7d4a086ac88833\",\"dweb:/ipfs/Qmc14KrMucFrkykM4KJAfGK4BkCFJyZvkzDzoHhPucEgqC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/Ownable.sol\":{\"keccak256\":\"0x28adb5f006cef52b73b613db99d0bc113d7b129a021e594dfdcf50225f260b3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3789666515f95aea6d9d3ebdbc25d7434182ba5599a7c2823ddd51bc5b6a0174\",\"dweb:/ipfs/QmSjW9pxWLnwqYKptEVQkxB8UWk99HuDGMZa6NjMBFoy5o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1988,
								"contract": "contracts/NFTContract3/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/Pausable.sol\":{\"keccak256\":\"0x9e1b993a4e508c726b7640c483de94e9c984735a4a40168c1e2ba154041fb925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2271b3c2ddcbb47879a6de3d1ae50c7771a875cefc4d1a580f6f0d1af7e0f4f\",\"dweb:/ipfs/QmSDuNgGS4zLj5ZLwdyszNXKGpfWeUo5bvnyG2UrmSCjdS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2103,
								"contract": "contracts/NFTContract3/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/SQFIFactory.sol": {
				"SQFItemFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemId",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "externalId",
									"type": "string"
								}
							],
							"name": "NFTMinted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "nftContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract3/SQFIFactory.sol\":252:444  contract SQFItemFactory ... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract3/SQFIFactory.sol\":252:444  contract SQFItemFactory ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd56d229d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTContract3/SQFIFactory.sol\":283:309  address public nftContract */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_9:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_14\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_10:\n        /* \"#utility.yul\":328:352   */\n      tag_16\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_9\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_7:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_18\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_10\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122043ba365bdfbdec6bba2ed8175842c3a119f57c736c5697d94a3f2315c093879464736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060f78061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063d56d229d14602d575b600080fd5b60336047565b604051603e919060a8565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000609482606b565b9050919050565b60a281608b565b82525050565b600060208201905060bb6000830184609b565b9291505056fea264697066735822122043ba365bdfbdec6bba2ed8175842c3a119f57c736c5697d94a3f2315c093879464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF7 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD56D229D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x94 DUP3 PUSH1 0x6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA2 DUP2 PUSH1 0x8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBB PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xBA CALLDATASIZE JUMPDEST 0xDF 0xBD 0xEC PUSH12 0xBA2ED8175842C3A119F57C73 PUSH13 0x5697D94A3F2315C09387946473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "252:192:15:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@nftContract_2188": {
									"entryPoint": 71,
									"id": 2188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:590:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "84:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "73:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:17",
														"type": ""
													}
												],
												"src": "7:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "184:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "194:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "205:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "166:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "176:7:17",
														"type": ""
													}
												],
												"src": "139:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "306:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "316:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "316:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "294:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "301:3:17",
														"type": ""
													}
												],
												"src": "241:118:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "463:124:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "473:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "496:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "577:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:71:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "435:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "447:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "458:4:17",
														"type": ""
													}
												],
												"src": "365:222:17"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063d56d229d14602d575b600080fd5b60336047565b604051603e919060a8565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000609482606b565b9050919050565b60a281608b565b82525050565b600060208201905060bb6000830184609b565b9291505056fea264697066735822122043ba365bdfbdec6bba2ed8175842c3a119f57c736c5697d94a3f2315c093879464736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD56D229D EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3E SWAP2 SWAP1 PUSH1 0xA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x94 DUP3 PUSH1 0x6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA2 DUP2 PUSH1 0x8B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xBB PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xBA CALLDATASIZE JUMPDEST 0xDF 0xBD 0xEC PUSH12 0xBA2ED8175842C3A119F57C73 PUSH13 0x5697D94A3F2315C09387946473 PUSH16 0x6C634300080D00330000000000000000 ",
							"sourceMap": "252:192:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;283:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;7:126:17:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "49400",
								"executionCost": "99",
								"totalCost": "49499"
							},
							"external": {
								"nftContract()": "2489"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 252,
									"end": 444,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 252,
									"end": 444,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043ba365bdfbdec6bba2ed8175842c3a119f57c736c5697d94a3f2315c093879464736f6c634300080d0033",
									".code": [
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "D56D229D"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 444,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 252,
											"end": 444,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "tag",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 283,
											"end": 309,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 283,
											"end": 309,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"nftContract()": "d56d229d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"externalId\",\"type\":\"string\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/SQFIFactory.sol\":\"SQFItemFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Address.sol\":{\"keccak256\":\"0x4f73eedf878079f3c11b05bb9db39c789ae782c0c1a15a8a31ad36aa7047a32f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c23c79bf4124e0b203677c5ab55ce73d8faf43f0d5c49b071c9f9f16fee74249\",\"dweb:/ipfs/QmNsMhnyeFS22LXmGGG7j6eto36bz8SEGbfDGPVu1EZcB8\"]},\"contracts/NFTContract3/Context.sol\":{\"keccak256\":\"0x2d9821ede311a3c16183811be8bdc666e88c69d9d50321e3dff025fe7630d373\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3719bc7fe267a79e84641b88901b10dbc58d27edaea65b7811d39ca7d2a3e409\",\"dweb:/ipfs/QmRDDpaByM3MhWs61gXmfaxoygifCJhLvguEFDGahhWMfX\"]},\"contracts/NFTContract3/Counters.sol\":{\"keccak256\":\"0x632d89cfbd5134bb48ab9f27f8acb3ef6230858240a06c01860523508cce9502\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a5aa5f1e2c16072e5b0976a2441d03b2a64e54b89eaed53b68f93d5838b4f0\",\"dweb:/ipfs/Qmax5x4ubHZdFoRRFKdiCKX9FY78UiKMSAQmP81Mszecop\"]},\"contracts/NFTContract3/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"]},\"contracts/NFTContract3/ERC721.sol\":{\"keccak256\":\"0x3d17be12e89003806dbc7d6213577031eed629bdeebe0a3d5217613476c375ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://255e40094c0e42e5a258f2602921cbf4e1d4562be66a4f05b31ab96793cf54d0\",\"dweb:/ipfs/QmZchvZz3r1EzTvNrKe2EoZ4BLoUfpXe1TGazJm8caKLGk\"]},\"contracts/NFTContract3/ERC721Burnable.sol\":{\"keccak256\":\"0xff9feb9fe1f2c594b6d927eb39ed9ae8e4d082891581116eeb484ca5420bd0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ccf2ee73795fed324763f13b666c4d5c9c708c3156ea7f25f242e897179f449\",\"dweb:/ipfs/Qmafy8hPCnzgTsJuPAiueotdUTh58RhYN61fCiX5qo8Wum\"]},\"contracts/NFTContract3/ERC721Enumerable.sol\":{\"keccak256\":\"0x130afbf03759fe8d6615ad3e977b26ead89c5985351c0bd5d78f7a512fb71ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d1de3d4e9528762eb4960c7f10ae50c0d80c054221dc2bfaf6b144a10b0f78\",\"dweb:/ipfs/QmeqneJX1rUtf2sbHSf5BwnmPLkwXFm1BRKwdnr98HgmQ3\"]},\"contracts/NFTContract3/ERC721URIStorage.sol\":{\"keccak256\":\"0x753a6d3345a891caa1c379671308cf4bc139262980955093d925663a9b7fc390\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://869abdabf76e28e4c4bdaeb011321aa86bef70a80278bb5464299576d31a4163\",\"dweb:/ipfs/QmQFWSTqTmprtBYa4CT29HxWbiHnyHMF9q2zJUAm72tFQQ\"]},\"contracts/NFTContract3/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]},\"contracts/NFTContract3/IERC721.sol\":{\"keccak256\":\"0x2bafd2b210b62dab214f0ca6fc4a017e7d3a074b55a575f79774d33cbb1ef062\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c22fcd4ad1ca48aa1b6c62bd5685088d5a6ed3216dae2decb0b8a771e8ce4a7f\",\"dweb:/ipfs/QmXyiVqjmSXJBE9U7icCrN4LAAbx9TmZTbA7SNNZ8pgETd\"]},\"contracts/NFTContract3/IERC721Enumerable.sol\":{\"keccak256\":\"0x70425e4b2a4451fa570f8a98b73014602e175dda0c8ce712b96e81f23fb8c047\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0dbc178d7d1b3e5417a992b7620a9a99af8c46ebaed230a2c5501e7ab0d0bbe\",\"dweb:/ipfs/QmNTFCW3CHW4sqZgoxFSQvjihyDfMZXenTT5Y9XsbRoeEN\"]},\"contracts/NFTContract3/IERC721Metadata.sol\":{\"keccak256\":\"0x23e882d3b074890de42e57af24d0a860eb341e04778a8f15f1a2ed90007b3499\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3d84ff3c7e4f7739dd5d3528c571310c76c11da07c20e1aa70bfb1d82dd5d29\",\"dweb:/ipfs/QmV5sGjniV5qVa5jEwhQAD82i4j2tJ8pzHPrQvUbs6jhNb\"]},\"contracts/NFTContract3/IERC721Receiver.sol\":{\"keccak256\":\"0xc66c39db95b4f7b0c01f9ae6585a9bbc6d8415d7be14db9dfd871b8bd671f7e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6cd8d0fb37823a820754b93cb6a7c32cd13fd6f98190515bb7d4a086ac88833\",\"dweb:/ipfs/Qmc14KrMucFrkykM4KJAfGK4BkCFJyZvkzDzoHhPucEgqC\"]},\"contracts/NFTContract3/Ownable.sol\":{\"keccak256\":\"0x28adb5f006cef52b73b613db99d0bc113d7b129a021e594dfdcf50225f260b3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3789666515f95aea6d9d3ebdbc25d7434182ba5599a7c2823ddd51bc5b6a0174\",\"dweb:/ipfs/QmSjW9pxWLnwqYKptEVQkxB8UWk99HuDGMZa6NjMBFoy5o\"]},\"contracts/NFTContract3/Pausable.sol\":{\"keccak256\":\"0x9e1b993a4e508c726b7640c483de94e9c984735a4a40168c1e2ba154041fb925\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2271b3c2ddcbb47879a6de3d1ae50c7771a875cefc4d1a580f6f0d1af7e0f4f\",\"dweb:/ipfs/QmSDuNgGS4zLj5ZLwdyszNXKGpfWeUo5bvnyG2UrmSCjdS\"]},\"contracts/NFTContract3/SQFIFactory.sol\":{\"keccak256\":\"0x88f74a5034d29e3a2b92ef6b2102298269572cc3740422279beeb8d3ed20552c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ed830954e2d759b19cbc678dcaa1fbcc0ac075f895551457dec7f19182db739\",\"dweb:/ipfs/QmbGjUtDszcPrn3jNZGUuuL6H8RpoA3FrR8kvEgxkw3xNu\"]},\"contracts/NFTContract3/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2188,
								"contract": "contracts/NFTContract3/SQFIFactory.sol:SQFItemFactory",
								"label": "nftContract",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract3/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract3/Strings.sol\":146:2031  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract3/Strings.sol\":146:2031  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c9e8087ef21e5d8668b04070b6e7ea1915371e77e393706fec5a012fea6a805264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9e8087ef21e5d8668b04070b6e7ea1915371e77e393706fec5a012fea6a805264736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xE8 ADDMOD PUSH31 0xF21E5D8668B04070B6E7EA1915371E77E393706FEC5A012FEA6A805264736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "146:1885:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9e8087ef21e5d8668b04070b6e7ea1915371e77e393706fec5a012fea6a805264736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 0xE8 ADDMOD PUSH31 0xF21E5D8668B04070B6E7EA1915371E77E393706FEC5A012FEA6A805264736F PUSH13 0x634300080D0033000000000000 ",
							"sourceMap": "146:1885:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 146,
									"end": 2031,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c9e8087ef21e5d8668b04070b6e7ea1915371e77e393706fec5a012fea6a805264736f6c634300080d0033",
									".code": [
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 146,
											"end": 2031,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract3/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract3/Strings.sol\":{\"keccak256\":\"0x36af8f8be523e084c3ed6932ee5c0a7f038f663d8f1c185f77a810a43e3ae1cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96fa73b388e04aafcebe0d82f8e5d3a072eddc91e09ee82be6dbeaad05370f6c\",\"dweb:/ipfs/QmfEn7ttDhAHaApZHMb3XT7tA1M2SU5Rvqk3iKER7U2Pxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTContract3/Address.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/Address.sol",
					"exportedSymbols": {
						"Address": [
							294
						]
					},
					"id": 295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 294,
							"linearizedBaseContracts": [
								294
							],
							"name": "Address",
							"nameLocation": "202:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "1241:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 14,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 10,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1465:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 11,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 15,
												"nodeType": "Return",
												"src": "1458:30:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1195:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "1235:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:0"
									},
									"scope": 294,
									"src": "1175:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "2483:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 28,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 27,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 26,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 31,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2526:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 25,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:0"
											},
											{
												"assignments": [
													37,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 37,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 50,
														"src": "2578:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 36,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 44,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 38,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "2596:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 40,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2618:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "2647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 51,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2431:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "2458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:0"
									},
									"scope": 294,
									"src": "2412:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "3555:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 62,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 63,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3593:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 61,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															68,
															88
														],
														"referencedDeclaration": 88,
														"src": "3572:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 60,
												"id": 66,
												"nodeType": "Return",
												"src": "3565:67:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 55,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3541:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:0"
									},
									"scope": 294,
									"src": "3466:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "4008:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "4047:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 82,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "4055:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 84,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "4064:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 80,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4025:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 79,
												"id": 86,
												"nodeType": "Return",
												"src": "4018:59:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3892:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3916:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3943:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "3994:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:0"
									},
									"scope": 294,
									"src": "3861:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "4589:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "4628:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 102,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4636:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4642:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 100,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															158
														],
														"referencedDeclaration": 158,
														"src": "4606:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 99,
												"id": 106,
												"nodeType": "Return",
												"src": "4599:94:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4486:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4510:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 92,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "4575:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 97,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:0"
									},
									"scope": 294,
									"src": "4446:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5127:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 125,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$294",
																				"typeString": "library Address"
																			}
																		],
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 123,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 127,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 128,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5170:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 135,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5247:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 134,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "5236:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:0"
											},
											{
												"assignments": [
													141,
													143
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5300:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "5314:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 142,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 150,
												"initialValue": {
													"arguments": [
														{
															"id": 148,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "5367:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 144,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "5341:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 146,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 115,
																"src": "5360:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 152,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "5406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 153,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5415:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 154,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "5427:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 151,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "5389:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 121,
												"id": 156,
												"nodeType": "Return",
												"src": "5382:58:0"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "4988:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5012:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5062:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5113:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:0"
									},
									"scope": 294,
									"src": "4948:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "5724:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "5760:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5768:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 168,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															175,
															210
														],
														"referencedDeclaration": 210,
														"src": "5741:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 167,
												"id": 173,
												"nodeType": "Return",
												"src": "5734:80:0"
											}
										]
									},
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5668:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 162,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5710:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 165,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:0"
									},
									"scope": 294,
									"src": "5624:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "6163:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 189,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 178,
																	"src": "6192:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 188,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "6181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 187,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:0"
											},
											{
												"assignments": [
													195,
													197
												],
												"declarations": [
													{
														"constant": false,
														"id": 195,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6252:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 194,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 209,
														"src": "6266:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 196,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 198,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "6293:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "6350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 205,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 206,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6371:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 203,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "6333:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 186,
												"id": 208,
												"nodeType": "Return",
												"src": "6326:58:0"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6042:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6066:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 179,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6093:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 181,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "6149:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:0"
									},
									"scope": 294,
									"src": "6005:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "6667:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "6705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6713:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 220,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															227,
															262
														],
														"referencedDeclaration": 262,
														"src": "6684:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 219,
												"id": 225,
												"nodeType": "Return",
												"src": "6677:84:0"
											}
										]
									},
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6600:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6616:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 214,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:0"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "6653:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:0"
									},
									"scope": 294,
									"src": "6570:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7109:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 241,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "7138:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 240,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 17,
																"src": "7127:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 239,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 245,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:0"
											},
											{
												"assignments": [
													247,
													249
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7200:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 246,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 261,
														"src": "7214:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 248,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 254,
												"initialValue": {
													"arguments": [
														{
															"id": 252,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7261:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 250,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7241:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 256,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7300:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 257,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 258,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "7321:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 255,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "7283:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 238,
												"id": 260,
												"nodeType": "Return",
												"src": "7276:58:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "6993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7017:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 231,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7044:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 233,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7095:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:0"
									},
									"scope": 294,
									"src": "6954:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "7721:532:0",
										"statements": [
											{
												"condition": {
													"id": 274,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "7735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "7792:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 278,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "7876:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 288,
																"nodeType": "Block",
																"src": "8184:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 285,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "8209:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 284,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 287,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:0"
																	}
																]
															},
															"id": 289,
															"nodeType": "IfStatement",
															"src": "7872:365:0",
															"trueBody": {
																"id": 283,
																"nodeType": "Block",
																"src": "7899:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 267,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 282,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "7731:516:0",
												"trueBody": {
													"id": 277,
													"nodeType": "Block",
													"src": "7744:42:0",
													"statements": [
														{
															"expression": {
																"id": 275,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "7765:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 273,
															"id": 276,
															"nodeType": "Return",
															"src": "7758:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7596:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7618:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 266,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7651:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 268,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "7707:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:0"
									},
									"scope": 294,
									"src": "7561:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 295,
							"src": "194:8061:0",
							"usedErrors": []
						}
					],
					"src": "101:8154:0"
				},
				"id": 0
			},
			"contracts/NFTContract3/Context.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/Context.sol",
					"exportedSymbols": {
						"Context": [
							316
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 297,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 302,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 301,
												"id": 304,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 316,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 311,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 310,
												"id": 313,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 316,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 317,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:757:1"
				},
				"id": 1
			},
			"contracts/NFTContract3/Counters.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							390
						]
					},
					"id": 391,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:2",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 390,
							"linearizedBaseContracts": [
								390
							],
							"name": "Counters",
							"nameLocation": "432:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 322,
									"members": [
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "786:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:2",
									"nodeType": "StructDefinition",
									"scope": 390,
									"src": "447:374:2",
									"visibility": "public"
								},
								{
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "901:38:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 330,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "918:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 321,
													"src": "918:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 329,
												"id": 332,
												"nodeType": "Return",
												"src": "911:21:2"
											}
										]
									},
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "844:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 324,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 323,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "844:7:2"
													},
													"referencedDeclaration": 322,
													"src": "844:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "892:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:2"
									},
									"scope": 390,
									"src": "827:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "998:70:2",
										"statements": [
											{
												"id": 346,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:2",
												"statements": [
													{
														"expression": {
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 340,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 337,
																	"src": "1032:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "1032:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 345,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:2"
													}
												]
											}
										]
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "964:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 335,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "964:7:2"
													},
													"referencedDeclaration": 322,
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:2"
									},
									"scope": 390,
									"src": "945:123:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1127:176:2",
										"statements": [
											{
												"assignments": [
													355
												],
												"declarations": [
													{
														"constant": false,
														"id": 355,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 375,
														"src": "1137:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"expression": {
														"id": 356,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "1153:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 357,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 321,
													"src": "1153:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "1185:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 365,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:2"
											},
											{
												"id": 374,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:2",
												"statements": [
													{
														"expression": {
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 366,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "1260:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 368,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 321,
																"src": "1260:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "1277:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 373,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:2"
													}
												]
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1093:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 350,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 349,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "1093:7:2"
													},
													"referencedDeclaration": 322,
													"src": "1093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:2"
									},
									"scope": 390,
									"src": "1074:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1358:35:2",
										"statements": [
											{
												"expression": {
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 382,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "1368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 384,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "1368:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:2"
											}
										]
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1324:23:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 378,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 377,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "1324:7:2"
													},
													"referencedDeclaration": 322,
													"src": "1324:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$322_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:2"
									},
									"scope": 390,
									"src": "1309:84:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 391,
							"src": "424:971:2",
							"usedErrors": []
						}
					],
					"src": "87:1308:2"
				},
				"id": 2
			},
			"contracts/NFTContract3/ERC165.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							414
						],
						"IERC165": [
							1788
						]
					},
					"id": 415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 392,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:3"
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 415,
							"sourceUnit": 1789,
							"src": "124:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 395,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "754:7:3"
									},
									"id": 396,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 394,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 414,
							"linearizedBaseContracts": [
								414,
								1788
							],
							"name": "ERC165",
							"nameLocation": "744:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1787
									],
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "920:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 405,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "937:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 407,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1788,
																	"src": "957:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1788_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1788_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 406,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1788",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 404,
												"id": 411,
												"nodeType": "Return",
												"src": "930:47:3"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:3",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 401,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:3"
									},
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "856:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 398,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:3"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 402,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:3"
									},
									"scope": 414,
									"src": "829:155:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 415,
							"src": "726:260:3",
							"usedErrors": []
						}
					],
					"src": "99:887:3"
				},
				"id": 3
			},
			"contracts/NFTContract3/ERC721.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC165": [
							414
						],
						"ERC721": [
							1280
						],
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Metadata": [
							1962
						],
						"IERC721Receiver": [
							1980
						],
						"Strings": [
							2402
						]
					},
					"id": 1281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 416,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 417,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 1905,
							"src": "132:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 418,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 1981,
							"src": "156:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC721Metadata.sol",
							"file": "./IERC721Metadata.sol",
							"id": 419,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 1963,
							"src": "188:31:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Address.sol",
							"file": "./Address.sol",
							"id": 420,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 295,
							"src": "220:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Context.sol",
							"file": "./Context.sol",
							"id": 421,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 317,
							"src": "244:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Strings.sol",
							"file": "./Strings.sol",
							"id": 422,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 2403,
							"src": "268:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC165.sol",
							"file": "./ERC165.sol",
							"id": 423,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1281,
							"sourceUnit": 415,
							"src": "292:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 425,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "582:7:4"
									},
									"id": 426,
									"nodeType": "InheritanceSpecifier",
									"src": "582:7:4"
								},
								{
									"baseName": {
										"id": 427,
										"name": "ERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 414,
										"src": "591:6:4"
									},
									"id": 428,
									"nodeType": "InheritanceSpecifier",
									"src": "591:6:4"
								},
								{
									"baseName": {
										"id": 429,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1904,
										"src": "599:7:4"
									},
									"id": 430,
									"nodeType": "InheritanceSpecifier",
									"src": "599:7:4"
								},
								{
									"baseName": {
										"id": 431,
										"name": "IERC721Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1962,
										"src": "608:15:4"
									},
									"id": 432,
									"nodeType": "InheritanceSpecifier",
									"src": "608:15:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 424,
								"nodeType": "StructuredDocumentation",
								"src": "316:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1280,
							"linearizedBaseContracts": [
								1280,
								1962,
								1904,
								414,
								1788,
								316
							],
							"name": "ERC721",
							"nameLocation": "572:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 435,
									"libraryName": {
										"id": 433,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 294,
										"src": "636:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "630:26:4",
									"typeName": {
										"id": 434,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "648:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 438,
									"libraryName": {
										"id": 436,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2402,
										"src": "667:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "661:26:4",
									"typeName": {
										"id": 437,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "679:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 440,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "726:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1280,
									"src": "711:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 439,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "711:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "773:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1280,
									"src": "758:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 441,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "758:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 446,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "869:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1280,
									"src": "833:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 445,
										"keyType": {
											"id": 443,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "841:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "833:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 444,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "852:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 450,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "963:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1280,
									"src": "927:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 449,
										"keyType": {
											"id": 447,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "935:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "927:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 448,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "946:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 454,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1064:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1280,
									"src": "1028:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 453,
										"keyType": {
											"id": 451,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1036:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1028:27:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 452,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1047:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 460,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1187:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1280,
									"src": "1134:71:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 459,
										"keyType": {
											"id": 455,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1142:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1134:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueType": {
											"id": 458,
											"keyType": {
												"id": 456,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1161:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1153:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueType": {
												"id": 457,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1172:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "1381:57:4",
										"statements": [
											{
												"expression": {
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 468,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "1391:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 469,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1399:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1391:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 471,
												"nodeType": "ExpressionStatement",
												"src": "1391:13:4"
											},
											{
												"expression": {
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 472,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1414:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 473,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "1424:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1414:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "1414:17:4"
											}
										]
									},
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1212:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 477,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1337:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1337:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1372:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "1358:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 464,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1358:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:44:4"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:4"
									},
									"scope": 1280,
									"src": "1325:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										413,
										1787
									],
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "1613:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 488,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "1642:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 490,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1904,
																			"src": "1662:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1904_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1904_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 489,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1657:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1657:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1904",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1657:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1642:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 494,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 496,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "1718:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1962_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1962_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 495,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1962",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1642:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 503,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "1786:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 501,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1762:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1280_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 413,
															"src": "1762:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1762:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1642:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 487,
												"id": 506,
												"nodeType": "Return",
												"src": "1623:175:4"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "1444:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1514:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 484,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 482,
												"name": "ERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "1581:6:4"
											},
											{
												"id": 483,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1788,
												"src": "1589:7:4"
											}
										],
										"src": "1572:25:4"
									},
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1539:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1532:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 479,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1532:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1531:20:4"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "1607:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 485,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1607:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:6:4"
									},
									"scope": 1280,
									"src": "1505:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1829
									],
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "1945:124:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 518,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 511,
																"src": "1963:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1980:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1972:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 519,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1972:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1972:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1963:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1984:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															},
															"value": "ERC721: balance query for the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
																"typeString": "literal_string \"ERC721: balance query for the zero address\""
															}
														],
														"id": 517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1955:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "1955:74:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 527,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "2046:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 529,
													"indexExpression": {
														"id": 528,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "2056:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2046:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 516,
												"id": 530,
												"nodeType": "Return",
												"src": "2039:23:4"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "1811:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1873:9:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 513,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1918:8:4"
									},
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1891:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1883:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1882:15:4"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "1936:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1935:9:4"
									},
									"scope": 1280,
									"src": "1864:205:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1837
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2207:154:4",
										"statements": [
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2225:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "2217:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 541,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2217:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 546,
												"initialValue": {
													"baseExpression": {
														"id": 543,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "2233:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 545,
													"indexExpression": {
														"id": 544,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2241:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2233:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2217:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 548,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 542,
																"src": "2267:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2284:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 550,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2276:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 549,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2276:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2276:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2267:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2288:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															},
															"value": "ERC721: owner query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
																"typeString": "literal_string \"ERC721: owner query for nonexistent token\""
															}
														],
														"id": 547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2259:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2259:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2259:73:4"
											},
											{
												"expression": {
													"id": 557,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 542,
													"src": "2349:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 540,
												"id": 558,
												"nodeType": "Return",
												"src": "2342:12:4"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "2075:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2135:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 537,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2180:8:4"
									},
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2151:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2143:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2142:17:4"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "2198:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:9:4"
									},
									"scope": 1280,
									"src": "2126:235:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1947
									],
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "2492:29:4",
										"statements": [
											{
												"expression": {
													"id": 567,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "2509:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 566,
												"id": 568,
												"nodeType": "Return",
												"src": "2502:12:4"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "2367:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2432:4:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 563,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2459:8:4"
									},
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2436:2:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "2477:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 564,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2477:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2476:15:4"
									},
									"scope": 1280,
									"src": "2423:98:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1953
									],
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "2656:31:4",
										"statements": [
											{
												"expression": {
													"id": 577,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 442,
													"src": "2673:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 576,
												"id": 578,
												"nodeType": "Return",
												"src": "2666:14:4"
											}
										]
									},
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "2527:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2594:6:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 573,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2623:8:4"
									},
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:2:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "2641:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 574,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2641:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:15:4"
									},
									"scope": 1280,
									"src": "2585:102:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1961
									],
									"body": {
										"id": 621,
										"nodeType": "Block",
										"src": "2841:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 591,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "2867:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 590,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2859:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2859:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2877:49:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															},
															"value": "ERC721Metadata: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
																"typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "2851:76:4"
											},
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2952:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 621,
														"src": "2938:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 596,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2938:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 598,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "2962:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2962:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2938:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 603,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "2995:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2989:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2989:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2989:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2989:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3013:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2989:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3073:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2989:86:4",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 612,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "3041:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 613,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 583,
																				"src": "3050:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2284,
																			"src": "3050:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3050:18:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 610,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3024:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3024:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3024:45:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3017:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 608,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3017:6:4",
																"typeDescriptions": {}
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3017:53:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 588,
												"id": 620,
												"nodeType": "Return",
												"src": "2982:93:4"
											}
										]
									},
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "2693:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 622,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2762:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 585,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2808:8:4"
									},
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2779:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2771:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2771:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:17:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2826:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 586,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2826:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2825:15:4"
									},
									"scope": 1280,
									"src": "2753:329:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "3389:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3406:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 627,
												"id": 629,
												"nodeType": "Return",
												"src": "3399:9:4"
											}
										]
									},
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "3088:230:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3332:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3340:2:4"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "3374:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3374:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:15:4"
									},
									"scope": 1280,
									"src": "3323:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1865
									],
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "3542:331:4",
										"statements": [
											{
												"assignments": [
													641
												],
												"declarations": [
													{
														"constant": false,
														"id": 641,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3560:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 673,
														"src": "3552:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 640,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3552:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"arguments": [
														{
															"id": 644,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "3583:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 642,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "3568:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "3568:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3568:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3552:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 648,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "3609:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 649,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "3615:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3609:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3622:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 647,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3601:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3601:57:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "3601:57:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 655,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "3690:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3690:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 657,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "3706:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3690:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 660,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "3732:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 661,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "3739:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3739:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 659,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "3715:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3715:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3690:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3766:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															},
															"value": "ERC721: approve caller is not owner nor approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
																"typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
															}
														],
														"id": 654,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3669:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3669:165:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "3669:165:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3854:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "3858:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 668,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3845:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3845:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3845:21:4"
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "3421:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3481:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 638,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3533:8:4"
									},
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3497:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3489:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3509:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "3501:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3488:29:4"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3542:0:4"
									},
									"scope": 1280,
									"src": "3472:401:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1873
									],
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "4019:132:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 685,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "4045:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 684,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "4037:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4037:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4055:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															},
															"value": "ERC721: approved query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
																"typeString": "literal_string \"ERC721: approved query for nonexistent token\""
															}
														],
														"id": 683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4029:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4029:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "4029:73:4"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 690,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "4120:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 692,
													"indexExpression": {
														"id": 691,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 677,
														"src": "4136:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4120:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 682,
												"id": 693,
												"nodeType": "Return",
												"src": "4113:31:4"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "3879:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3943:11:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 679,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3992:8:4"
									},
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3963:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3955:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3955:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3954:17:4"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "4010:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4009:9:4"
									},
									"scope": 1280,
									"src": "3934:217:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1881
									],
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "4302:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 705,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "4331:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4331:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "4345:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 708,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4355:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 704,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1195,
														"src": "4312:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4312:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 710,
												"nodeType": "ExpressionStatement",
												"src": "4312:52:4"
											}
										]
									},
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "4157:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4227:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 702,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4293:8:4"
									},
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4253:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4245:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4268:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "4263:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 699,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4263:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:33:4"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4302:0:4"
									},
									"scope": 1280,
									"src": "4218:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1891
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4540:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 723,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "4557:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 725,
														"indexExpression": {
															"id": 724,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "4576:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4557:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 727,
													"indexExpression": {
														"id": 726,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "4583:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4557:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 722,
												"id": 728,
												"nodeType": "Return",
												"src": "4550:42:4"
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "4377:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4446:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 719,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4516:8:4"
									},
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4471:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4463:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4486:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4478:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4462:33:4"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "4534:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4534:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4533:6:4"
									},
									"scope": 1280,
									"src": "4437:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1857
									],
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "4780:211:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 743,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "4869:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4869:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 745,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "4883:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 742,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "4850:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4893:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 749,
												"nodeType": "ExpressionStatement",
												"src": "4842:103:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 751,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4966:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 752,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "4972:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 753,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "4976:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 750,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "4956:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4956:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "4956:28:4"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4605:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4670:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 739,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4771:8:4"
									},
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4700:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4692:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4722:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4714:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "4734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4734:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:73:4"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4780:0:4"
									},
									"scope": 1280,
									"src": "4661:330:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1847
									],
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "5180:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "5207:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "5213:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "5217:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5226:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 768,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															776,
															806
														],
														"referencedDeclaration": 806,
														"src": "5190:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5190:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "5190:39:4"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "4997:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5066:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 766,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5171:8:4"
									},
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5100:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5092:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5122:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5114:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5114:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5142:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "5134:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 763,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5082:73:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5180:0:4"
									},
									"scope": 1280,
									"src": "5057:179:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1903
									],
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "5453:169:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 791,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "5490:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5490:12:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 793,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5504:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 790,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "5471:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5471:41:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5514:51:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															},
															"value": "ERC721: transfer caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
																"typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
															}
														],
														"id": 789,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5463:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5463:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "5463:103:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "5590:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5596:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 801,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "5600:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 802,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5609:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 798,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "5576:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5576:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "5576:39:4"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "5242:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5311:16:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 787,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5444:8:4"
									},
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5345:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5337:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5337:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5367:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5359:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5387:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5379:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5379:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "5417:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5404:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 784,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5404:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:101:4"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5453:0:4"
									},
									"scope": 1280,
									"src": "5302:320:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "6625:166:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "6645:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "6651:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "6655:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1139,
														"src": "6635:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6635:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "6635:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 826,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "6704:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 827,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 811,
																	"src": "6710:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 828,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "6714:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 829,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 815,
																	"src": "6723:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 825,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "6681:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6681:48:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6731:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6673:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6673:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 833,
												"nodeType": "ExpressionStatement",
												"src": "6673:111:4"
											}
										]
									},
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "5628:851:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6493:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6524:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "6516:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6516:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6546:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "6538:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6566:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "6558:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "6596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "6583:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 814,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6583:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6506:101:4"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6625:0:4"
									},
									"scope": 1280,
									"src": "6484:307:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "7165:54:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 843,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7182:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 845,
														"indexExpression": {
															"id": 844,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "7190:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7182:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7210:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7202:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7202:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7202:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7182:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 842,
												"id": 851,
												"nodeType": "Return",
												"src": "7175:37:4"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "6797:292:4",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "7103:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7119:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "7111:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7110:17:4"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "7159:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7159:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7158:6:4"
									},
									"scope": 1280,
									"src": "7094:125:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "7476:245:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 865,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "7502:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 864,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "7494:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7494:16:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7512:46:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															},
															"value": "ERC721: operator query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
																"typeString": "literal_string \"ERC721: operator query for nonexistent token\""
															}
														],
														"id": 863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7486:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7486:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "7486:73:4"
											},
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7577:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 893,
														"src": "7569:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 870,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7569:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"initialValue": {
													"arguments": [
														{
															"id": 874,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7600:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 872,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "7585:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "7585:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7585:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7569:39:4"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 877,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "7626:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 878,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7637:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7626:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 881,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 858,
																				"src": "7658:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 880,
																			"name": "getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "7646:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7646:20:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 883,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "7670:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "7646:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "7626:51:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 887,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "7698:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 888,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 856,
																		"src": "7705:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 886,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "7681:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7681:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7626:87:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 891,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7625:89:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 862,
												"id": 892,
												"nodeType": "Return",
												"src": "7618:96:4"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "7225:147:4",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "7386:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7413:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "7405:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7430:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "7422:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7422:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7404:34:4"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "7470:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7470:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7469:6:4"
									},
									"scope": 1280,
									"src": "7377:344:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "8116:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 903,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "8136:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "8140:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8149:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 902,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															938
														],
														"referencedDeclaration": 938,
														"src": "8126:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8126:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "8126:26:4"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "7727:319:4",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8060:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8078:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "8070:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8070:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8090:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "8082:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8069:29:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8116:0:4"
									},
									"scope": 1280,
									"src": "8051:108:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "8495:196:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "8511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 921,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "8515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 919,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "8505:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8505:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "8505:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8585:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8577:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 926,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8577:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8577:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 930,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "8589:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 931,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "8593:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 932,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "8602:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 925,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1257,
																"src": "8554:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8554:54:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8622:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 924,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8533:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8533:151:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "8533:151:4"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "8165:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "8389:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8416:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8408:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8408:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8436:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8428:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8466:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "8453:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8453:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:79:4"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8495:0:4"
									},
									"scope": 1280,
									"src": "8380:311:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "9074:366:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 947,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "9092:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 950,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9106:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9098:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 948,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9098:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9098:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9092:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9110:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9084:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9084:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 955,
												"nodeType": "ExpressionStatement",
												"src": "9084:61:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9163:17:4",
															"subExpression": {
																"arguments": [
																	{
																		"id": 958,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "9172:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 957,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "9164:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9164:16:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9182:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9155:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9155:58:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "9155:58:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9253:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9245:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9245:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9245:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "9257:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "9261:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 964,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "9224:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9224:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 972,
												"nodeType": "ExpressionStatement",
												"src": "9224:45:4"
											},
											{
												"expression": {
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 973,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9280:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 975,
														"indexExpression": {
															"id": 974,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "9290:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9280:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 976,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9297:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9280:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "9280:18:4"
											},
											{
												"expression": {
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 979,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "9308:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 981,
														"indexExpression": {
															"id": 980,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "9316:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9308:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 982,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 941,
														"src": "9327:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9308:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "9308:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9362:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9354:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 986,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9354:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9354:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 990,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "9366:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "9370:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "9345:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9345:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "EmitStatement",
												"src": "9340:38:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9417:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9409:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 995,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9409:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9409:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "9421:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "9425:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 994,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "9389:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9389:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "9389:44:4"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "8697:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9022:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9036:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "9028:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9028:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9048:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "9040:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9040:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9027:29:4"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9074:0:4"
									},
									"scope": 1280,
									"src": "9013:427:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "9706:357:4",
										"statements": [
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "9724:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "9716:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1010,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9716:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"arguments": [
														{
															"id": 1014,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1012,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "9732:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "9732:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9732:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9716:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "9787:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9802:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9794:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1019,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9794:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9794:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1023,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "9766:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9766:48:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1025,
												"nodeType": "ExpressionStatement",
												"src": "9766:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9869:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9861:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1027,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9861:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9861:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9873:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "9852:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9852:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "9852:29:4"
											},
											{
												"expression": {
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1034,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "9892:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1036,
														"indexExpression": {
															"id": 1035,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "9902:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9892:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9912:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9892:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "9892:21:4"
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "9923:23:4",
													"subExpression": {
														"baseExpression": {
															"id": 1040,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "9930:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1042,
														"indexExpression": {
															"id": 1041,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9930:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "9923:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1046,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "9971:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1049,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9986:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9978:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1047,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9978:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9978:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "9990:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1045,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "9962:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9962:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1053,
												"nodeType": "EmitStatement",
												"src": "9957:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1055,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "10029:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10044:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10036:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1056,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10036:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10036:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "10048:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "10009:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10009:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "10009:47:4"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "9446:206:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9666:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9680:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "9672:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1006,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9672:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9671:17:4"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9706:0:4"
									},
									"scope": 1280,
									"src": "9657:406:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "10496:496:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1071,
																		"src": "10529:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1075,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "10514:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 560,
																	"src": "10514:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10514:23:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1079,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "10541:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10514:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10547:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 1074,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10506:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10506:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "10506:81:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1085,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "10605:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10619:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10611:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1086,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10611:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10611:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10605:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10623:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 1084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10597:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10597:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "10597:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1095,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10694:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1096,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "10700:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1097,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10704:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "10673:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10673:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "10673:39:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10791:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10783:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10783:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10783:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1105,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10795:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "10774:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10774:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "10774:29:4"
											},
											{
												"expression": {
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1108,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "10814:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1110,
														"indexExpression": {
															"id": 1109,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10824:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10814:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10833:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10814:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "10814:20:4"
											},
											{
												"expression": {
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1114,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "10844:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1116,
														"indexExpression": {
															"id": 1115,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "10854:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10844:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10861:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "10844:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "10844:18:4"
											},
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1120,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "10872:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1122,
														"indexExpression": {
															"id": 1121,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10880:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10872:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1123,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "10891:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10872:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "10872:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1127,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10918:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1128,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "10924:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10928:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "10909:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10909:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "EmitStatement",
												"src": "10904:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1133,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "10967:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1134,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "10973:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1135,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "10977:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1132,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "10947:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10947:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "10947:38:4"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "10069:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10396:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10423:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "10415:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10445:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "10437:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10437:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10465:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "10457:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10405:73:4"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10496:0:4"
									},
									"scope": 1280,
									"src": "10387:605:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "11167:107:4",
										"statements": [
											{
												"expression": {
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1147,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "11177:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1149,
														"indexExpression": {
															"id": 1148,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "11193:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11177:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1150,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "11204:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11177:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "11177:29:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1156,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "11245:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1154,
																	"name": "ERC721",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "11230:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																		"typeString": "type(contract ERC721)"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 560,
																"src": "11230:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view returns (address)"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11230:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "11255:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "11259:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1153,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "11221:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11221:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "EmitStatement",
												"src": "11216:51:4"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "10998:100:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11112:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11129:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11121:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11121:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11141:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "11133:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11120:29:4"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11167:0:4"
									},
									"scope": 1280,
									"src": "11103:171:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "11532:184:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1174,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "11550:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1175,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "11559:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11550:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11569:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11542:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11542:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "11542:55:4"
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1180,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "11607:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1183,
															"indexExpression": {
																"id": 1181,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1166,
																"src": "11626:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11607:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"id": 1182,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "11633:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11607:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1185,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "11645:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11607:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "11607:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1189,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "11683:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "11690:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "11700:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1188,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "11668:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11668:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1193,
												"nodeType": "EmitStatement",
												"src": "11663:46:4"
											}
										]
									},
									"documentation": {
										"id": 1164,
										"nodeType": "StructuredDocumentation",
										"src": "11280:124:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "11418:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "11446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11477:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "11469:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "11500:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "11495:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11495:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11436:78:4"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11532:0:4"
									},
									"scope": 1280,
									"src": "11409:307:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1256,
										"nodeType": "Block",
										"src": "12425:622:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1209,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "12439:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "12439:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12439:15:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "13005:36:4",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13026:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1208,
															"id": 1253,
															"nodeType": "Return",
															"src": "13019:11:4"
														}
													]
												},
												"id": 1255,
												"nodeType": "IfStatement",
												"src": "12435:606:4",
												"trueBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "12456:543:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1231,
																		"nodeType": "Block",
																		"src": "12571:91:4",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1229,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1225,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1223,
																						"src": "12596:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1226,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1980,
																								"src": "12606:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1980_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1227,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1979,
																							"src": "12606:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1228,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "12606:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "12596:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1208,
																				"id": 1230,
																				"nodeType": "Return",
																				"src": "12589:58:4"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1232,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1224,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1223,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "12563:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1232,
																				"src": "12556:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1222,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "12556:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12555:15:4"
																	},
																	"src": "12547:115:4"
																},
																{
																	"block": {
																		"id": 1248,
																		"nodeType": "Block",
																		"src": "12691:298:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1239,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1236,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1234,
																							"src": "12713:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1237,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "12713:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1238,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "12713:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1246,
																					"nodeType": "Block",
																					"src": "12840:135:4",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "12871:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "12908:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12912:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "12904:3:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12904:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "12927:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "12921:5:4"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "12921:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "12897:6:4"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12897:38:4"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "12897:38:4"
																									}
																								]
																							},
																							"evmVersion": "london",
																							"externalReferences": [
																								{
																									"declaration": 1234,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12912:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1234,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "12927:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1245,
																							"nodeType": "InlineAssembly",
																							"src": "12862:95:4"
																						}
																					]
																				},
																				"id": 1247,
																				"nodeType": "IfStatement",
																				"src": "12709:266:4",
																				"trueBody": {
																					"id": 1244,
																					"nodeType": "Block",
																					"src": "12733:101:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 1241,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "12762:52:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 1240,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "12755:6:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1242,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "12755:60:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1243,
																							"nodeType": "ExpressionStatement",
																							"src": "12755:60:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1249,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1235,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1234,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "12683:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1249,
																				"src": "12670:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "12670:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "12669:21:4"
																	},
																	"src": "12663:326:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1216,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 306,
																			"src": "12511:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12511:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1218,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "12525:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1219,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1202,
																		"src": "12531:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1220,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "12540:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1213,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "12490:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1212,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1980,
																			"src": "12474:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1980_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12474:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1980",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1979,
																	"src": "12474:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12474:72:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1250,
															"nodeType": "TryStatement",
															"src": "12470:519:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "11722:542:4",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "12278:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12318:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "12310:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12340:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "12332:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "12352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12390:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "12377:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12377:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:101:4"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "12419:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12419:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12418:6:4"
									},
									"scope": 1280,
									"src": "12269:778:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "13723:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "13053:545:4",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13612:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13650:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "13642:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13642:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13672:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "13664:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13664:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13692:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1268,
												"src": "13684:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13632:73:4"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13723:0:4"
									},
									"scope": 1280,
									"src": "13603:122:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "14216:2:4",
										"statements": []
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "13731:361:4",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "14106:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "14143:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "14135:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14135:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14165:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "14157:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14157:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14185:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "14177:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14177:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14125:73:4"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14216:0:4"
									},
									"scope": 1280,
									"src": "14097:121:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1281,
							"src": "563:13657:4",
							"usedErrors": []
						}
					],
					"src": "107:14113:4"
				},
				"id": 4
			},
			"contracts/NFTContract3/ERC721Burnable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/ERC721Burnable.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC165": [
							414
						],
						"ERC721": [
							1280
						],
						"ERC721Burnable": [
							1310
						],
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Metadata": [
							1962
						],
						"IERC721Receiver": [
							1980
						],
						"Strings": [
							2402
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "111:23:5"
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 1283,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 1281,
							"src": "136:22:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Context.sol",
							"file": "./Context.sol",
							"id": 1284,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1311,
							"sourceUnit": 317,
							"src": "159:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1286,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "326:7:5"
									},
									"id": 1287,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:5"
								},
								{
									"baseName": {
										"id": 1288,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "335:6:5"
									},
									"id": 1289,
									"nodeType": "InheritanceSpecifier",
									"src": "335:6:5"
								}
							],
							"canonicalName": "ERC721Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "184:105:5",
								"text": " @title ERC721 Burnable Token\n @dev ERC721 Token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": false,
							"id": 1310,
							"linearizedBaseContracts": [
								1310,
								1280,
								1962,
								1904,
								414,
								1788,
								316
							],
							"name": "ERC721Burnable",
							"nameLocation": "308:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "561:195:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1297,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "650:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "650:12:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1299,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "664:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1296,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "631:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "631:41:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "674:50:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															},
															"value": "ERC721Burnable: caller is not owner nor approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ee6b7e810d7b317242d4688e6943ff4dd7897bb01d903b1a666812481b12a4f1",
																"typeString": "literal_string \"ERC721Burnable: caller is not owner nor approved\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "623:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "623:102:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "623:102:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1305,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "741:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1304,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "735:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "735:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "735:14:5"
											}
										]
									},
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "348:162:5",
										"text": " @dev Burns `tokenId`. See {ERC721-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "524:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "537:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "529:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:17:5"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:0:5"
									},
									"scope": 1310,
									"src": "515:241:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1311,
							"src": "290:468:5",
							"usedErrors": []
						}
					],
					"src": "111:647:5"
				},
				"id": 5
			},
			"contracts/NFTContract3/ERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/ERC721Enumerable.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC165": [
							414
						],
						"ERC721": [
							1280
						],
						"ERC721Enumerable": [
							1648
						],
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Enumerable": [
							1935
						],
						"IERC721Metadata": [
							1962
						],
						"IERC721Receiver": [
							1980
						],
						"Strings": [
							2402
						]
					},
					"id": 1649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:6"
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1649,
							"sourceUnit": 1281,
							"src": "138:22:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC721Enumerable.sol",
							"file": "./IERC721Enumerable.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1649,
							"sourceUnit": 1936,
							"src": "161:33:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1316,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "434:6:6"
									},
									"id": 1317,
									"nodeType": "InheritanceSpecifier",
									"src": "434:6:6"
								},
								{
									"baseName": {
										"id": 1318,
										"name": "IERC721Enumerable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1935,
										"src": "442:17:6"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "442:17:6"
								}
							],
							"canonicalName": "ERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1315,
								"nodeType": "StructuredDocumentation",
								"src": "196:199:6",
								"text": " @dev This implements an optional extension of {ERC721} defined in the EIP that adds\n enumerability of all the token ids in the contract as well as all token ids owned by each\n account."
							},
							"fullyImplemented": false,
							"id": 1648,
							"linearizedBaseContracts": [
								1648,
								1935,
								1280,
								1962,
								1904,
								414,
								1788,
								316
							],
							"name": "ERC721Enumerable",
							"nameLocation": "414:16:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1325,
									"mutability": "mutable",
									"name": "_ownedTokens",
									"nameLocation": "575:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1648,
									"src": "519:68:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(uint256 => uint256))"
									},
									"typeName": {
										"id": 1324,
										"keyType": {
											"id": 1320,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "527:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "519:47:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(uint256 => uint256))"
										},
										"valueType": {
											"id": 1323,
											"keyType": {
												"id": 1321,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "538:27:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
												"typeString": "mapping(uint256 => uint256)"
											},
											"valueType": {
												"id": 1322,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "557:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1329,
									"mutability": "mutable",
									"name": "_ownedTokensIndex",
									"nameLocation": "693:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1648,
									"src": "657:53:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1328,
										"keyType": {
											"id": 1326,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "665:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "657:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1327,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "676:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1332,
									"mutability": "mutable",
									"name": "_allTokens",
									"nameLocation": "789:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1648,
									"src": "771:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1330,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "771:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1331,
										"nodeType": "ArrayTypeName",
										"src": "771:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1336,
									"mutability": "mutable",
									"name": "_allTokensIndex",
									"nameLocation": "906:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1648,
									"src": "870:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1335,
										"keyType": {
											"id": 1333,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "878:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "870:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 1334,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "889:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										508,
										1787
									],
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "1097:114:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1347,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1339,
															"src": "1114:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "IERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1935,
																		"src": "1134:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1935_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$1935_$",
																			"typeString": "type(contract IERC721Enumerable)"
																		}
																	],
																	"id": 1348,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1129:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1129:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Enumerable_$1935",
																	"typeString": "type(contract IERC721Enumerable)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "1129:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1114:50:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1355,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "1192:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1353,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1168:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1648_$",
																	"typeString": "type(contract super ERC721Enumerable)"
																}
															},
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 508,
															"src": "1168:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1168:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1114:90:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1358,
												"nodeType": "Return",
												"src": "1107:97:6"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "928:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "998:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1343,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1341,
												"name": "IERC165",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1788,
												"src": "1065:7:6"
											},
											{
												"id": 1342,
												"name": "ERC721",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1280,
												"src": "1074:6:6"
											}
										],
										"src": "1056:25:6"
									},
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1023:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1016:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1016:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1015:20:6"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1091:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1091:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:6:6"
									},
									"scope": 1648,
									"src": "989:222:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1926
									],
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "1396:147:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1372,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "1414:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1375,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "1439:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1373,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "1422:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 532,
																	"src": "1422:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1414:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e6473",
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															},
															"value": "ERC721Enumerable: owner index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d7f5dcf03a65f41ee49b0ab593e3851cfbe3fd7da53b6cf4eddd83c7df5734c",
																"typeString": "literal_string \"ERC721Enumerable: owner index out of bounds\""
															}
														],
														"id": 1371,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1406:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1406:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1380,
												"nodeType": "ExpressionStatement",
												"src": "1406:87:6"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1381,
															"name": "_ownedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "1510:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(uint256 => uint256))"
															}
														},
														"id": 1383,
														"indexExpression": {
															"id": 1382,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "1523:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1510:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1385,
													"indexExpression": {
														"id": 1384,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "1530:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1510:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1386,
												"nodeType": "Return",
												"src": "1503:33:6"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "1217:68:6",
										"text": " @dev See {IERC721Enumerable-tokenOfOwnerByIndex}."
									},
									"functionSelector": "2f745c59",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "1299:19:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1367,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1369:8:6"
									},
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1327:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "1319:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1342:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "1334:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1334:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:30:6"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "1387:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:9:6"
									},
									"scope": 1648,
									"src": "1290:253:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1916
									],
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "1684:41:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1395,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "1701:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1701:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1397,
												"nodeType": "Return",
												"src": "1694:24:6"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "1549:60:6",
										"text": " @dev See {IERC721Enumerable-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1623:11:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1391,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1657:8:6"
									},
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1634:2:6"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1675:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1674:9:6"
									},
									"scope": 1648,
									"src": "1614:111:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1934
									],
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "1881:146:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1409,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1402,
																"src": "1899:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1410,
																		"name": "ERC721Enumerable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "1907:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$1648_$",
																			"typeString": "type(contract ERC721Enumerable)"
																		}
																	},
																	"id": 1411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1399,
																	"src": "1907:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1907:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1899:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e6473",
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1939:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															},
															"value": "ERC721Enumerable: global index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d269a4e9f5820dcdb69ea21f528512eb9b927c8d846d48aa51c9219f461d4dcc",
																"typeString": "literal_string \"ERC721Enumerable: global index out of bounds\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1891:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1416,
												"nodeType": "ExpressionStatement",
												"src": "1891:95:6"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1417,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "2003:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1419,
													"indexExpression": {
														"id": 1418,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "2014:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2003:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1420,
												"nodeType": "Return",
												"src": "1996:24:6"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "1731:61:6",
										"text": " @dev See {IERC721Enumerable-tokenByIndex}."
									},
									"functionSelector": "4f6ccce7",
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "1806:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1404,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1854:8:6"
									},
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1827:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1819:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1818:15:6"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "1872:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:9:6"
									},
									"scope": 1648,
									"src": "1797:230:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1268
									],
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "2752:443:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1436,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "2789:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1437,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "2795:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1438,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "2799:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1433,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2762:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721Enumerable_$1648_$",
																"typeString": "type(contract super ERC721Enumerable)"
															}
														},
														"id": 1435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1268,
														"src": "2762:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1440,
												"nodeType": "ExpressionStatement",
												"src": "2762:45:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1441,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "2822:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2838:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2830:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1442,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2830:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2830:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2822:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "2917:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "2925:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2917:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1461,
													"nodeType": "IfStatement",
													"src": "2913:88:6",
													"trueBody": {
														"id": 1460,
														"nodeType": "Block",
														"src": "2929:72:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1456,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1425,
																			"src": "2976:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1457,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "2982:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1455,
																		"name": "_removeTokenFromOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1599,
																		"src": "2943:32:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2943:47:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1459,
																"nodeType": "ExpressionStatement",
																"src": "2943:47:6"
															}
														]
													}
												},
												"id": 1462,
												"nodeType": "IfStatement",
												"src": "2818:183:6",
												"trueBody": {
													"id": 1451,
													"nodeType": "Block",
													"src": "2842:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1448,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "2888:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1447,
																	"name": "_addTokenToAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "2856:31:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2856:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1450,
															"nodeType": "ExpressionStatement",
															"src": "2856:40:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1463,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "3014:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3028:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3020:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1464,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3020:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3020:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3014:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1474,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1427,
															"src": "3112:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1475,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "3118:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "3112:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1483,
													"nodeType": "IfStatement",
													"src": "3108:81:6",
													"trueBody": {
														"id": 1482,
														"nodeType": "Block",
														"src": "3124:65:6",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1478,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1427,
																			"src": "3166:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1479,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1429,
																			"src": "3170:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1477,
																		"name": "_addTokenToOwnerEnumeration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1516,
																		"src": "3138:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																			"typeString": "function (address,uint256)"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3138:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1481,
																"nodeType": "ExpressionStatement",
																"src": "3138:40:6"
															}
														]
													}
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "3010:179:6",
												"trueBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "3032:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1470,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "3083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1469,
																	"name": "_removeTokenFromAllTokensEnumeration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "3046:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3046:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "3046:45:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "2033:585:6",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "2632:20:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1431,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2743:8:6"
									},
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2670:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2662:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2692:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2684:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2712:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "2704:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:73:6"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2752:0:6"
									},
									"scope": 1648,
									"src": "2623:572:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1515,
										"nodeType": "Block",
										"src": "3563:143:6",
										"statements": [
											{
												"assignments": [
													1495
												],
												"declarations": [
													{
														"constant": false,
														"id": 1495,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "3581:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1515,
														"src": "3573:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1494,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3573:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1500,
												"initialValue": {
													"arguments": [
														{
															"id": 1498,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "3607:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1496,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "3590:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 532,
														"src": "3590:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3590:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3573:37:6"
											},
											{
												"expression": {
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1501,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "3620:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1504,
															"indexExpression": {
																"id": 1502,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "3633:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3620:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1505,
														"indexExpression": {
															"id": 1503,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "3637:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3620:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1506,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "3647:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3620:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1508,
												"nodeType": "ExpressionStatement",
												"src": "3620:34:6"
											},
											{
												"expression": {
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1509,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "3664:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1511,
														"indexExpression": {
															"id": 1510,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "3682:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3664:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1512,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "3693:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3664:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1514,
												"nodeType": "ExpressionStatement",
												"src": "3664:35:6"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "3201:283:6",
										"text": " @dev Private function to add a token to this extension's ownership-tracking data structures.\n @param to address representing the new owner of the given token ID\n @param tokenId uint256 ID of the token to be added to the tokens list of the given address"
									},
									"id": 1516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToOwnerEnumeration",
									"nameLocation": "3498:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3534:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "3526:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3546:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "3538:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3538:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:29:6"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3563:0:6"
									},
									"scope": 1648,
									"src": "3489:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "3967:95:6",
										"statements": [
											{
												"expression": {
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1522,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "3977:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1524,
														"indexExpression": {
															"id": 1523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "3993:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3977:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1525,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4004:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4004:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3977:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1528,
												"nodeType": "ExpressionStatement",
												"src": "3977:44:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "4047:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1529,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4031:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4031:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4031:24:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "4031:24:6"
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "3712:184:6",
										"text": " @dev Private function to add a token to this extension's token tracking data structures.\n @param tokenId uint256 ID of the token to be added to the tokens list"
									},
									"id": 1536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addTokenToAllTokensEnumeration",
									"nameLocation": "3910:31:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3950:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1536,
												"src": "3942:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:17:6"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3967:0:6"
									},
									"scope": 1648,
									"src": "3901:161:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "4760:889:6",
										"statements": [
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "4949:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1598,
														"src": "4941:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1552,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1548,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "4983:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1546,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "4966:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1280_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 532,
															"src": "4966:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4966:22:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4991:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4966:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4941:51:6"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "5010:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1598,
														"src": "5002:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1553,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5002:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1558,
												"initialValue": {
													"baseExpression": {
														"id": 1555,
														"name": "_ownedTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "5023:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1557,
													"indexExpression": {
														"id": 1556,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "5041:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5023:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5002:47:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1559,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "5153:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1560,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "5167:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5153:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "5149:323:6",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "5183:289:6",
													"statements": [
														{
															"assignments": [
																1563
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1563,
																	"mutability": "mutable",
																	"name": "lastTokenId",
																	"nameLocation": "5205:11:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1584,
																	"src": "5197:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1562,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5197:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1569,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1564,
																		"name": "_ownedTokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "5219:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(uint256 => uint256))"
																		}
																	},
																	"id": 1566,
																	"indexExpression": {
																		"id": 1565,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "5232:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5219:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1568,
																"indexExpression": {
																	"id": 1567,
																	"name": "lastTokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "5238:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5219:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5197:56:6"
														},
														{
															"expression": {
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1570,
																			"name": "_ownedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1325,
																			"src": "5268:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(uint256 => uint256))"
																			}
																		},
																		"id": 1573,
																		"indexExpression": {
																			"id": 1571,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1539,
																			"src": "5281:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5268:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1574,
																	"indexExpression": {
																		"id": 1572,
																		"name": "tokenIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "5287:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5268:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1575,
																	"name": "lastTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1563,
																	"src": "5301:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5268:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1577,
															"nodeType": "ExpressionStatement",
															"src": "5268:44:6"
														},
														{
															"expression": {
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1578,
																		"name": "_ownedTokensIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1329,
																		"src": "5384:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 1580,
																	"indexExpression": {
																		"id": 1579,
																		"name": "lastTokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1563,
																		"src": "5402:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5384:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1581,
																	"name": "tokenIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1554,
																	"src": "5417:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5384:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1583,
															"nodeType": "ExpressionStatement",
															"src": "5384:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5558:33:6",
													"subExpression": {
														"baseExpression": {
															"id": 1586,
															"name": "_ownedTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "5565:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1588,
														"indexExpression": {
															"id": 1587,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "5583:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5565:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1590,
												"nodeType": "ExpressionStatement",
												"src": "5558:33:6"
											},
											{
												"expression": {
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5601:41:6",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1591,
																"name": "_ownedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "5608:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(uint256 => uint256))"
																}
															},
															"id": 1593,
															"indexExpression": {
																"id": 1592,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "5621:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5608:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1595,
														"indexExpression": {
															"id": 1594,
															"name": "lastTokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "5627:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5608:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "5601:41:6"
											}
										]
									},
									"documentation": {
										"id": 1537,
										"nodeType": "StructuredDocumentation",
										"src": "4068:606:6",
										"text": " @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\n while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\n gas optimizations e.g. when performing a transfer operation (avoiding double writes).\n This has O(1) time complexity, but alters the order of the _ownedTokens array.\n @param from address representing the previous owner of the given token ID\n @param tokenId uint256 ID of the token to be removed from the tokens list of the given address"
									},
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromOwnerEnumeration",
									"nameLocation": "4688:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4729:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "4721:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4721:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4743:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "4735:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4720:31:6"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4760:0:6"
									},
									"scope": 1648,
									"src": "4679:970:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "6008:990:6",
										"statements": [
											{
												"assignments": [
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "lastTokenIndex",
														"nameLocation": "6194:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 1646,
														"src": "6186:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6186:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1611,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1607,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6211:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6211:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"hexValue": "31",
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6231:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6211:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6186:46:6"
											},
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "tokenIndex",
														"nameLocation": "6250:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1646,
														"src": "6242:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1617,
												"initialValue": {
													"baseExpression": {
														"id": 1614,
														"name": "_allTokensIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "6263:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1616,
													"indexExpression": {
														"id": 1615,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1602,
														"src": "6279:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6263:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6242:45:6"
											},
											{
												"assignments": [
													1619
												],
												"declarations": [
													{
														"constant": false,
														"id": 1619,
														"mutability": "mutable",
														"name": "lastTokenId",
														"nameLocation": "6617:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1646,
														"src": "6609:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1618,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6609:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"baseExpression": {
														"id": 1620,
														"name": "_allTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1332,
														"src": "6631:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 1622,
													"indexExpression": {
														"id": 1621,
														"name": "lastTokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "6642:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6631:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6609:48:6"
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1624,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6668:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1626,
														"indexExpression": {
															"id": 1625,
															"name": "tokenIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1613,
															"src": "6679:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6668:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1627,
														"name": "lastTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1619,
														"src": "6693:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6668:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "6668:36:6"
											},
											{
												"expression": {
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1630,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "6772:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1632,
														"indexExpression": {
															"id": 1631,
															"name": "lastTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1619,
															"src": "6788:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6772:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1633,
														"name": "tokenIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "6803:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6772:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "6772:41:6"
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "6934:31:6",
													"subExpression": {
														"baseExpression": {
															"id": 1636,
															"name": "_allTokensIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "6941:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1638,
														"indexExpression": {
															"id": 1637,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "6957:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6941:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "6934:31:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1641,
															"name": "_allTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "6975:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "6975:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer)"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6975:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "6975:16:6"
											}
										]
									},
									"documentation": {
										"id": 1600,
										"nodeType": "StructuredDocumentation",
										"src": "5655:277:6",
										"text": " @dev Private function to remove a token from this extension's token tracking data structures.\n This has O(1) time complexity, but alters the order of the _allTokens array.\n @param tokenId uint256 ID of the token to be removed from the tokens list"
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeTokenFromAllTokensEnumeration",
									"nameLocation": "5946:36:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5991:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "5983:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5982:17:6"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6008:0:6"
									},
									"scope": 1648,
									"src": "5937:1061:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1649,
							"src": "396:6604:6",
							"usedErrors": []
						}
					],
					"src": "113:6887:6"
				},
				"id": 6
			},
			"contracts/NFTContract3/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/ERC721URIStorage.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"ERC165": [
							414
						],
						"ERC721": [
							1280
						],
						"ERC721URIStorage": [
							1776
						],
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Metadata": [
							1962
						],
						"IERC721Receiver": [
							1980
						],
						"Strings": [
							2402
						]
					},
					"id": 1777,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1650,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:7"
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 1651,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1777,
							"sourceUnit": 1281,
							"src": "138:22:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1653,
										"name": "ERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1280,
										"src": "270:6:7"
									},
									"id": 1654,
									"nodeType": "InheritanceSpecifier",
									"src": "270:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1652,
								"nodeType": "StructuredDocumentation",
								"src": "162:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": false,
							"id": 1776,
							"linearizedBaseContracts": [
								1776,
								1280,
								1962,
								1904,
								414,
								1788,
								316
							],
							"name": "ERC721URIStorage",
							"nameLocation": "250:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1657,
									"libraryName": {
										"id": 1655,
										"name": "Strings",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2402,
										"src": "289:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "283:26:7",
									"typeName": {
										"id": 1656,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1661,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "389:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1776,
									"src": "354:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1660,
										"keyType": {
											"id": 1658,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "362:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "354:26:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueType": {
											"id": 1659,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "373:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "554:575:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1672,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1664,
																	"src": "580:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1671,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "572:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "572:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "590:51:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															},
															"value": "ERC721URIStorage: URI query for nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e9ed1638ba7e2d59e03d0957c9339381732ac84d73f65c86c45db1467eafa2a",
																"typeString": "literal_string \"ERC721URIStorage: URI query for nonexistent token\""
															}
														],
														"id": 1670,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "564:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "564:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "564:78:7"
											},
											{
												"assignments": [
													1678
												],
												"declarations": [
													{
														"constant": false,
														"id": 1678,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "667:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "653:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1677,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "653:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1682,
												"initialValue": {
													"baseExpression": {
														"id": 1679,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "679:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1681,
													"indexExpression": {
														"id": 1680,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1664,
														"src": "690:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "679:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "653:45:7"
											},
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "722:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1722,
														"src": "708:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1683,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "708:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1685,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "729:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "729:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "708:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1690,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "818:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "812:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1688,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "812:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "812:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "812:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "834:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "812:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "808:70:7",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "837:41:7",
													"statements": [
														{
															"expression": {
																"id": 1695,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "858:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1669,
															"id": 1696,
															"nodeType": "Return",
															"src": "851:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1701,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1678,
																	"src": "986:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1699,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "980:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "980:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "976:106:7",
												"trueBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "1009:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1710,
																				"name": "base",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1684,
																				"src": "1054:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"id": 1711,
																				"name": "_tokenURI",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1678,
																				"src": "1060:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"expression": {
																				"id": 1708,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "1037:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodePacked",
																			"nodeType": "MemberAccess",
																			"src": "1037:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1037:33:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1030:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																		"typeString": "type(string storage pointer)"
																	},
																	"typeName": {
																		"id": 1706,
																		"name": "string",
																		"nodeType": "ElementaryTypeName",
																		"src": "1030:6:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1030:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1669,
															"id": 1714,
															"nodeType": "Return",
															"src": "1023:48:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1719,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "1114:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1717,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1099:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1776_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 622,
														"src": "1099:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1669,
												"id": 1721,
												"nodeType": "Return",
												"src": "1092:30:7"
											}
										]
									},
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "406:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "475:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1666,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "521:8:7"
									},
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "492:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "484:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "484:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "483:17:7"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "539:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1667,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:7"
									},
									"scope": 1776,
									"src": "466:663:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "1357:133:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1733,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1726,
																	"src": "1383:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1732,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1393:48:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															},
															"value": "ERC721URIStorage: URI set of nonexistent token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4",
																"typeString": "literal_string \"ERC721URIStorage: URI set of nonexistent token\""
															}
														],
														"id": 1731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1367:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1367:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "1367:75:7"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1738,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1661,
															"src": "1452:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1740,
														"indexExpression": {
															"id": 1739,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "1463:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1452:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1741,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "1474:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1452:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "1452:31:7"
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "1135:136:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1285:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1306:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1298:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1329:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "1315:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1315:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:42:7"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1357:0:7"
									},
									"scope": 1776,
									"src": "1276:214:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1064
									],
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "1765:142:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1755,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "1787:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1752,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1775:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1776_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1064,
														"src": "1775:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1775:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1757,
												"nodeType": "ExpressionStatement",
												"src": "1775:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 1760,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "1816:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1762,
																	"indexExpression": {
																		"id": 1761,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "1827:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1816:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1810:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1758,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1810:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1810:26:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes storage pointer"
															}
														},
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1810:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1765,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1847:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1810:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "1806:95:7",
												"trueBody": {
													"id": 1772,
													"nodeType": "Block",
													"src": "1850:51:7",
													"statements": [
														{
															"expression": {
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "1864:26:7",
																"subExpression": {
																	"baseExpression": {
																		"id": 1767,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1661,
																		"src": "1871:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1769,
																	"indexExpression": {
																		"id": 1768,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1748,
																		"src": "1882:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1871:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1771,
															"nodeType": "ExpressionStatement",
															"src": "1864:26:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "1496:206:7",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "1716:5:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1756:8:7"
									},
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1730:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "1722:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1722:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1721:17:7"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:0:7"
									},
									"scope": 1776,
									"src": "1707:200:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1777,
							"src": "232:1677:7",
							"usedErrors": []
						}
					],
					"src": "113:1796:7"
				},
				"id": 7
			},
			"contracts/NFTContract3/IERC165.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1788
						]
					},
					"id": 1789,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1778,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1779,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1788,
							"linearizedBaseContracts": [
								1788
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1781,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1784,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1788,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1789,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:752:8"
				},
				"id": 8
			},
			"contracts/NFTContract3/IERC721.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						]
					},
					"id": 1905,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1790,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:9"
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1791,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1905,
							"sourceUnit": 1789,
							"src": "118:23:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1793,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1788,
										"src": "232:7:9"
									},
									"id": 1794,
									"nodeType": "InheritanceSpecifier",
									"src": "232:7:9"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1792,
								"nodeType": "StructuredDocumentation",
								"src": "143:67:9",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1904,
							"linearizedBaseContracts": [
								1904,
								1788
							],
							"name": "IERC721",
							"nameLocation": "221:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "246:88:9",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1803,
									"name": "Transfer",
									"nameLocation": "345:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "370:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "354:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "392:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "376:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1801,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "412:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "396:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:67:9"
									},
									"src": "339:82:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "427:94:9",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1812,
									"name": "Approval",
									"nameLocation": "532:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "557:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "541:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "541:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "580:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "564:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "564:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "606:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "590:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "540:74:9"
									},
									"src": "526:89:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "621:117:9",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1821,
									"name": "ApprovalForAll",
									"nameLocation": "749:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "780:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "764:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "764:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "803:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "787:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "818:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "813:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "813:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "763:64:9"
									},
									"src": "743:85:9"
								},
								{
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "834:76:9",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "924:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "942:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "934:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "933:15:9"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "972:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:17:9"
									},
									"scope": 1904,
									"src": "915:74:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "995:131:9",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1140:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1156:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "1148:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1147:17:9"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1196:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "1188:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1188:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:15:9"
									},
									"scope": 1904,
									"src": "1131:72:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "1209:690:9",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1913:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1947:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1939:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1969:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1961:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1844,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1989:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "1981:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1981:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:73:9"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2011:0:9"
									},
									"scope": 1904,
									"src": "1904:108:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "2018:504:9",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1857,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2536:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2566:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2558:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2588:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2580:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1851,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2580:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2608:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1857,
												"src": "2600:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2600:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2548:73:9"
									},
									"returnParameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2630:0:9"
									},
									"scope": 1904,
									"src": "2527:104:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "2637:452:9",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3103:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3119:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "3111:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3111:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3131:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1865,
												"src": "3123:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3123:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3110:29:9"
									},
									"returnParameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3148:0:9"
									},
									"scope": 1904,
									"src": "3094:55:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "3155:139:9",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3308:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3328:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "3320:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:17:9"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3368:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1873,
												"src": "3360:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3360:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3359:18:9"
									},
									"scope": 1904,
									"src": "3299:79:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1874,
										"nodeType": "StructuredDocumentation",
										"src": "3384:309:9",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3707:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3733:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "3725:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3725:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "3748:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "3743:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3743:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3724:34:9"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:0:9"
									},
									"scope": 1904,
									"src": "3698:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1882,
										"nodeType": "StructuredDocumentation",
										"src": "3774:138:9",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3926:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3951:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3943:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3966:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3958:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:33:9"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "3999:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1888,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3999:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:6:9"
									},
									"scope": 1904,
									"src": "3917:88:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "4011:556:9",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4581:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4615:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "4607:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4607:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4637:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "4629:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4629:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4657:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "4649:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4649:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4689:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "4674:19:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4674:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:102:9"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4708:0:9"
									},
									"scope": 1904,
									"src": "4572:137:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1905,
							"src": "211:4500:9",
							"usedErrors": []
						}
					],
					"src": "93:4618:9"
				},
				"id": 9
			},
			"contracts/NFTContract3/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Enumerable": [
							1935
						]
					},
					"id": 1936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1906,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:10"
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1936,
							"sourceUnit": 1905,
							"src": "154:23:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1909,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1904,
										"src": "347:7:10"
									},
									"id": 1910,
									"nodeType": "InheritanceSpecifier",
									"src": "347:7:10"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1908,
								"nodeType": "StructuredDocumentation",
								"src": "179:136:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1935,
							"linearizedBaseContracts": [
								1935,
								1904,
								1788
							],
							"name": "IERC721Enumerable",
							"nameLocation": "326:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "361:82:10",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "457:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "468:2:10"
									},
									"returnParameters": {
										"id": 1915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1916,
												"src": "494:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:9:10"
									},
									"scope": 1935,
									"src": "448:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1917,
										"nodeType": "StructuredDocumentation",
										"src": "509:171:10",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1926,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "694:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "722:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "714:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:30:10"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "767:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:9:10"
									},
									"scope": 1935,
									"src": "685:91:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1927,
										"nodeType": "StructuredDocumentation",
										"src": "782:164:10",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "960:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "981:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "973:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:10"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1934,
												"src": "1011:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:9:10"
									},
									"scope": 1935,
									"src": "951:69:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1936,
							"src": "316:706:10",
							"usedErrors": []
						}
					],
					"src": "129:893:10"
				},
				"id": 10
			},
			"contracts/NFTContract3/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Metadata": [
							1962
						]
					},
					"id": 1963,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1937,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:11"
						},
						{
							"absolutePath": "contracts/NFTContract3/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 1938,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1963,
							"sourceUnit": 1905,
							"src": "137:23:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1940,
										"name": "IERC721",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1904,
										"src": "325:7:11"
									},
									"id": 1941,
									"nodeType": "InheritanceSpecifier",
									"src": "325:7:11"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1939,
								"nodeType": "StructuredDocumentation",
								"src": "162:133:11",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1962,
							"linearizedBaseContracts": [
								1962,
								1904,
								1788
							],
							"name": "IERC721Metadata",
							"nameLocation": "306:15:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "339:58:11",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "411:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:2:11"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "441:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:15:11"
									},
									"scope": 1962,
									"src": "402:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "462:60:11",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "536:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "542:2:11"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "568:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "567:15:11"
									},
									"scope": 1962,
									"src": "527:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1954,
										"nodeType": "StructuredDocumentation",
										"src": "589:90:11",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1961,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "693:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "710:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "702:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:17:11"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1961,
												"src": "742:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1958,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:15:11"
									},
									"scope": 1962,
									"src": "684:73:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1963,
							"src": "296:463:11",
							"usedErrors": []
						}
					],
					"src": "112:647:11"
				},
				"id": 11
			},
			"contracts/NFTContract3/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1980
						]
					},
					"id": 1981,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1964,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1965,
								"nodeType": "StructuredDocumentation",
								"src": "126:152:12",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1980,
							"linearizedBaseContracts": [
								1980
							],
							"name": "IERC721Receiver",
							"nameLocation": "289:15:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1966,
										"nodeType": "StructuredDocumentation",
										"src": "311:485:12",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1979,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "810:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "844:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "836:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "870:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "862:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "892:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "884:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "924:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "909:19:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "909:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:108:12"
									},
									"returnParameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "953:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1976,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "953:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:8:12"
									},
									"scope": 1980,
									"src": "801:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1981,
							"src": "279:684:12",
							"usedErrors": []
						}
					],
					"src": "101:862:12"
				},
				"id": 12
			},
			"contracts/NFTContract3/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							316
						],
						"Ownable": [
							2085
						]
					},
					"id": 2086,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1982,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:13"
						},
						{
							"absolutePath": "contracts/NFTContract3/Context.sol",
							"file": "./Context.sol",
							"id": 1983,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2086,
							"sourceUnit": 317,
							"src": "112:23:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1985,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "661:7:13"
									},
									"id": 1986,
									"nodeType": "InheritanceSpecifier",
									"src": "661:7:13"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1984,
								"nodeType": "StructuredDocumentation",
								"src": "137:494:13",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 2085,
							"linearizedBaseContracts": [
								2085,
								316
							],
							"name": "Ownable",
							"nameLocation": "650:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1988,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "691:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2085,
									"src": "675:22:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1987,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "675:7:13",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1994,
									"name": "OwnershipTransferred",
									"nameLocation": "710:20:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "747:13:13",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "731:29:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "778:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "762:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:57:13"
									},
									"src": "704:84:13"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "904:49:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1999,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "933:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "933:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1998,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "914:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "914:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "ExpressionStatement",
												"src": "914:32:13"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "794:91:13",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 2004,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "901:2:13"
									},
									"returnParameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:0:13"
									},
									"scope": 2085,
									"src": "890:63:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "1084:30:13",
										"statements": [
											{
												"expression": {
													"id": 2010,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1988,
													"src": "1101:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2009,
												"id": 2011,
												"nodeType": "Return",
												"src": "1094:13:13"
											}
										]
									},
									"documentation": {
										"id": 2005,
										"nodeType": "StructuredDocumentation",
										"src": "959:65:13",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1038:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1043:2:13"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "1075:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:13"
									},
									"scope": 2085,
									"src": "1029:85:13",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "1223:96:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2017,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "1241:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1241:7:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2019,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "1252:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1252:12:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1241:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1266:34:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1233:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1233:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "1233:68:13"
											},
											{
												"id": 2025,
												"nodeType": "PlaceholderStatement",
												"src": "1311:1:13"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "1120:77:13",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 2027,
									"name": "onlyOwner",
									"nameLocation": "1211:9:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1220:2:13"
									},
									"src": "1202:117:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2040,
										"nodeType": "Block",
										"src": "1715:47:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1752:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1744:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2034,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1744:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1744:10:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2033,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "1725:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1725:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2039,
												"nodeType": "ExpressionStatement",
												"src": "1725:30:13"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "1325:331:13",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 2041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2031,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2030,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2027,
												"src": "1705:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1705:9:13"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1670:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:2:13"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1715:0:13"
									},
									"scope": 2085,
									"src": "1661:101:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "1981:128:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2050,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2044,
																"src": "1999:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2019:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2011:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2051,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2011:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2011:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1999:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 2056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2023:40:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 2049,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1991:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1991:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "1991:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2060,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "2093:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2059,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "2074:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:28:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "2074:28:13"
											}
										]
									},
									"documentation": {
										"id": 2042,
										"nodeType": "StructuredDocumentation",
										"src": "1768:138:13",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2047,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2046,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2027,
												"src": "1971:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "1971:9:13"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1920:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1946:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "1938:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1938:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1937:18:13"
									},
									"returnParameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1981:0:13"
									},
									"scope": 2085,
									"src": "1911:198:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2083,
										"nodeType": "Block",
										"src": "2326:124:13",
										"statements": [
											{
												"assignments": [
													2071
												],
												"declarations": [
													{
														"constant": false,
														"id": 2071,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2344:8:13",
														"nodeType": "VariableDeclaration",
														"scope": 2083,
														"src": "2336:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2070,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2336:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2073,
												"initialValue": {
													"id": 2072,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1988,
													"src": "2355:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2336:25:13"
											},
											{
												"expression": {
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2074,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1988,
														"src": "2371:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2075,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "2380:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2371:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "2371:17:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2079,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2071,
															"src": "2424:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2080,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "2434:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2078,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "2403:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2403:40:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2082,
												"nodeType": "EmitStatement",
												"src": "2398:45:13"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2115:143:13",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 2084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2272:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2299:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "2291:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:18:13"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2326:0:13"
									},
									"scope": 2085,
									"src": "2263:187:13",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2086,
							"src": "632:1820:13",
							"usedErrors": []
						}
					],
					"src": "87:2365:13"
				},
				"id": 13
			},
			"contracts/NFTContract3/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							316
						],
						"Pausable": [
							2177
						]
					},
					"id": 2178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2087,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:14"
						},
						{
							"absolutePath": "contracts/NFTContract3/Context.sol",
							"file": "./Context.sol",
							"id": 2088,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2178,
							"sourceUnit": 317,
							"src": "115:23:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2090,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 316,
										"src": "610:7:14"
									},
									"id": 2091,
									"nodeType": "InheritanceSpecifier",
									"src": "610:7:14"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2089,
								"nodeType": "StructuredDocumentation",
								"src": "140:439:14",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 2177,
							"linearizedBaseContracts": [
								2177,
								316
							],
							"name": "Pausable",
							"nameLocation": "598:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2092,
										"nodeType": "StructuredDocumentation",
										"src": "624:73:14",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 2096,
									"name": "Paused",
									"nameLocation": "708:6:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "723:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "715:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:17:14"
									},
									"src": "702:30:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2097,
										"nodeType": "StructuredDocumentation",
										"src": "738:70:14",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 2101,
									"name": "Unpaused",
									"nameLocation": "819:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2099,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "836:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "828:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2098,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:17:14"
									},
									"src": "813:32:14"
								},
								{
									"constant": false,
									"id": 2103,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "864:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 2177,
									"src": "851:20:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2102,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "851:4:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2111,
										"nodeType": "Block",
										"src": "964:32:14",
										"statements": [
											{
												"expression": {
													"id": 2109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2107,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "974:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "984:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "974:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2110,
												"nodeType": "ExpressionStatement",
												"src": "974:15:14"
											}
										]
									},
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "878:67:14",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 2112,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:2:14"
									},
									"returnParameters": {
										"id": 2106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "964:0:14"
									},
									"scope": 2177,
									"src": "950:46:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2120,
										"nodeType": "Block",
										"src": "1144:31:14",
										"statements": [
											{
												"expression": {
													"id": 2118,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2103,
													"src": "1161:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2117,
												"id": 2119,
												"nodeType": "Return",
												"src": "1154:14:14"
											}
										]
									},
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "1002:84:14",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 2121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1100:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:2:14"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2121,
												"src": "1138:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1138:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1137:6:14"
									},
									"scope": 2177,
									"src": "1091:84:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2132,
										"nodeType": "Block",
										"src": "1386:66:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1404:9:14",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2125,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1405:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 2126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1405:8:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1415:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 2124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1396:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2130,
												"nodeType": "ExpressionStatement",
												"src": "1396:38:14"
											},
											{
												"id": 2131,
												"nodeType": "PlaceholderStatement",
												"src": "1444:1:14"
											}
										]
									},
									"documentation": {
										"id": 2122,
										"nodeType": "StructuredDocumentation",
										"src": "1181:175:14",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2133,
									"name": "whenNotPaused",
									"nameLocation": "1370:13:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1383:2:14"
									},
									"src": "1361:91:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2143,
										"nodeType": "Block",
										"src": "1652:69:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2137,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "1670:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 2138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1670:8:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:22:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 2136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1662:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1662:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "1662:41:14"
											},
											{
												"id": 2142,
												"nodeType": "PlaceholderStatement",
												"src": "1713:1:14"
											}
										]
									},
									"documentation": {
										"id": 2134,
										"nodeType": "StructuredDocumentation",
										"src": "1458:167:14",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 2144,
									"name": "whenPaused",
									"nameLocation": "1639:10:14",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:2:14"
									},
									"src": "1630:91:14",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "1905:66:14",
										"statements": [
											{
												"expression": {
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2150,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "1915:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1925:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1915:14:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "1915:14:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2155,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "1951:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1951:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2154,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2096,
														"src": "1944:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1944:20:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2158,
												"nodeType": "EmitStatement",
												"src": "1939:25:14"
											}
										]
									},
									"documentation": {
										"id": 2145,
										"nodeType": "StructuredDocumentation",
										"src": "1727:124:14",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2147,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2133,
												"src": "1891:13:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1891:13:14"
										}
									],
									"name": "_pause",
									"nameLocation": "1865:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1871:2:14"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1905:0:14"
									},
									"scope": 2177,
									"src": "1856:115:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2175,
										"nodeType": "Block",
										"src": "2151:69:14",
										"statements": [
											{
												"expression": {
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2166,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2103,
														"src": "2161:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2171:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2161:15:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "2161:15:14"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2171,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "2200:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2200:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2170,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "2191:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:22:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "EmitStatement",
												"src": "2186:27:14"
											}
										]
									},
									"documentation": {
										"id": 2161,
										"nodeType": "StructuredDocumentation",
										"src": "1977:121:14",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 2176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2163,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2144,
												"src": "2140:10:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "2140:10:14"
										}
									],
									"name": "_unpause",
									"nameLocation": "2112:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2120:2:14"
									},
									"returnParameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:14"
									},
									"scope": 2177,
									"src": "2103:117:14",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2178,
							"src": "580:1642:14",
							"usedErrors": []
						}
					],
					"src": "90:2132:14"
				},
				"id": 14
			},
			"contracts/NFTContract3/SQFIFactory.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/SQFIFactory.sol",
					"exportedSymbols": {
						"Address": [
							294
						],
						"Context": [
							316
						],
						"Counters": [
							390
						],
						"ERC165": [
							414
						],
						"ERC721": [
							1280
						],
						"ERC721Burnable": [
							1310
						],
						"ERC721Enumerable": [
							1648
						],
						"ERC721URIStorage": [
							1776
						],
						"IERC165": [
							1788
						],
						"IERC721": [
							1904
						],
						"IERC721Enumerable": [
							1935
						],
						"IERC721Metadata": [
							1962
						],
						"IERC721Receiver": [
							1980
						],
						"Ownable": [
							2085
						],
						"Pausable": [
							2177
						],
						"SQFItemFactory": [
							2199
						],
						"Strings": [
							2402
						]
					},
					"id": 2200,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:15"
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721.sol",
							"file": "./ERC721.sol",
							"id": 2180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 1281,
							"src": "57:22:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721Enumerable.sol",
							"file": "./ERC721Enumerable.sol",
							"id": 2181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 1649,
							"src": "80:32:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721URIStorage.sol",
							"file": "./ERC721URIStorage.sol",
							"id": 2182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 1777,
							"src": "113:32:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Pausable.sol",
							"file": "./Pausable.sol",
							"id": 2183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 2178,
							"src": "146:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 2184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 2086,
							"src": "171:23:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/ERC721Burnable.sol",
							"file": "./ERC721Burnable.sol",
							"id": 2185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 1311,
							"src": "195:30:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract3/Counters.sol",
							"file": "./Counters.sol",
							"id": 2186,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2200,
							"sourceUnit": 391,
							"src": "226:24:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SQFItemFactory",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2199,
							"linearizedBaseContracts": [
								2199
							],
							"name": "SQFItemFactory",
							"nameLocation": "261:14:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d56d229d",
									"id": 2188,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "298:11:15",
									"nodeType": "VariableDeclaration",
									"scope": 2199,
									"src": "283:26:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "283:7:15",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "0372de3fa001ec655fcb2f8096e13cb1f68d1b8b9bb9d2674fc7d880de7e8045",
									"id": 2198,
									"name": "NFTMinted",
									"nameLocation": "322:9:15",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "349:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "341:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "341:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2192,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "382:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "366:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "401:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "394:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "394:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"indexed": false,
												"mutability": "mutable",
												"name": "externalId",
												"nameLocation": "424:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "417:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2195,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "331:109:15"
									},
									"src": "316:125:15"
								}
							],
							"scope": 2200,
							"src": "252:192:15",
							"usedErrors": []
						}
					],
					"src": "32:412:15"
				},
				"id": 15
			},
			"contracts/NFTContract3/Strings.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract3/Strings.sol",
					"exportedSymbols": {
						"Strings": [
							2402
						]
					},
					"id": 2403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2201,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2202,
								"nodeType": "StructuredDocumentation",
								"src": "111:34:16",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2402,
							"linearizedBaseContracts": [
								2402
							],
							"name": "Strings",
							"nameLocation": "154:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 2205,
									"mutability": "constant",
									"name": "_HEX_SYMBOLS",
									"nameLocation": "193:12:16",
									"nodeType": "VariableDeclaration",
									"scope": 2402,
									"src": "168:58:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 2203,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "168:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 2204,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "208:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "399:632:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2213,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "601:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "610:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "601:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2219,
												"nodeType": "IfStatement",
												"src": "597:51:16",
												"trueBody": {
													"id": 2218,
													"nodeType": "Block",
													"src": "613:35:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "634:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
																	"typeString": "literal_string \"0\""
																},
																"value": "0"
															},
															"functionReturnParameters": 2212,
															"id": 2217,
															"nodeType": "Return",
															"src": "627:10:16"
														}
													]
												}
											},
											{
												"assignments": [
													2221
												],
												"declarations": [
													{
														"constant": false,
														"id": 2221,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "665:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "657:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "657:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2223,
												"initialValue": {
													"id": 2222,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2208,
													"src": "672:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "657:20:16"
											},
											{
												"assignments": [
													2225
												],
												"declarations": [
													{
														"constant": false,
														"id": 2225,
														"mutability": "mutable",
														"name": "digits",
														"nameLocation": "695:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "687:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "687:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2226,
												"nodeType": "VariableDeclarationStatement",
												"src": "687:14:16"
											},
											{
												"body": {
													"id": 2237,
													"nodeType": "Block",
													"src": "729:57:16",
													"statements": [
														{
															"expression": {
																"id": 2231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "743:8:16",
																"subExpression": {
																	"id": 2230,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "743:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2232,
															"nodeType": "ExpressionStatement",
															"src": "743:8:16"
														},
														{
															"expression": {
																"id": 2235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2233,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2221,
																	"src": "765:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "773:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "765:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2236,
															"nodeType": "ExpressionStatement",
															"src": "765:10:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2227,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "718:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "726:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "718:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2238,
												"nodeType": "WhileStatement",
												"src": "711:75:16"
											},
											{
												"assignments": [
													2240
												],
												"declarations": [
													{
														"constant": false,
														"id": 2240,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "808:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2283,
														"src": "795:19:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2239,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "795:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2245,
												"initialValue": {
													"arguments": [
														{
															"id": 2243,
															"name": "digits",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2225,
															"src": "827:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "817:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2241,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "821:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "817:17:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "795:39:16"
											},
											{
												"body": {
													"id": 2276,
													"nodeType": "Block",
													"src": "863:131:16",
													"statements": [
														{
															"expression": {
																"id": 2251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2249,
																	"name": "digits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2225,
																	"src": "877:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "887:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "877:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2252,
															"nodeType": "ExpressionStatement",
															"src": "877:11:16"
														},
														{
															"expression": {
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2253,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2240,
																		"src": "902:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2255,
																	"indexExpression": {
																		"id": 2254,
																		"name": "digits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2225,
																		"src": "909:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "902:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2267,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3438",
																						"id": 2260,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "932:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_48_by_1",
																							"typeString": "int_const 48"
																						},
																						"value": "48"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2265,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2263,
																									"name": "value",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2208,
																									"src": "945:5:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "%",
																								"rightExpression": {
																									"hexValue": "3130",
																									"id": 2264,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "953:2:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10_by_1",
																										"typeString": "int_const 10"
																									},
																									"value": "10"
																								},
																								"src": "945:10:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2262,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "937:7:16",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_uint256_$",
																								"typeString": "type(uint256)"
																							},
																							"typeName": {
																								"id": 2261,
																								"name": "uint256",
																								"nodeType": "ElementaryTypeName",
																								"src": "937:7:16",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 2266,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "937:19:16",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "932:24:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "926:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 2258,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "926:5:16",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "926:31:16",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		],
																		"id": 2257,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "919:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 2256,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "919:6:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "919:39:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "902:56:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2271,
															"nodeType": "ExpressionStatement",
															"src": "902:56:16"
														},
														{
															"expression": {
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "972:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "/=",
																"rightHandSide": {
																	"hexValue": "3130",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "981:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "972:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2275,
															"nodeType": "ExpressionStatement",
															"src": "972:11:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2246,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "851:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "860:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "851:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2277,
												"nodeType": "WhileStatement",
												"src": "844:150:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2280,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2240,
															"src": "1017:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2279,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1010:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2278,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1010:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:14:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2212,
												"id": 2282,
												"nodeType": "Return",
												"src": "1003:21:16"
											}
										]
									},
									"documentation": {
										"id": 2206,
										"nodeType": "StructuredDocumentation",
										"src": "233:90:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "337:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "354:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "346:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:15:16"
									},
									"returnParameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "384:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2210,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "384:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "383:15:16"
									},
									"scope": 2402,
									"src": "328:703:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "1210:255:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2292,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2287,
														"src": "1224:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2293,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1224:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2298,
												"nodeType": "IfStatement",
												"src": "1220:54:16",
												"trueBody": {
													"id": 2297,
													"nodeType": "Block",
													"src": "1236:38:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30783030",
																"id": 2295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4",
																	"typeString": "literal_string \"0x00\""
																},
																"value": "0x00"
															},
															"functionReturnParameters": 2291,
															"id": 2296,
															"nodeType": "Return",
															"src": "1250:13:16"
														}
													]
												}
											},
											{
												"assignments": [
													2300
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "temp",
														"nameLocation": "1291:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2324,
														"src": "1283:12:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2299,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1283:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"id": 2301,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2287,
													"src": "1298:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1283:20:16"
											},
											{
												"assignments": [
													2304
												],
												"declarations": [
													{
														"constant": false,
														"id": 2304,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1321:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2324,
														"src": "1313:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2303,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1313:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2306,
												"initialValue": {
													"hexValue": "30",
													"id": 2305,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1330:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:18:16"
											},
											{
												"body": {
													"id": 2317,
													"nodeType": "Block",
													"src": "1359:57:16",
													"statements": [
														{
															"expression": {
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1373:8:16",
																"subExpression": {
																	"id": 2310,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2304,
																	"src": "1373:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2312,
															"nodeType": "ExpressionStatement",
															"src": "1373:8:16"
														},
														{
															"expression": {
																"id": 2315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2313,
																	"name": "temp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2300,
																	"src": "1395:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 2314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1404:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "1395:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2316,
															"nodeType": "ExpressionStatement",
															"src": "1395:10:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2307,
														"name": "temp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2300,
														"src": "1348:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1348:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2318,
												"nodeType": "WhileStatement",
												"src": "1341:75:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2320,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2287,
															"src": "1444:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2321,
															"name": "length",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "1451:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2319,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2325,
															2401
														],
														"referencedDeclaration": 2401,
														"src": "1432:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1432:26:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2291,
												"id": 2323,
												"nodeType": "Return",
												"src": "1425:33:16"
											}
										]
									},
									"documentation": {
										"id": 2285,
										"nodeType": "StructuredDocumentation",
										"src": "1037:94:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1145:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1165:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "1157:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:15:16"
									},
									"returnParameters": {
										"id": 2291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "1195:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1195:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:15:16"
									},
									"scope": 2402,
									"src": "1136:329:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2400,
										"nodeType": "Block",
										"src": "1678:351:16",
										"statements": [
											{
												"assignments": [
													2336
												],
												"declarations": [
													{
														"constant": false,
														"id": 2336,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1701:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2400,
														"src": "1688:19:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2335,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1688:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2345,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2340,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2330,
																	"src": "1724:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1720:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1733:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1720:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1710:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 2337,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1714:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1710:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1688:47:16"
											},
											{
												"expression": {
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2346,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "1745:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2348,
														"indexExpression": {
															"hexValue": "30",
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1745:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1745:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2351,
												"nodeType": "ExpressionStatement",
												"src": "1745:15:16"
											},
											{
												"expression": {
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2352,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "1770:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2354,
														"indexExpression": {
															"hexValue": "31",
															"id": 2353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1777:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1770:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1782:3:16",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1770:15:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 2357,
												"nodeType": "ExpressionStatement",
												"src": "1770:15:16"
											},
											{
												"body": {
													"id": 2386,
													"nodeType": "Block",
													"src": "1840:87:16",
													"statements": [
														{
															"expression": {
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2372,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2336,
																		"src": "1854:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2374,
																	"indexExpression": {
																		"id": 2373,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2359,
																		"src": "1861:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1854:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2375,
																		"name": "_HEX_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "1866:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 2379,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2328,
																			"src": "1879:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 2377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1887:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1879:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1866:25:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1854:37:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 2381,
															"nodeType": "ExpressionStatement",
															"src": "1854:37:16"
														},
														{
															"expression": {
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2328,
																	"src": "1905:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1905:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2385,
															"nodeType": "ExpressionStatement",
															"src": "1905:11:16"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2366,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2359,
														"src": "1828:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 2367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1832:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1828:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2387,
												"initializationExpression": {
													"assignments": [
														2359
													],
													"declarations": [
														{
															"constant": false,
															"id": 2359,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1808:1:16",
															"nodeType": "VariableDeclaration",
															"scope": 2387,
															"src": "1800:9:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2358,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1800:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2365,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1812:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2361,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2330,
																"src": "1816:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1812:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1825:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1812:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1800:26:16"
												},
												"loopExpression": {
													"expression": {
														"id": 2370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1835:3:16",
														"subExpression": {
															"id": 2369,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "1837:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2371,
													"nodeType": "ExpressionStatement",
													"src": "1835:3:16"
												},
												"nodeType": "ForStatement",
												"src": "1795:132:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2389,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "1944:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1953:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1944:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1956:34:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 2388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1936:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1936:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "1936:55:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2397,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2336,
															"src": "2015:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2008:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 2395,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2008:6:16",
															"typeDescriptions": {}
														}
													},
													"id": 2398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2008:14:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2334,
												"id": 2399,
												"nodeType": "Return",
												"src": "2001:21:16"
											}
										]
									},
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "1471:112:16",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 2401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1597:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1617:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "1609:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1632:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "1624:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1624:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:31:16"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2401,
												"src": "1663:13:16",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:15:16"
									},
									"scope": 2402,
									"src": "1588:441:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2403,
							"src": "146:1885:16",
							"usedErrors": []
						}
					],
					"src": "86:1945:16"
				},
				"id": 16
			}
		}
	}
}