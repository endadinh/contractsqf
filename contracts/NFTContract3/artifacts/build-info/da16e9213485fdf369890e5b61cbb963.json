{
	"id": "da16e9213485fdf369890e5b61cbb963",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Marketplace2/Marketplace.sol": {
				"content": "\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n\npragma solidity ^0.8.0;\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\npragma solidity ^0.8.0;\n\ncontract MarketplaceStorage {\n    enum ItemStatus {\n        MINTED,\n        LIST,\n        BOUGHT,\n        OFFER,\n        DELIST\n    }\n\n    struct Item {\n        // Item ID\n        bytes32 id;\n        // Owner of the NFT\n        address seller;\n        // NFT registry address\n        address nftAddress;\n        // Price (in wei) for the listing item\n        uint256 price;\n        // Price (in Anta) for the listing item\n        uint256 priceAnta;\n        // status of the item\n        ItemStatus status;\n    }\n\n    struct ItemOffer {\n        // Item ID\n        bytes32 id;\n        // Price (in wei) for the published item\n        uint256 offerPrice;\n    }\n    bytes4 public constant ERC721_Interface = bytes4(0x80ac58cd);\n\n    // From ERC721 registry assetId to Item (to avoid asset collision)\n    mapping(address => mapping(uint256 => Item)) public items;\n\n    // From ERC721 registry assetId to Offer (to avoid asset collision)\n    mapping(address => mapping(uint256 => mapping(address => ItemOffer)))\n        public itemOffers;\n    IERC20 public sqfToken;\n\n    uint8 public bnbFeePercent;\n    uint8 public antaFeePercent;\n\n    event Claim(address indexed receiver, uint256 value);\n\n    event DelistItemSuccessful(\n        address nftAddress,\n        bytes32 id,\n        uint256 indexed assetId,\n        address indexed delistBy,\n        uint256 createdAt\n    );\n    event BuyItemSuccessful(\n        bytes32 id,\n        uint256 indexed assetId,\n        address indexed seller,\n        address nftAddress,\n        uint256 price,\n        uint8 feePercent,\n        uint256 fee,\n        address indexed buyer,\n        string currency,\n        uint256 createdAt\n    );\n    event SellItemSuccessful(\n        address nftAddress,\n        bytes32 id,\n        uint256 indexed assetId,\n        uint256 price,\n        address indexed seller,\n        string currency,\n        uint256 createdAt\n    );\n}\n\ncontract NFTMarket is ReentrancyGuard, MarketplaceStorage, Ownable {\n  using Counters for Counters.Counter;\n  Counters.Counter private _itemIds;\n  Counters.Counter private _itemsSold;\n\n  struct MarketItem {\n    uint itemId;\n    address nftContract;\n    uint256 tokenId;\n    address payable seller;\n    address payable owner;\n    uint256 price;\n  }\n\n  mapping(uint256 => MarketItem) private idToMarketItem;\n\n  event MarketItemCreated (\n    uint indexed itemId,\n    address indexed nftContract,\n    uint256 indexed tokenId,\n    address seller,\n    address owner,\n    uint256 price\n  );\n  \n\n  function getMarketItem(uint256 marketItemId) public view returns (MarketItem memory) {\n    return idToMarketItem[marketItemId];\n  }\n\nfunction setSQFToken(address _address) external onlyOwner {\n        sqfToken = IERC20(_address);\n}\n\n  function createMarketItem(\n    address nftContract,\n    uint256 tokenId,\n    uint256 price\n  ) public payable nonReentrant {\n    require(price > 0, \"Price must be at least 1 wei\");\n\n    _itemIds.increment();\n    uint256 itemId = _itemIds.current();\n  \n    idToMarketItem[itemId] =  MarketItem(\n      itemId,\n      nftContract,\n      tokenId,\n      payable(msg.sender),\n      payable(address(0)),\n      price\n    );\n\n    IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId);\n\n    emit MarketItemCreated(\n      itemId,\n      nftContract,\n      tokenId,\n      msg.sender,\n      address(0),\n      price\n    );\n  }\n\n  function sellItem(\n        address nftAddress,\n        uint256 assetId,\n        uint256 price\n    ) public {\n        require(price > 0, \"Price should be bigger than 0\");\n        _requireERC721(nftAddress);\n\n        address seller = msg.sender;\n        IERC721 nftRegistry = IERC721(nftAddress);\n\n        require(\n            nftRegistry.ownerOf(assetId) == seller,\n            \"The seller is no longer the owner\"\n        );\n        nftRegistry.transferFrom(seller, address(this), assetId);\n        Item memory item = items[nftAddress][assetId];\n        if (item.id == 0) {\n            _createItem(seller, assetId, nftAddress, price, 0);\n        } else {\n            require(item.status != ItemStatus.LIST, \"Asset is listing\");\n            items[nftAddress][assetId].status = ItemStatus.LIST;\n            items[nftAddress][assetId].price = price;\n            items[nftAddress][assetId].seller = seller;\n        }\n        emit SellItemSuccessful(\n            nftAddress,\n            item.id,\n            assetId,\n            price,\n            seller,\n            \"BNB\",\n            block.timestamp\n        );\n    }\n\n  function createMarketSale(\n    address nftContract,\n    uint256 itemId\n    ) public payable nonReentrant {\n    uint price = idToMarketItem[itemId].price;\n    uint tokenId = idToMarketItem[itemId].tokenId;\n    require(msg.value == price, \"Please submit the asking price in order to complete the purchase\");\n\n    idToMarketItem[itemId].seller.transfer(msg.value);\n    IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId);\n    idToMarketItem[itemId].owner = payable(msg.sender);\n    _itemsSold.increment();\n  }\n\n  function fetchMarketItem(uint itemId) public view returns (MarketItem memory) {\n    MarketItem memory item = idToMarketItem[itemId];\n    return item;\n  }\n\n  function fetchMarketItems() public view returns (MarketItem[] memory) {\n    uint itemCount = _itemIds.current();\n    uint unsoldItemCount = _itemIds.current() - _itemsSold.current();\n    uint currentIndex = 0;\n\n    MarketItem[] memory items = new MarketItem[](unsoldItemCount);\n    for (uint i = 0; i < itemCount; i++) {\n      if (idToMarketItem[i + 1].owner == address(0)) {\n        uint currentId = idToMarketItem[i + 1].itemId;\n        MarketItem storage currentItem = idToMarketItem[currentId];\n        items[currentIndex] = currentItem;\n        currentIndex += 1;\n      }\n    }\n   \n    return items;\n  }\n\n  function fetchMyNFTs() public view returns (MarketItem[] memory) {\n    uint totalItemCount = _itemIds.current();\n    uint itemCount = 0;\n    uint currentIndex = 0;\n\n    for (uint i = 0; i < totalItemCount; i++) {\n      if (idToMarketItem[i + 1].owner == msg.sender) {\n        itemCount += 1;\n      }\n    }\n\n    MarketItem[] memory items = new MarketItem[](itemCount);\n    for (uint i = 0; i < totalItemCount; i++) {\n      if (idToMarketItem[i + 1].owner == msg.sender) {\n        uint currentId = idToMarketItem[i + 1].itemId;\n        MarketItem storage currentItem = idToMarketItem[currentId];\n        items[currentIndex] = currentItem;\n        currentIndex += 1;\n      }\n    }\n   \n    return items;\n  }\n\n   function buyItemBySQF(\n        address nftAddress,\n        uint256 assetId,\n        uint256 priceAnta\n    ) public {\n        _requireERC721(nftAddress);\n\n        address sender = msg.sender;\n        IERC721 nftRegistry = IERC721(nftAddress);\n        Item memory item = items[nftAddress][assetId];\n\n        require(item.id != 0, \"Asset not published\");\n        require(item.status == ItemStatus.LIST, \"Asset is not list to buy\");\n\n        address seller = item.seller;\n\n        require(seller != address(0), \"Invalid address\");\n        require(priceAnta >= item.priceAnta, \"price need equal listing price\");\n\n        uint256 fee = (antaFeePercent * priceAnta) / 100;\n        uint256 remainAmount = priceAnta - fee;\n        sqfToken.transferFrom(sender, address(this), fee);\n        sqfToken.transferFrom(sender, seller, remainAmount);\n        nftRegistry.safeTransferFrom(address(this), sender, assetId);\n\n        items[nftAddress][assetId].seller = sender;\n        items[nftAddress][assetId].status = ItemStatus.BOUGHT;\n\n        emit BuyItemSuccessful(\n            item.id,\n            assetId,\n            seller,\n            nftAddress,\n            item.priceAnta,\n            antaFeePercent,\n            fee,\n            sender,\n            \"ANTA\",\n            block.timestamp\n        );\n    }\n\n    function _requireERC721(address nftAddress) internal view {\n        require(\n            isContract(nftAddress),\n            \"The NFT Address should be a contract\"\n        );\n\n        IERC721 nftRegistry = IERC721(nftAddress);\n        require(\n            nftRegistry.supportsInterface(ERC721_Interface),\n            \"The NFT contract has an invalid ERC721 implementation\"\n        );\n    }\n\n    function isContract(address _addr) private view returns (bool){\n    uint32 size;\n    assembly {\n    size := extcodesize(_addr)\n    }\n    return (size > 0);\n}\nfunction _createItem(\n        address seller,\n        uint256 assetId,\n        address nftAddress,\n        uint256 price,\n        uint256 priceAnta\n    ) internal {\n        bytes32 itemId = keccak256(\n            abi.encodePacked(\n                block.timestamp,\n                seller,\n                assetId,\n                nftAddress,\n                price\n            )\n        );\n\n        items[nftAddress][assetId] = Item({\n            id: itemId,\n            seller: seller,\n            nftAddress: nftAddress,\n            price: price,\n            priceAnta: priceAnta,\n            status: ItemStatus.LIST\n        });\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Marketplace2/Marketplace.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace2/Marketplace.sol\":11450:12421  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace2/Marketplace.sol\":11450:12421  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200923a77c6ffa185bc5abded9f19f448ed25beded633551205ab1a4e5701c3eb664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200923a77c6ffa185bc5abded9f19f448ed25beded633551205ab1a4e5701c3eb664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x23 0xA7 PUSH29 0x6FFA185BC5ABDED9F19F448ED25BEDED633551205AB1A4E5701C3EB664 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "11450:971:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;11450:971:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200923a77c6ffa185bc5abded9f19f448ed25beded633551205ab1a4e5701c3eb664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD 0x23 0xA7 PUSH29 0x6FFA185BC5ABDED9F19F448ED25BEDED633551205AB1A4E5701C3EB664 PUSH20 0x6F6C634300080D00330000000000000000000000 ",
							"sourceMap": "11450:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11450,
									"end": 12421,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200923a77c6ffa185bc5abded9f19f448ed25beded633551205ab1a4e5701c3eb664736f6c634300080d0033",
									".code": [
										{
											"begin": 11450,
											"end": 12421,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11450,
											"end": 12421,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MarketplaceStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feePercent",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "currency",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								}
							],
							"name": "BuyItemSuccessful",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "delistBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								}
							],
							"name": "DelistItemSuccessful",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "currency",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								}
							],
							"name": "SellItemSuccessful",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ERC721_Interface",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antaFeePercent",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bnbFeePercent",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "itemOffers",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "offerPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAnta",
									"type": "uint256"
								},
								{
									"internalType": "enum MarketplaceStorage.ItemStatus",
									"name": "status",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sqfToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace2/Marketplace.sol\":15109:17002  contract MarketplaceStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace2/Marketplace.sol\":15109:17002  contract MarketplaceStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x15b81dc3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2b4c32be\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x49739678\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c80a435\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x85a8b36c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb7a60c7e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Marketplace2/Marketplace.sol\":16146:16168  IERC20 public sqfToken */\n    tag_3:\n      sload(0x02)\n      tag_9\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_9:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":192:224   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":174:225   */\n      dup2\n      mstore\n        /* \"#utility.yul\":162:164   */\n      0x20\n        /* \"#utility.yul\":147:165   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":16146:16168  IERC20 public sqfToken */\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace2/Marketplace.sol\":15771:15831  bytes4 public constant ERC721_Interface = bytes4(0x80ac58cd) */\n    tag_4:\n      tag_13\n      shl(0xe0, 0x80ac58cd)\n      dup2\n      jump\n    tag_13:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":398:431   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":380:432   */\n      dup2\n      mstore\n        /* \"#utility.yul\":368:370   */\n      0x20\n        /* \"#utility.yul\":353:371   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":15771:15831  bytes4 public constant ERC721_Interface = bytes4(0x80ac58cd) */\n      tag_11\n        /* \"#utility.yul\":236:438   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":16045:16140  mapping(address => mapping(uint256 => mapping(address => ItemOffer)))... */\n    tag_5:\n      tag_17\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      0x01\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap5\n      dup6\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      dup3\n      mstore\n      swap4\n      dup6\n      mstore\n      dup4\n      dup6\n      keccak256\n      swap1\n      mstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_17:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1128:1153   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1184:1186   */\n      0x20\n        /* \"#utility.yul\":1169:1187   */\n      dup4\n      add\n        /* \"#utility.yul\":1162:1196   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1101:1119   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":16045:16140  mapping(address => mapping(uint256 => mapping(address => ItemOffer)))... */\n      tag_11\n        /* \"#utility.yul\":954:1202   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":15909:15966  mapping(address => mapping(uint256 => Item)) public items */\n    tag_6:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      0x00\n      0x20\n      dup2\n      dup2\n      mstore\n      swap3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      mstore\n      swap1\n      dup2\n      mstore\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      swap4\n      swap5\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap5\n      swap3\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup7\n      jump\n    tag_23:\n      mload(0x40)\n      tag_11\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":16175:16201  uint8 public bnbFeePercent */\n    tag_7:\n      sload(0x02)\n      tag_29\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":2399:2403   */\n      0xff\n        /* \"#utility.yul\":2387:2404   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2369:2405   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2357:2359   */\n      0x20\n        /* \"#utility.yul\":2342:2360   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":16175:16201  uint8 public bnbFeePercent */\n      tag_11\n        /* \"#utility.yul\":2227:2411   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":16207:16234  uint8 public antaFeePercent */\n    tag_8:\n      sload(0x02)\n      tag_29\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"#utility.yul\":443:616   */\n    tag_36:\n        /* \"#utility.yul\":511:531   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":560:591   */\n      dup2\n      and\n        /* \"#utility.yul\":550:592   */\n      dup2\n      eq\n        /* \"#utility.yul\":540:610   */\n      tag_41\n      jumpi\n        /* \"#utility.yul\":606:607   */\n      0x00\n        /* \"#utility.yul\":603:604   */\n      dup1\n        /* \"#utility.yul\":596:608   */\n      revert\n        /* \"#utility.yul\":540:610   */\n    tag_41:\n        /* \"#utility.yul\":443:616   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":621:949   */\n    tag_19:\n        /* \"#utility.yul\":698:704   */\n      0x00\n        /* \"#utility.yul\":706:712   */\n      dup1\n        /* \"#utility.yul\":714:720   */\n      0x00\n        /* \"#utility.yul\":767:769   */\n      0x60\n        /* \"#utility.yul\":755:764   */\n      dup5\n        /* \"#utility.yul\":746:753   */\n      dup7\n        /* \"#utility.yul\":742:765   */\n      sub\n        /* \"#utility.yul\":738:770   */\n      slt\n        /* \"#utility.yul\":735:787   */\n      iszero\n      tag_43\n      jumpi\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":735:787   */\n    tag_43:\n        /* \"#utility.yul\":806:835   */\n      tag_44\n        /* \"#utility.yul\":825:834   */\n      dup5\n        /* \"#utility.yul\":806:835   */\n      tag_36\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":796:835   */\n      swap3\n      pop\n        /* \"#utility.yul\":882:884   */\n      0x20\n        /* \"#utility.yul\":871:880   */\n      dup5\n        /* \"#utility.yul\":867:885   */\n      add\n        /* \"#utility.yul\":854:886   */\n      calldataload\n        /* \"#utility.yul\":844:886   */\n      swap2\n      pop\n        /* \"#utility.yul\":905:943   */\n      tag_45\n        /* \"#utility.yul\":939:941   */\n      0x40\n        /* \"#utility.yul\":928:937   */\n      dup6\n        /* \"#utility.yul\":924:942   */\n      add\n        /* \"#utility.yul\":905:943   */\n      tag_36\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":895:943   */\n      swap1\n      pop\n        /* \"#utility.yul\":621:949   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1207:1461   */\n    tag_25:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1283:1289   */\n      dup1\n        /* \"#utility.yul\":1336:1338   */\n      0x40\n        /* \"#utility.yul\":1324:1333   */\n      dup4\n        /* \"#utility.yul\":1315:1322   */\n      dup6\n        /* \"#utility.yul\":1311:1334   */\n      sub\n        /* \"#utility.yul\":1307:1339   */\n      slt\n        /* \"#utility.yul\":1304:1356   */\n      iszero\n      tag_48\n      jumpi\n        /* \"#utility.yul\":1352:1353   */\n      0x00\n        /* \"#utility.yul\":1349:1350   */\n      dup1\n        /* \"#utility.yul\":1342:1354   */\n      revert\n        /* \"#utility.yul\":1304:1356   */\n    tag_48:\n        /* \"#utility.yul\":1375:1404   */\n      tag_49\n        /* \"#utility.yul\":1394:1403   */\n      dup4\n        /* \"#utility.yul\":1375:1404   */\n      tag_36\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1365:1404   */\n      swap5\n        /* \"#utility.yul\":1451:1453   */\n      0x20\n        /* \"#utility.yul\":1436:1454   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1423:1455   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1207:1461   */\n      jump\t// out\n        /* \"#utility.yul\":1466:2222   */\n    tag_28:\n        /* \"#utility.yul\":1765:1790   */\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1864:1879   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":1859:1861   */\n      0x20\n        /* \"#utility.yul\":1844:1862   */\n      dup4\n      add\n        /* \"#utility.yul\":1837:1880   */\n      mstore\n        /* \"#utility.yul\":1916:1931   */\n      dup6\n      and\n        /* \"#utility.yul\":1911:1913   */\n      0x40\n        /* \"#utility.yul\":1896:1914   */\n      dup3\n      add\n        /* \"#utility.yul\":1889:1932   */\n      mstore\n        /* \"#utility.yul\":1963:1965   */\n      0x60\n        /* \"#utility.yul\":1948:1966   */\n      dup2\n      add\n        /* \"#utility.yul\":1941:1975   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":2006:2009   */\n      0x80\n        /* \"#utility.yul\":1991:2010   */\n      dup2\n      add\n        /* \"#utility.yul\":1984:2019   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":1752:1755   */\n      0xc0\n        /* \"#utility.yul\":1737:1756   */\n      dup2\n      add\n        /* \"#utility.yul\":2049:2050   */\n      0x05\n        /* \"#utility.yul\":2038:2051   */\n      dup4\n      lt\n        /* \"#utility.yul\":2028:2172   */\n      tag_51\n      jumpi\n        /* \"#utility.yul\":2094:2104   */\n      0x4e487b71\n        /* \"#utility.yul\":2089:2092   */\n      0xe0\n        /* \"#utility.yul\":2085:2105   */\n      shl\n        /* \"#utility.yul\":2082:2083   */\n      0x00\n        /* \"#utility.yul\":2075:2106   */\n      mstore\n        /* \"#utility.yul\":2129:2133   */\n      0x21\n        /* \"#utility.yul\":2126:2127   */\n      0x04\n        /* \"#utility.yul\":2119:2134   */\n      mstore\n        /* \"#utility.yul\":2157:2161   */\n      0x24\n        /* \"#utility.yul\":2154:2155   */\n      0x00\n        /* \"#utility.yul\":2147:2162   */\n      revert\n        /* \"#utility.yul\":2028:2172   */\n    tag_51:\n        /* \"#utility.yul\":2209:2215   */\n      dup3\n        /* \"#utility.yul\":2203:2206   */\n      0xa0\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2188:2207   */\n      add\n        /* \"#utility.yul\":2181:2216   */\n      mstore\n        /* \"#utility.yul\":1466:2222   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204fe369b32c68310234563d0f8f9b03bafefa4fa685672b659d6e023f387bfd5c64736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806315b81dc3146100675780632b4c32be1461009757806349739678146100be5780635c80a4351461010957806385a8b36c14610176578063b7a60c7e1461019c575b600080fd5b60025461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a56380ac58cd60e01b81565b6040516001600160e01b0319909116815260200161008e565b6100f46100cc3660046101cc565b6001602081815260009485526040808620825293855283852090529083529120805491015482565b6040805192835260208301919091520161008e565b610164610117366004610208565b600060208181529281526040808220909352908152208054600182015460028301546003840154600485015460059095015493946001600160a01b03938416949290931692909160ff1686565b60405161008e96959493929190610232565b60025461018a90600160a01b900460ff1681565b60405160ff909116815260200161008e565b60025461018a90600160a81b900460ff1681565b80356001600160a01b03811681146101c757600080fd5b919050565b6000806000606084860312156101e157600080fd5b6101ea846101b0565b9250602084013591506101ff604085016101b0565b90509250925092565b6000806040838503121561021b57600080fd5b610224836101b0565b946020939093013593505050565b8681526001600160a01b03868116602083015285166040820152606081018490526080810183905260c081016005831061027c57634e487b7160e01b600052602160045260246000fd5b8260a083015297965050505050505056fea26469706673582212204fe369b32c68310234563d0f8f9b03bafefa4fa685672b659d6e023f387bfd5c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x15B81DC3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2B4C32BE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x49739678 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x5C80A435 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x85A8B36C EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xB7A60C7E EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xF4 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP3 MSTORE SWAP4 DUP6 MSTORE DUP4 DUP6 KECCAK256 SWAP1 MSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x164 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP3 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x18A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x18A SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1FF PUSH1 0x40 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 DUP4 PUSH2 0x1B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xE3 PUSH10 0xB32C68310234563D0F8F SWAP12 SUB 0xBA INVALID STATICCALL 0x4F 0xA6 DUP6 PUSH8 0x2B659D6E023F387B REVERT 0x5C PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "15109:1893:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ERC721_Interface_470": {
									"entryPoint": null,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@antaFeePercent_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bnbFeePercent_491": {
									"entryPoint": null,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@itemOffers_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@items_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqfToken_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_enum$_ItemStatus_$445__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 562,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$201__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2413:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "129:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "139:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "151:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "147:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "147:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "139:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "196:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "212:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "217:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "208:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "208:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "221:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "204:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "192:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "174:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "174:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "174:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$201__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "98:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "120:4:1",
														"type": ""
													}
												],
												"src": "14:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "335:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "345:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "368:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "345:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "387:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "402:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "414:3:1",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "419:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "410:20:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "398:33:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "380:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "380:52:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "304:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "315:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "326:4:1",
														"type": ""
													}
												],
												"src": "236:202:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "502:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "524:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "511:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "594:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "603:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "606:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "596:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "596:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "596:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "564:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "579:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "584:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "575:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "575:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "588:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "571:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "571:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "560:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "560:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "550:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "550:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "543:50:1"
															},
															"nodeType": "YulIf",
															"src": "540:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "471:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "482:5:1",
														"type": ""
													}
												],
												"src": "443:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "725:224:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "780:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "783:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "773:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "773:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "773:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "755:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "742:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "767:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "738:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "738:32:1"
															},
															"nodeType": "YulIf",
															"src": "735:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "796:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "825:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "806:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "806:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "796:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "844:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "871:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "882:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "867:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "854:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "854:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "844:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "895:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "928:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "939:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "905:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "905:38:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "675:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "686:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "698:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "706:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "714:6:1",
														"type": ""
													}
												],
												"src": "621:328:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1083:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1093:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1105:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1116:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1101:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1093:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1135:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1146:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1184:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1169:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1189:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1162:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1162:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1044:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1055:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1063:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1074:4:1",
														"type": ""
													}
												],
												"src": "954:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1294:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1340:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1352:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1342:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1342:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1342:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1315:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1324:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1311:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1336:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1307:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:32:1"
															},
															"nodeType": "YulIf",
															"src": "1304:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1365:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1394:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1375:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1413:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1440:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1451:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1436:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1436:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1423:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1423:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1413:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1275:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1283:6:1",
														"type": ""
													}
												],
												"src": "1207:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:503:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1729:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1741:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1752:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1737:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1729:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1772:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1765:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1799:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1817:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1822:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1813:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1813:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1826:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1809:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1803:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1859:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1844:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1876:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1864:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1864:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1837:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1837:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1911:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1896:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "1920:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1928:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1916:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1889:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1889:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1889:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1963:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1948:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1968:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1941:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1995:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2006:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1991:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1991:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "2012:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1984:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1984:35:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2061:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2089:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2094:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2085:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2085:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2075:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2075:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:1",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2119:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2119:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2154:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2157:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2147:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2147:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2147:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "2041:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2049:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2038:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2038:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2031:21:1"
															},
															"nodeType": "YulIf",
															"src": "2028:144:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "2209:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_enum$_ItemStatus_$445__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1648:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1659:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1667:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1675:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1691:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1699:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1710:4:1",
														"type": ""
													}
												],
												"src": "1466:756:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2324:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2334:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2346:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2357:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2342:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2342:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2334:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2376:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2391:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2399:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2369:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2369:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2293:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2304:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2315:4:1",
														"type": ""
													}
												],
												"src": "2227:184:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IERC20_$201__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_enum$_ItemStatus_$445__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        if iszero(lt(value5, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c806315b81dc3146100675780632b4c32be1461009757806349739678146100be5780635c80a4351461010957806385a8b36c14610176578063b7a60c7e1461019c575b600080fd5b60025461007a906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a56380ac58cd60e01b81565b6040516001600160e01b0319909116815260200161008e565b6100f46100cc3660046101cc565b6001602081815260009485526040808620825293855283852090529083529120805491015482565b6040805192835260208301919091520161008e565b610164610117366004610208565b600060208181529281526040808220909352908152208054600182015460028301546003840154600485015460059095015493946001600160a01b03938416949290931692909160ff1686565b60405161008e96959493929190610232565b60025461018a90600160a01b900460ff1681565b60405160ff909116815260200161008e565b60025461018a90600160a81b900460ff1681565b80356001600160a01b03811681146101c757600080fd5b919050565b6000806000606084860312156101e157600080fd5b6101ea846101b0565b9250602084013591506101ff604085016101b0565b90509250925092565b6000806040838503121561021b57600080fd5b610224836101b0565b946020939093013593505050565b8681526001600160a01b03868116602083015285166040820152606081018490526080810183905260c081016005831061027c57634e487b7160e01b600052602160045260246000fd5b8260a083015297965050505050505056fea26469706673582212204fe369b32c68310234563d0f8f9b03bafefa4fa685672b659d6e023f387bfd5c64736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x15B81DC3 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x2B4C32BE EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x49739678 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x5C80A435 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x85A8B36C EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0xB7A60C7E EQ PUSH2 0x19C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x7A SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0xF4 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP5 DUP6 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP3 MSTORE SWAP4 DUP6 MSTORE DUP4 DUP6 KECCAK256 SWAP1 MSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x8E JUMP JUMPDEST PUSH2 0x164 PUSH2 0x117 CALLDATASIZE PUSH1 0x4 PUSH2 0x208 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 DUP2 MSTORE SWAP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 MSTORE SWAP1 DUP2 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD SWAP4 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP3 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x18A SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x8E JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x18A SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EA DUP5 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1FF PUSH1 0x40 DUP6 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 DUP4 PUSH2 0x1B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F 0xE3 PUSH10 0xB32C68310234563D0F8F SWAP12 SUB 0xBA INVALID STATICCALL 0x4F 0xA6 DUP6 PUSH8 0x2B659D6E023F387B REVERT 0x5C PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "15109:1893:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16146:22;;;;;-1:-1:-1;;;;;16146:22:0;;;;;;-1:-1:-1;;;;;192:32:1;;;174:51;;162:2;147:18;16146:22:0;;;;;;;;15771:60;;-1:-1:-1;;;15771:60:0;;;;;-1:-1:-1;;;;;;398:33:1;;;380:52;;368:2;353:18;15771:60:0;236:202:1;16045:95:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1128:25:1;;;1184:2;1169:18;;1162:34;;;;1101:18;16045:95:0;954:248:1;15909:57:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15909:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;16175:26::-;;;;;-1:-1:-1;;;16175:26:0;;;;;;;;;2399:4:1;2387:17;;;2369:36;;2357:2;2342:18;16175:26:0;2227:184:1;16207:27:0;;;;;-1:-1:-1;;;16207:27:0;;;;;;443:173:1;511:20;;-1:-1:-1;;;;;560:31:1;;550:42;;540:70;;606:1;603;596:12;540:70;443:173;;;:::o;621:328::-;698:6;706;714;767:2;755:9;746:7;742:23;738:32;735:52;;;783:1;780;773:12;735:52;806:29;825:9;806:29;:::i;:::-;796:39;;882:2;871:9;867:18;854:32;844:42;;905:38;939:2;928:9;924:18;905:38;:::i;:::-;895:48;;621:328;;;;;:::o;1207:254::-;1275:6;1283;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1375:29;1394:9;1375:29;:::i;:::-;1365:39;1451:2;1436:18;;;;1423:32;;-1:-1:-1;;;1207:254:1:o;1466:756::-;1765:25;;;-1:-1:-1;;;;;1864:15:1;;;1859:2;1844:18;;1837:43;1916:15;;1911:2;1896:18;;1889:43;1963:2;1948:18;;1941:34;;;2006:3;1991:19;;1984:35;;;1752:3;1737:19;;2049:1;2038:13;;2028:144;;2094:10;2089:3;2085:20;2082:1;2075:31;2129:4;2126:1;2119:15;2157:4;2154:1;2147:15;2028:144;2209:6;2203:3;2192:9;2188:19;2181:35;1466:756;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "141400",
								"executionCost": "190",
								"totalCost": "141590"
							},
							"external": {
								"ERC721_Interface()": "225",
								"antaFeePercent()": "2418",
								"bnbFeePercent()": "2396",
								"itemOffers(address,uint256,address)": "infinite",
								"items(address,uint256)": "13460",
								"sqfToken()": "2304"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15109,
									"end": 17002,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204fe369b32c68310234563d0f8f9b03bafefa4fa685672b659d6e023f387bfd5c64736f6c634300080d0033",
									".code": [
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "15B81DC3"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "2B4C32BE"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "49739678"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "5C80A435"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "85A8B36C"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "B7A60C7E"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15109,
											"end": 17002,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 192,
											"end": 224,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 174,
											"end": 225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 174,
											"end": 225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 162,
											"end": 164,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 398,
											"end": 431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 398,
											"end": 431,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 398,
											"end": 431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 380,
											"end": 432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 368,
											"end": 370,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 353,
											"end": 371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 236,
											"end": 438,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1128,
											"end": 1153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 954,
											"end": 1202,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2399,
											"end": 2403,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2387,
											"end": 2404,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2404,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2369,
											"end": 2405,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2359,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2342,
											"end": 2360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2227,
											"end": 2411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 616,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 443,
											"end": 616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 511,
											"end": 531,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 531,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 560,
											"end": 591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 560,
											"end": 591,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 550,
											"end": 592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 550,
											"end": 592,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 540,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 540,
											"end": 610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 596,
											"end": 608,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 540,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 540,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 443,
											"end": 616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 443,
											"end": 616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 443,
											"end": 616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 443,
											"end": 616,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 621,
											"end": 949,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 621,
											"end": 949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 698,
											"end": 704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 712,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 714,
											"end": 720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 769,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 755,
											"end": 764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 742,
											"end": 765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 738,
											"end": 770,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 735,
											"end": 787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 735,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 735,
											"end": 787,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 735,
											"end": 787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 806,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 825,
											"end": 834,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 806,
											"end": 835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 806,
											"end": 835,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 806,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 806,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 796,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 796,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 882,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 871,
											"end": 880,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 867,
											"end": 885,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 854,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 844,
											"end": 886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 905,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 939,
											"end": 941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 928,
											"end": 937,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 924,
											"end": 942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 905,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 905,
											"end": 943,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 905,
											"end": 943,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 905,
											"end": 943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 895,
											"end": 943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 895,
											"end": 943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 621,
											"end": 949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 621,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 621,
											"end": 949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 621,
											"end": 949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 621,
											"end": 949,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 621,
											"end": 949,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1207,
											"end": 1461,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1207,
											"end": 1461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1334,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1339,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1356,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1304,
											"end": 1356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1354,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1356,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1304,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1394,
											"end": 1403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1375,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1404,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1451,
											"end": 1453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1436,
											"end": 1454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1207,
											"end": 1461,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1790,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1790,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1879,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1879,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1879,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1861,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1880,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1931,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1931,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1896,
											"end": 1914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 1932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2006,
											"end": 2009,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1991,
											"end": 2010,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1991,
											"end": 2010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2019,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1984,
											"end": 2019,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1755,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 1756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2038,
											"end": 2051,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2051,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2028,
											"end": 2172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2104,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2089,
											"end": 2092,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2085,
											"end": 2105,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 2126,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2161,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2154,
											"end": 2155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2147,
											"end": 2162,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2028,
											"end": 2172,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2028,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2215,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2203,
											"end": 2206,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2216,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 2222,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ERC721_Interface()": "2b4c32be",
							"antaFeePercent()": "b7a60c7e",
							"bnbFeePercent()": "85a8b36c",
							"itemOffers(address,uint256,address)": "49739678",
							"items(address,uint256)": "5c80a435",
							"sqfToken()": "15b81dc3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feePercent\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"BuyItemSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delistBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"DelistItemSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"SellItemSuccessful\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC721_Interface\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antaFeePercent\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnbFeePercent\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"itemOffers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offerPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAnta\",\"type\":\"uint256\"},{\"internalType\":\"enum MarketplaceStorage.ItemStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sqfToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"MarketplaceStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 477,
								"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
								"label": "items",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Item)459_storage))"
							},
							{
								"astId": 486,
								"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
								"label": "itemOffers",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage)))"
							},
							{
								"astId": 489,
								"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
								"label": "sqfToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)201"
							},
							{
								"astId": 491,
								"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
								"label": "bnbFeePercent",
								"offset": 20,
								"slot": "2",
								"type": "t_uint8"
							},
							{
								"astId": 493,
								"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
								"label": "antaFeePercent",
								"offset": 21,
								"slot": "2",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)201": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(ItemStatus)445": {
								"encoding": "inplace",
								"label": "enum MarketplaceStorage.ItemStatus",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage))"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Item)459_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Item)459_storage)"
							},
							"t_mapping(t_address,t_struct(ItemOffer)464_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MarketplaceStorage.ItemOffer)",
								"numberOfBytes": "32",
								"value": "t_struct(ItemOffer)464_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(ItemOffer)464_storage)"
							},
							"t_mapping(t_uint256,t_struct(Item)459_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MarketplaceStorage.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)459_storage"
							},
							"t_struct(Item)459_storage": {
								"encoding": "inplace",
								"label": "struct MarketplaceStorage.Item",
								"members": [
									{
										"astId": 447,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 449,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 451,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "nftAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 453,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 455,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "priceAnta",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 458,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "status",
										"offset": 0,
										"slot": "5",
										"type": "t_enum(ItemStatus)445"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(ItemOffer)464_storage": {
								"encoding": "inplace",
								"label": "struct MarketplaceStorage.ItemOffer",
								"members": [
									{
										"astId": 461,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 463,
										"contract": "contracts/Marketplace2/Marketplace.sol:MarketplaceStorage",
										"label": "offerPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"NFTMarket": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feePercent",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "currency",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								}
							],
							"name": "BuyItemSuccessful",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "delistBy",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								}
							],
							"name": "DelistItemSuccessful",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "MarketItemCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "currency",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "createdAt",
									"type": "uint256"
								}
							],
							"name": "SellItemSuccessful",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ERC721_Interface",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "antaFeePercent",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bnbFeePercent",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAnta",
									"type": "uint256"
								}
							],
							"name": "buyItemBySQF",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "createMarketItem",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "createMarketSale",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "fetchMarketItem",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct NFTMarket.MarketItem",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchMarketItems",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct NFTMarket.MarketItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchMyNFTs",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct NFTMarket.MarketItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "marketItemId",
									"type": "uint256"
								}
							],
							"name": "getMarketItem",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "nftContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "seller",
											"type": "address"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct NFTMarket.MarketItem",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "itemOffers",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "offerPrice",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "id",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "priceAnta",
									"type": "uint256"
								},
								{
									"internalType": "enum MarketplaceStorage.ItemStatus",
									"name": "status",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "sellItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "setSQFToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sqfToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Marketplace2/Marketplace.sol\":17004:24072  contract NFTMarket is ReentrancyGuard, MarketplaceStorage, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Marketplace2/Marketplace.sol\":14124:14125  1 */\n  0x01\n    /* \"contracts/Marketplace2/Marketplace.sol\":14229:14236  _status */\n  0x00\n    /* \"contracts/Marketplace2/Marketplace.sol\":14229:14251  _status = _NOT_ENTERED */\n  sstore\n    /* \"contracts/Marketplace2/Marketplace.sol\":1563:1595  _transferOwnership(_msgSender()) */\n  tag_6\n    /* \"contracts/Marketplace2/Marketplace.sol\":635:645  msg.sender */\n  caller\n    /* \"contracts/Marketplace2/Marketplace.sol\":1563:1581  _transferOwnership */\n  tag_9\n    /* \"contracts/Marketplace2/Marketplace.sol\":1563:1595  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"contracts/Marketplace2/Marketplace.sol\":17004:24072  contract NFTMarket is ReentrancyGuard, MarketplaceStorage, Ownable {... */\n  jump(tag_10)\n    /* \"contracts/Marketplace2/Marketplace.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"contracts/Marketplace2/Marketplace.sol\":3004:3010  _owner */\n  0x04\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Marketplace2/Marketplace.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"contracts/Marketplace2/Marketplace.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/Marketplace2/Marketplace.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"contracts/Marketplace2/Marketplace.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"contracts/Marketplace2/Marketplace.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"contracts/Marketplace2/Marketplace.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/Marketplace2/Marketplace.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/Marketplace2/Marketplace.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/Marketplace2/Marketplace.sol\":2975:3099  {... */\n  pop\n    /* \"contracts/Marketplace2/Marketplace.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Marketplace2/Marketplace.sol\":17004:24072  contract NFTMarket is ReentrancyGuard, MarketplaceStorage, Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Marketplace2/Marketplace.sol\":17004:24072  contract NFTMarket is ReentrancyGuard, MarketplaceStorage, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb7a60c7e\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb7a60c7e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc23b139e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc7be7a49\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf01b52dc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x85a8b36c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x92bf77dd\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x2b4c32be\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x2b4c32be\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x49739678\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x58eb2df5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c80a435\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x68915327\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x0f08efe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x15b81dc3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x202e3740\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2a45b250\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Marketplace2/Marketplace.sol\":20261:20869  function fetchMarketItems() public view returns (MarketItem[] memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Marketplace2/Marketplace.sol\":16146:16168  IERC20 public sqfToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      sload(0x03)\n      tag_29\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_29:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1393:1425   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1375:1426   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":16146:16168  IERC20 public sqfToken */\n      tag_26\n        /* \"#utility.yul\":1215:1432   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":20873:21576  function fetchMyNFTs() public view returns (MarketItem[] memory) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_24\n      tag_35\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":20104:20257  function fetchMarketItem(uint itemId) public view returns (MarketItem memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":15771:15831  bytes4 public constant ERC721_Interface = bytes4(0x80ac58cd) */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      shl(0xe0, 0x80ac58cd)\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":2043:2076   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2025:2077   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":1998:2016   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":15771:15831  bytes4 public constant ERC721_Interface = bytes4(0x80ac58cd) */\n      tag_26\n        /* \"#utility.yul\":1881:2083   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":16045:16140  mapping(address => mapping(uint256 => mapping(address => ItemOffer)))... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      dup3\n      mstore\n      swap3\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n      swap1\n      mstore\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_50:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2859:2884   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":2915:2917   */\n      0x20\n        /* \"#utility.yul\":2900:2918   */\n      dup4\n      add\n        /* \"#utility.yul\":2893:2927   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2832:2850   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":16045:16140  mapping(address => mapping(uint256 => mapping(address => ItemOffer)))... */\n      tag_26\n        /* \"#utility.yul\":2685:2933   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":17829:18455  function createMarketItem(... */\n    tag_8:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/Marketplace2/Marketplace.sol\":15909:15966  mapping(address => mapping(uint256 => Item)) public items */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_62:\n      0x01\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      sload\n      0x02\n      dup3\n      add\n      sload\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      dup5\n      add\n      sload\n      0x05\n      swap1\n      swap5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      dup5\n      and\n      swap5\n      swap4\n      swap1\n      swap3\n      and\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup7\n      jump\n    tag_61:\n      mload(0x40)\n      tag_26\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":18459:19572  function sellItem(... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_56\n      tag_69\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":2310:2411  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_56\n      tag_73\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":16175:16201  uint8 public bnbFeePercent */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      sload(0x03)\n      tag_75\n      swap1\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n    tag_75:\n      mload(0x40)\n        /* \"#utility.yul\":4711:4715   */\n      0xff\n        /* \"#utility.yul\":4699:4716   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4681:4717   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4669:4671   */\n      0x20\n        /* \"#utility.yul\":4654:4672   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":16175:16201  uint8 public bnbFeePercent */\n      tag_26\n        /* \"#utility.yul\":4539:4723   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":1678:1763  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":1750:1756  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Marketplace2/Marketplace.sol\":1678:1763  function owner() public view virtual returns (address) {... */\n      jump(tag_29)\n        /* \"contracts/Marketplace2/Marketplace.sol\":17727:17825  function setSQFToken(address _address) external onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_56\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":16207:16234  uint8 public antaFeePercent */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      sload(0x03)\n      tag_75\n      swap1\n      shl(0xa8, 0x01)\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":19576:20100  function createMarketSale(... */\n    tag_16:\n      tag_56\n      tag_94\n      calldatasize\n      0x04\n      tag_63\n      jump\t// in\n    tag_94:\n      tag_95\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":21581:22877  function buyItemBySQF(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_56\n      tag_103\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":2560:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_56\n      tag_107\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/Marketplace2/Marketplace.sol\":20261:20869  function fetchMarketItems() public view returns (MarketItem[] memory) {... */\n    tag_25:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20310:20329  MarketItem[] memory */\n      0x60\n        /* \"contracts/Marketplace2/Marketplace.sol\":20337:20351  uint itemCount */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20354:20372  _itemIds.current() */\n      tag_110\n        /* \"contracts/Marketplace2/Marketplace.sol\":20354:20362  _itemIds */\n      0x05\n        /* \"contracts/Marketplace2/Marketplace.sol\":11944:11958  counter._value */\n      sload\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":11853:11965  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":20354:20372  _itemIds.current() */\n    tag_110:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20337:20372  uint itemCount = _itemIds.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20378:20398  uint unsoldItemCount */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20422:20442  _itemsSold.current() */\n      tag_112\n        /* \"contracts/Marketplace2/Marketplace.sol\":20422:20432  _itemsSold */\n      0x06\n        /* \"contracts/Marketplace2/Marketplace.sol\":11944:11958  counter._value */\n      sload\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":11853:11965  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":20422:20442  _itemsSold.current() */\n    tag_112:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20401:20409  _itemIds */\n      0x05\n        /* \"contracts/Marketplace2/Marketplace.sol\":11944:11958  counter._value */\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":20401:20442  _itemIds.current() - _itemsSold.current() */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20378:20442  uint unsoldItemCount = _itemIds.current() - _itemsSold.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20448:20465  uint currentIndex */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20476:20501  MarketItem[] memory items */\n      dup1\n        /* \"contracts/Marketplace2/Marketplace.sol\":20521:20536  unsoldItemCount */\n      dup3\n        /* \"contracts/Marketplace2/Marketplace.sol\":20504:20537  new MarketItem[](unsoldItemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_117\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup2\n      0x20\n      add\n    tag_120:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_120\n      jumpi\n      swap1\n      pop\n    tag_119:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20476:20537  MarketItem[] memory items = new MarketItem[](unsoldItemCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20548:20554  uint i */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20543:20843  for (uint i = 0; i < itemCount; i++) {... */\n    tag_123:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20564:20573  itemCount */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":20560:20561  i */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":20560:20573  i < itemCount */\n      lt\n        /* \"contracts/Marketplace2/Marketplace.sol\":20543:20843  for (uint i = 0; i < itemCount; i++) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":20631:20632  0 */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20592:20606  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":20631:20632  0 */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":20607:20612  i + 1 */\n      tag_126\n        /* \"contracts/Marketplace2/Marketplace.sol\":20607:20608  i */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":20611:20612  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":20607:20612  i + 1 */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20592:20613  idToMarketItem[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":20592:20619  idToMarketItem[i + 1].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":20592:20633  idToMarketItem[i + 1].owner == address(0) */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":20588:20837  if (idToMarketItem[i + 1].owner == address(0)) {... */\n      tag_128\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":20645:20659  uint currentId */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20662:20676  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":20645:20659  uint currentId */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":20677:20682  i + 1 */\n      tag_129\n        /* \"contracts/Marketplace2/Marketplace.sol\":20677:20678  i */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":20681:20682  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":20677:20682  i + 1 */\n      tag_127\n      jump\t// in\n    tag_129:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20662:20683  idToMarketItem[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":20662:20690  idToMarketItem[i + 1].itemId */\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":20733:20758  idToMarketItem[currentId] */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":20733:20747  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":20733:20758  idToMarketItem[currentId] */\n      dup5\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":20768:20801  items[currentIndex] = currentItem */\n      dup3\n      mload\n      0xc0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap6\n      dup3\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap4\n      and\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup4\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":20768:20787  items[currentIndex] */\n      dup6\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":20662:20690  idToMarketItem[i + 1].itemId */\n      swap1\n      swap4\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20768:20773  items */\n      dup6\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":20774:20786  currentIndex */\n      dup8\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":20768:20787  items[currentIndex] */\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":20768:20801  items[currentIndex] = currentItem */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":20811:20828  currentIndex += 1 */\n      tag_133\n        /* \"contracts/Marketplace2/Marketplace.sol\":20827:20828  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":20811:20828  currentIndex += 1 */\n      dup7\n      tag_127\n      jump\t// in\n    tag_133:\n      swap5\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20635:20837  {... */\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20588:20837  if (idToMarketItem[i + 1].owner == address(0)) {... */\n    tag_128:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20575:20578  i++ */\n      dup1\n      tag_134\n      dup2\n      tag_135\n      jump\t// in\n    tag_134:\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20543:20843  for (uint i = 0; i < itemCount; i++) {... */\n      jump(tag_123)\n    tag_124:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20859:20864  items */\n      swap5\n        /* \"contracts/Marketplace2/Marketplace.sol\":20261:20869  function fetchMarketItems() public view returns (MarketItem[] memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":20873:21576  function fetchMyNFTs() public view returns (MarketItem[] memory) {... */\n    tag_35:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20917:20936  MarketItem[] memory */\n      0x60\n        /* \"contracts/Marketplace2/Marketplace.sol\":20944:20963  uint totalItemCount */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20966:20984  _itemIds.current() */\n      tag_137\n        /* \"contracts/Marketplace2/Marketplace.sol\":20966:20974  _itemIds */\n      0x05\n        /* \"contracts/Marketplace2/Marketplace.sol\":11944:11958  counter._value */\n      sload\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":11853:11965  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":20966:20984  _itemIds.current() */\n    tag_137:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20944:20984  uint totalItemCount = _itemIds.current() */\n      swap1\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20990:21004  uint itemCount */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21014:21031  uint currentIndex */\n      dup1\n        /* \"contracts/Marketplace2/Marketplace.sol\":21047:21053  uint i */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21042:21178  for (uint i = 0; i < totalItemCount; i++) {... */\n    tag_138:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21063:21077  totalItemCount */\n      dup4\n        /* \"contracts/Marketplace2/Marketplace.sol\":21059:21060  i */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":21059:21077  i < totalItemCount */\n      lt\n        /* \"contracts/Marketplace2/Marketplace.sol\":21042:21178  for (uint i = 0; i < totalItemCount; i++) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":21127:21137  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":21096:21110  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":21096:21117  idToMarketItem[i + 1] */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21111:21116  i + 1 */\n      tag_141\n        /* \"contracts/Marketplace2/Marketplace.sol\":21111:21112  i */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":21115:21116  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21111:21116  i + 1 */\n      tag_127\n      jump\t// in\n    tag_141:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21096:21117  idToMarketItem[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":21096:21123  idToMarketItem[i + 1].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":21096:21137  idToMarketItem[i + 1].owner == msg.sender */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":21092:21172  if (idToMarketItem[i + 1].owner == msg.sender) {... */\n      tag_142\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":21149:21163  itemCount += 1 */\n      tag_143\n        /* \"contracts/Marketplace2/Marketplace.sol\":21162:21163  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21149:21163  itemCount += 1 */\n      dup5\n      tag_127\n      jump\t// in\n    tag_143:\n      swap3\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21092:21172  if (idToMarketItem[i + 1].owner == msg.sender) {... */\n    tag_142:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21079:21082  i++ */\n      dup1\n      tag_144\n      dup2\n      tag_135\n      jump\t// in\n    tag_144:\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21042:21178  for (uint i = 0; i < totalItemCount; i++) {... */\n      jump(tag_138)\n    tag_139:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21184:21209  MarketItem[] memory items */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21229:21238  itemCount */\n      dup3\n        /* \"contracts/Marketplace2/Marketplace.sol\":21212:21239  new MarketItem[](itemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      tag_146\n      tag_118\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_147\n      jumpi\n      dup2\n      0x20\n      add\n    tag_148:\n      tag_149\n      tag_122\n      jump\t// in\n    tag_149:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_148\n      jumpi\n      swap1\n      pop\n    tag_147:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21184:21239  MarketItem[] memory items = new MarketItem[](itemCount) */\n      swap1\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21250:21256  uint i */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21245:21550  for (uint i = 0; i < totalItemCount; i++) {... */\n    tag_150:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21266:21280  totalItemCount */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":21262:21263  i */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":21262:21280  i < totalItemCount */\n      lt\n        /* \"contracts/Marketplace2/Marketplace.sol\":21245:21550  for (uint i = 0; i < totalItemCount; i++) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":21330:21340  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":21299:21313  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":21299:21320  idToMarketItem[i + 1] */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21314:21319  i + 1 */\n      tag_153\n        /* \"contracts/Marketplace2/Marketplace.sol\":21314:21315  i */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":21318:21319  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21314:21319  i + 1 */\n      tag_127\n      jump\t// in\n    tag_153:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21299:21320  idToMarketItem[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":21299:21326  idToMarketItem[i + 1].owner */\n      0x04\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":21299:21340  idToMarketItem[i + 1].owner == msg.sender */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":21295:21544  if (idToMarketItem[i + 1].owner == msg.sender) {... */\n      tag_154\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":21352:21366  uint currentId */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21369:21383  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":21352:21366  uint currentId */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":21384:21389  i + 1 */\n      tag_155\n        /* \"contracts/Marketplace2/Marketplace.sol\":21384:21385  i */\n      dup5\n        /* \"contracts/Marketplace2/Marketplace.sol\":21388:21389  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21384:21389  i + 1 */\n      tag_127\n      jump\t// in\n    tag_155:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21369:21390  idToMarketItem[i + 1] */\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      dup2\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":21369:21397  idToMarketItem[i + 1].itemId */\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":21440:21465  idToMarketItem[currentId] */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":21440:21454  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":21440:21465  idToMarketItem[currentId] */\n      dup5\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":21475:21508  items[currentIndex] = currentItem */\n      dup3\n      mload\n      0xc0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap6\n      dup3\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup5\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap4\n      and\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup4\n      add\n      sload\n      0xa0\n      dup4\n      add\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":21475:21494  items[currentIndex] */\n      dup6\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":21369:21397  idToMarketItem[i + 1].itemId */\n      swap1\n      swap4\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21475:21480  items */\n      dup6\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":21481:21493  currentIndex */\n      dup8\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":21475:21494  items[currentIndex] */\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_157\n      tag_132\n      jump\t// in\n    tag_157:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":21475:21508  items[currentIndex] = currentItem */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":21518:21535  currentIndex += 1 */\n      tag_158\n        /* \"contracts/Marketplace2/Marketplace.sol\":21534:21535  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21518:21535  currentIndex += 1 */\n      dup7\n      tag_127\n      jump\t// in\n    tag_158:\n      swap5\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21342:21544  {... */\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21295:21544  if (idToMarketItem[i + 1].owner == msg.sender) {... */\n    tag_154:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21282:21285  i++ */\n      dup1\n      tag_159\n      dup2\n      tag_135\n      jump\t// in\n    tag_159:\n      swap2\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21245:21550  for (uint i = 0; i < totalItemCount; i++) {... */\n      jump(tag_150)\n        /* \"contracts/Marketplace2/Marketplace.sol\":20104:20257  function fetchMarketItem(uint itemId) public view returns (MarketItem memory) {... */\n    tag_41:\n        /* \"contracts/Marketplace2/Marketplace.sol\":20163:20180  MarketItem memory */\n      tag_160\n      tag_122\n      jump\t// in\n    tag_160:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20188:20210  MarketItem memory item */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":20213:20235  idToMarketItem[itemId] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":20213:20227  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":20213:20235  idToMarketItem[itemId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":20188:20235  MarketItem memory item = idToMarketItem[itemId] */\n      dup3\n      mload\n      0xc0\n      dup2\n      add\n      dup5\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup2\n      add\n      sload\n      dup3\n      and\n      0x60\n      dup5\n      add\n      mstore\n      0x04\n      dup2\n      add\n      sload\n      swap1\n      swap2\n      and\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      add\n      sload\n      0xa0\n      dup3\n      add\n      mstore\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":20104:20257  function fetchMarketItem(uint itemId) public view returns (MarketItem memory) {... */\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":17829:18455  function createMarketItem(... */\n    tag_59:\n        /* \"contracts/Marketplace2/Marketplace.sol\":14167:14168  2 */\n      0x02\n        /* \"contracts/Marketplace2/Marketplace.sol\":14748:14755  _status */\n      sload(0x00)\n        /* \"contracts/Marketplace2/Marketplace.sol\":14748:14767  _status != _ENTERED */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6189:6191   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6171:6192   */\n      mstore\n        /* \"#utility.yul\":6228:6230   */\n      0x1f\n        /* \"#utility.yul\":6208:6226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6201:6231   */\n      mstore\n        /* \"#utility.yul\":6267:6300   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6247:6265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6240:6301   */\n      mstore\n        /* \"#utility.yul\":6318:6336   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"contracts/Marketplace2/Marketplace.sol\":14167:14168  2 */\n      0x02\n        /* \"contracts/Marketplace2/Marketplace.sol\":14878:14885  _status */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":14878:14896  _status = _ENTERED */\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":17966:17975  price > 0 */\n      dup1\n        /* \"contracts/Marketplace2/Marketplace.sol\":17958:18008  require(price > 0, \"Price must be at least 1 wei\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6549:6551   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":17958:18008  require(price > 0, \"Price must be at least 1 wei\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6531:6552   */\n      mstore\n        /* \"#utility.yul\":6588:6590   */\n      0x1c\n        /* \"#utility.yul\":6568:6586   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6561:6591   */\n      mstore\n        /* \"#utility.yul\":6627:6657   */\n      0x5072696365206d757374206265206174206c6561737420312077656900000000\n        /* \"#utility.yul\":6607:6625   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6600:6658   */\n      mstore\n        /* \"#utility.yul\":6675:6693   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":17958:18008  require(price > 0, \"Price must be at least 1 wei\") */\n      tag_164\n        /* \"#utility.yul\":6347:6699   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":17958:18008  require(price > 0, \"Price must be at least 1 wei\") */\n    tag_167:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18015:18035  _itemIds.increment() */\n      tag_170\n        /* \"contracts/Marketplace2/Marketplace.sol\":18015:18023  _itemIds */\n      0x05\n        /* \"contracts/Marketplace2/Marketplace.sol\":12058:12077  counter._value += 1 */\n      dup1\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":12076:12077  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":12058:12077  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":11971:12094  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":18015:18035  _itemIds.increment() */\n    tag_170:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18041:18055  uint256 itemId */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":18058:18076  _itemIds.current() */\n      tag_172\n        /* \"contracts/Marketplace2/Marketplace.sol\":18058:18066  _itemIds */\n      0x05\n        /* \"contracts/Marketplace2/Marketplace.sol\":11944:11958  counter._value */\n      sload\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":11853:11965  function current(Counter storage counter) internal view returns (uint256) {... */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":18058:18076  _itemIds.current() */\n    tag_172:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18111:18242  MarketItem(... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup9\n      and\n      0x20\n      dup1\n      dup5\n      add\n      dup3\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      dup11\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18185:18195  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":18111:18242  MarketItem(... */\n      0x60\n      dup8\n      add\n      dup2\n      dup2\n      mstore\n      0x00\n      0x80\n      dup10\n      add\n      dup2\n      dup2\n      mstore\n      0xa0\n      dup11\n      add\n      dup15\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18085:18107  idToMarketItem[itemId] */\n      dup13\n      dup4\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18085:18099  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":18085:18107  idToMarketItem[itemId] */\n      swap1\n      swap8\n      mstore\n      swap1\n      dup11\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":18085:18242  idToMarketItem[itemId] =  MarketItem(... */\n      swap9\n      mload\n      dup10\n      sstore\n      swap4\n      mload\n      0x01\n      dup10\n      add\n      dup1\n      sload\n      swap2\n      dup10\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      sstore\n      swap3\n      mload\n      0x02\n      dup10\n      add\n      sstore\n      mload\n      0x03\n      dup9\n      add\n      dup1\n      sload\n      swap2\n      dup9\n      and\n      swap2\n      dup5\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      swap2\n      mload\n      0x04\n      dup1\n      dup9\n      add\n      dup1\n      sload\n      swap3\n      swap1\n      swap8\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      swap5\n      sstore\n      swap1\n      mload\n      0x05\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18249:18318  IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId) */\n      swap3\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18041:18076  uint256 itemId = _itemIds.current() */\n      swap4\n      swap5\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":18111:18242  MarketItem(... */\n      swap2\n      swap3\n        /* \"contracts/Marketplace2/Marketplace.sol\":18249:18282  IERC721(nftContract).transferFrom */\n      0x23b872dd\n      swap3\n        /* \"contracts/Marketplace2/Marketplace.sol\":18249:18318  IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId) */\n      tag_173\n      swap3\n        /* \"contracts/Marketplace2/Marketplace.sol\":18185:18195  msg.sender */\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":18303:18307  this */\n      address\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":18162:18169  tokenId */\n      dup10\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":18249:18318  IERC721(nftContract).transferFrom(msg.sender, address(this), tokenId) */\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":18388:18395  tokenId */\n      dup3\n        /* \"contracts/Marketplace2/Marketplace.sol\":18369:18380  nftContract */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":18330:18450  MarketItemCreated(... */\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":18355:18361  itemId */\n      dup3\n        /* \"contracts/Marketplace2/Marketplace.sol\":18330:18450  MarketItemCreated(... */\n      0x2ad024d53a0dc50c130967f8d4941927ee087ea31394cebb2b9599d3706c9c00\n        /* \"contracts/Marketplace2/Marketplace.sol\":18403:18413  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":18429:18430  0 */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":18439:18444  price */\n      dup8\n        /* \"contracts/Marketplace2/Marketplace.sol\":18330:18450  MarketItemCreated(... */\n      mload(0x40)\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":14124:14125  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":15051:15058  _status */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":15051:15073  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":17829:18455  function createMarketItem(... */\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":18459:19572  function sellItem(... */\n    tag_70:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18592:18593  0 */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":18584:18589  price */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":18584:18593  price > 0 */\n      gt\n        /* \"contracts/Marketplace2/Marketplace.sol\":18576:18627  require(price > 0, \"Price should be bigger than 0\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7286:7288   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":18576:18627  require(price > 0, \"Price should be bigger than 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7268:7289   */\n      mstore\n        /* \"#utility.yul\":7325:7327   */\n      0x1d\n        /* \"#utility.yul\":7305:7323   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7298:7328   */\n      mstore\n        /* \"#utility.yul\":7364:7395   */\n      0x50726963652073686f756c6420626520626967676572207468616e2030000000\n        /* \"#utility.yul\":7344:7362   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7337:7396   */\n      mstore\n        /* \"#utility.yul\":7413:7431   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":18576:18627  require(price > 0, \"Price should be bigger than 0\") */\n      tag_164\n        /* \"#utility.yul\":7084:7437   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":18576:18627  require(price > 0, \"Price should be bigger than 0\") */\n    tag_180:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18637:18663  _requireERC721(nftAddress) */\n      tag_183\n        /* \"contracts/Marketplace2/Marketplace.sol\":18652:18662  nftAddress */\n      dup4\n        /* \"contracts/Marketplace2/Marketplace.sol\":18637:18651  _requireERC721 */\n      tag_184\n        /* \"contracts/Marketplace2/Marketplace.sol\":18637:18663  _requireERC721(nftAddress) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18784:18812  nftRegistry.ownerOf(assetId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":7588:7613   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18691:18701  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18741:18751  nftAddress */\n      dup5\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18691:18701  msg.sender */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":18784:18803  nftRegistry.ownerOf */\n      dup4\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":7561:7579   */\n      0x24\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":18784:18812  nftRegistry.ownerOf(assetId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":18784:18822  nftRegistry.ownerOf(assetId) == seller */\n      and\n      eq\n        /* \"contracts/Marketplace2/Marketplace.sol\":18763:18881  require(... */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8082:8084   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":18763:18881  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8064:8085   */\n      mstore\n        /* \"#utility.yul\":8121:8123   */\n      0x21\n        /* \"#utility.yul\":8101:8119   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8094:8124   */\n      mstore\n        /* \"#utility.yul\":8160:8194   */\n      0x5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e65\n        /* \"#utility.yul\":8140:8158   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8133:8195   */\n      mstore\n      shl(0xf9, 0x39)\n        /* \"#utility.yul\":8211:8229   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8204:8235   */\n      mstore\n        /* \"#utility.yul\":8252:8271   */\n      0x84\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":18763:18881  require(... */\n      tag_164\n        /* \"#utility.yul\":7880:8277   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":18763:18881  require(... */\n    tag_191:\n        /* \"contracts/Marketplace2/Marketplace.sol\":18891:18947  nftRegistry.transferFrom(seller, address(this), assetId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":18891:18915  nftRegistry.transferFrom */\n      dup3\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18891:18947  nftRegistry.transferFrom(seller, address(this), assetId) */\n      tag_194\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18916:18922  seller */\n      dup6\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18932:18936  this */\n      address\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18939:18946  assetId */\n      dup10\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":18891:18947  nftRegistry.transferFrom(seller, address(this), assetId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_194:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":18976:18993  items[nftAddress] */\n      dup6\n      dup2\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":18957:18973  Item memory item */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":18976:18993  items[nftAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":18976:18981  items */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":18976:18993  items[nftAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":18976:19002  items[nftAddress][assetId] */\n      dup10\n      dup6\n      mstore\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":18957:19002  Item memory item = items[nftAddress][assetId] */\n      dup2\n      mload\n      0xc0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      swap4\n      dup2\n      add\n      sload\n      dup7\n      and\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap1\n      swap5\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup1\n      dup5\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":18957:18973  Item memory item */\n      swap3\n      swap4\n        /* \"contracts/Marketplace2/Marketplace.sol\":18957:19002  Item memory item = items[nftAddress][assetId] */\n      swap2\n      swap3\n      0xa0\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_199\n      jumpi\n      tag_199\n      tag_200\n      jump\t// in\n    tag_199:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_202\n      tag_200\n      jump\t// in\n    tag_202:\n      swap1\n      mstore\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":19016:19023  item.id */\n      dup1\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":18957:19002  Item memory item = items[nftAddress][assetId] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":19016:19023  item.id */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":19016:19028  item.id == 0 */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":19012:19370  if (item.id == 0) {... */\n      tag_203\n      jumpi\n        /* \"contracts/Marketplace2/Marketplace.sol\":19044:19094  _createItem(seller, assetId, nftAddress, price, 0) */\n      tag_204\n        /* \"contracts/Marketplace2/Marketplace.sol\":19056:19062  seller */\n      dup4\n        /* \"contracts/Marketplace2/Marketplace.sol\":19064:19071  assetId */\n      dup7\n        /* \"contracts/Marketplace2/Marketplace.sol\":19073:19083  nftAddress */\n      dup9\n        /* \"contracts/Marketplace2/Marketplace.sol\":19085:19090  price */\n      dup8\n        /* \"contracts/Marketplace2/Marketplace.sol\":19092:19093  0 */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":19044:19055  _createItem */\n      tag_205\n        /* \"contracts/Marketplace2/Marketplace.sol\":19044:19094  _createItem(seller, assetId, nftAddress, price, 0) */\n      jump\t// in\n    tag_204:\n        /* \"contracts/Marketplace2/Marketplace.sol\":19012:19370  if (item.id == 0) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"contracts/Marketplace2/Marketplace.sol\":19148:19163  ItemStatus.LIST */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":19133:19137  item */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":19133:19144  item.status */\n      0xa0\n      add\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":19133:19163  item.status != ItemStatus.LIST */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_210\n      jumpi\n      tag_210\n      tag_200\n      jump\t// in\n    tag_210:\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":19125:19184  require(item.status != ItemStatus.LIST, \"Asset is listing\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8484:8486   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":19125:19184  require(item.status != ItemStatus.LIST, \"Asset is listing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8466:8487   */\n      mstore\n        /* \"#utility.yul\":8523:8525   */\n      0x10\n        /* \"#utility.yul\":8503:8521   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8496:8526   */\n      mstore\n      shl(0x80, 0x4173736574206973206c697374696e67)\n        /* \"#utility.yul\":8542:8560   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8535:8581   */\n      mstore\n        /* \"#utility.yul\":8598:8616   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":19125:19184  require(item.status != ItemStatus.LIST, \"Asset is listing\") */\n      tag_164\n        /* \"#utility.yul\":8282:8622   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":19125:19184  require(item.status != ItemStatus.LIST, \"Asset is listing\") */\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":19198:19215  items[nftAddress] */\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19234:19249  ItemStatus.LIST */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":19198:19215  items[nftAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":19198:19224  items[nftAddress][assetId] */\n      dup11\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":19198:19231  items[nftAddress][assetId].status */\n      0x05\n      dup2\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":19198:19249  items[nftAddress][assetId].status = ItemStatus.LIST */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19263:19295  items[nftAddress][assetId].price */\n      0x03\n      dup2\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":19263:19303  items[nftAddress][assetId].price = price */\n      dup8\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19317:19350  items[nftAddress][assetId].seller */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":19317:19359  items[nftAddress][assetId].seller = seller */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      dup6\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19012:19370  if (item.id == 0) {... */\n    tag_206:\n        /* \"contracts/Marketplace2/Marketplace.sol\":19440:19447  item.id */\n      dup1\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":19384:19565  SellItemSuccessful(... */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8941:8973   */\n      dup10\n      dup2\n      and\n        /* \"#utility.yul\":8923:8974   */\n      dup3\n      mstore\n        /* \"#utility.yul\":9005:9007   */\n      0x20\n        /* \"#utility.yul\":8990:9008   */\n      dup3\n      add\n        /* \"#utility.yul\":8983:9017   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9033:9051   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":9026:9060   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":8961:8964   */\n      0xa0\n        /* \"#utility.yul\":9091:9093   */\n      0x60\n        /* \"#utility.yul\":9076:9094   */\n      dup3\n      add\n        /* \"#utility.yul\":9069:9100   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9137:9138   */\n      0x03\n        /* \"#utility.yul\":9116:9135   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9109:9139   */\n      mstore\n      shl(0xe9, 0x212721)\n        /* \"#utility.yul\":9170:9173   */\n      0xc0\n        /* \"#utility.yul\":9155:9174   */\n      dup3\n      add\n        /* \"#utility.yul\":9148:9182   */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19540:19555  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":9249:9252   */\n      0x80\n        /* \"#utility.yul\":9234:9253   */\n      dup3\n      add\n        /* \"#utility.yul\":9227:9262   */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19384:19565  SellItemSuccessful(... */\n      swap1\n      dup5\n      and\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":19461:19468  assetId */\n      dup7\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":19384:19565  SellItemSuccessful(... */\n      0xff2412bd5c66e6ad5153e35ee902ee32bb4393211a4d0662428b9b481929a7b9\n      swap1\n        /* \"#utility.yul\":9214:9217   */\n      0xe0\n        /* \"#utility.yul\":9199:9218   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":19384:19565  SellItemSuccessful(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Marketplace2/Marketplace.sol\":18566:19572  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":18459:19572  function sellItem(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":2310:2411  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"contracts/Marketplace2/Marketplace.sol\":1750:1756  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Marketplace2/Marketplace.sol\":635:645  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":1890:1913  owner() == _msgSender() */\n      eq\n        /* \"contracts/Marketplace2/Marketplace.sol\":1882:1950  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_224\n      jump\t// in\n    tag_222:\n        /* \"contracts/Marketplace2/Marketplace.sol\":2374:2404  _transferOwnership(address(0)) */\n      tag_226\n        /* \"contracts/Marketplace2/Marketplace.sol\":2401:2402  0 */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":2374:2392  _transferOwnership */\n      tag_227\n        /* \"contracts/Marketplace2/Marketplace.sol\":2374:2404  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/Marketplace2/Marketplace.sol\":2310:2411  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":17727:17825  function setSQFToken(address _address) external onlyOwner {... */\n    tag_88:\n        /* \"contracts/Marketplace2/Marketplace.sol\":1750:1756  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Marketplace2/Marketplace.sol\":635:645  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":1890:1913  owner() == _msgSender() */\n      eq\n        /* \"contracts/Marketplace2/Marketplace.sol\":1882:1950  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_224\n      jump\t// in\n    tag_232:\n        /* \"contracts/Marketplace2/Marketplace.sol\":17795:17803  sqfToken */\n      0x03\n        /* \"contracts/Marketplace2/Marketplace.sol\":17795:17822  sqfToken = IERC20(_address) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":17727:17825  function setSQFToken(address _address) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":19576:20100  function createMarketSale(... */\n    tag_95:\n        /* \"contracts/Marketplace2/Marketplace.sol\":14167:14168  2 */\n      0x02\n        /* \"contracts/Marketplace2/Marketplace.sol\":14748:14755  _status */\n      sload(0x00)\n        /* \"contracts/Marketplace2/Marketplace.sol\":14748:14767  _status != _ENTERED */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6189:6191   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6171:6192   */\n      mstore\n        /* \"#utility.yul\":6228:6230   */\n      0x1f\n        /* \"#utility.yul\":6208:6226   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6201:6231   */\n      mstore\n        /* \"#utility.yul\":6267:6300   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":6247:6265   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6240:6301   */\n      mstore\n        /* \"#utility.yul\":6318:6336   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_164\n        /* \"#utility.yul\":5987:6342   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":14740:14803  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_236:\n        /* \"contracts/Marketplace2/Marketplace.sol\":14167:14168  2 */\n      0x02\n        /* \"contracts/Marketplace2/Marketplace.sol\":14878:14885  _status */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":14878:14896  _status = _ENTERED */\n      dup2\n      dup2\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19700:19722  idToMarketItem[itemId] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19700:19714  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":19700:19722  idToMarketItem[itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":19700:19728  idToMarketItem[itemId].price */\n      0x05\n      dup2\n      add\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":19749:19779  idToMarketItem[itemId].tokenId */\n      swap2\n      add\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":19793:19802  msg.value */\n      callvalue\n        /* \"contracts/Marketplace2/Marketplace.sol\":19793:19811  msg.value == price */\n      dup3\n      eq\n        /* \"contracts/Marketplace2/Marketplace.sol\":19785:19880  require(msg.value == price, \"Please submit the asking price in order to complete the purchase\") */\n      tag_239\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9836:9838   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":19785:19880  require(msg.value == price, \"Please submit the asking price in order to complete the purchase\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9818:9839   */\n      mstore\n        /* \"#utility.yul\":9855:9873   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9848:9878   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9914:9948   */\n      0x506c65617365207375626d6974207468652061736b696e672070726963652069\n        /* \"#utility.yul\":9894:9912   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9887:9949   */\n      mstore\n        /* \"#utility.yul\":9985:10019   */\n      0x6e206f7264657220746f20636f6d706c65746520746865207075726368617365\n        /* \"#utility.yul\":9965:9983   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9958:10020   */\n      mstore\n        /* \"#utility.yul\":10037:10056   */\n      0x84\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":19785:19880  require(msg.value == price, \"Please submit the asking price in order to complete the purchase\") */\n      tag_164\n        /* \"#utility.yul\":9634:10062   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":19785:19880  require(msg.value == price, \"Please submit the asking price in order to complete the purchase\") */\n    tag_239:\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19909  idToMarketItem[itemId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19901  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19909  idToMarketItem[itemId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19916  idToMarketItem[itemId].seller */\n      0x03\n      add\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19936  idToMarketItem[itemId].seller.transfer(msg.value) */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19916  idToMarketItem[itemId].seller */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":19926:19935  msg.value */\n      callvalue\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19936  idToMarketItem[itemId].seller.transfer(msg.value) */\n      dup1\n      iszero\n      0x08fc\n      mul\n      swap3\n        /* \"contracts/Marketplace2/Marketplace.sol\":19926:19935  msg.value */\n      swap1\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19936  idToMarketItem[itemId].seller.transfer(msg.value) */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19909  idToMarketItem[itemId] */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19936  idToMarketItem[itemId].seller.transfer(msg.value) */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":19926:19935  msg.value */\n      dup6\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19916  idToMarketItem[itemId].seller */\n      dup9\n        /* \"contracts/Marketplace2/Marketplace.sol\":19887:19936  idToMarketItem[itemId].seller.transfer(msg.value) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":19942:20011  IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":19942:19975  IERC721(nftContract).transferFrom */\n      dup6\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":19942:20011  IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId) */\n      tag_244\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":19984:19988  this */\n      address\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":19991:20001  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":20003:20010  tokenId */\n      dup7\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":19942:20011  IERC721(nftContract).transferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_244:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_245\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_245:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20017:20039  idToMarketItem[itemId] */\n      0x00\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":20017:20031  idToMarketItem */\n      0x07\n        /* \"contracts/Marketplace2/Marketplace.sol\":20017:20039  idToMarketItem[itemId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":20017:20045  idToMarketItem[itemId].owner */\n      0x04\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":20017:20067  idToMarketItem[itemId].owner = payable(msg.sender) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":20056:20066  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":20017:20067  idToMarketItem[itemId].owner = payable(msg.sender) */\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":20073:20095  _itemsSold.increment() */\n      tag_248\n        /* \"contracts/Marketplace2/Marketplace.sol\":20073:20083  _itemsSold */\n      0x06\n        /* \"contracts/Marketplace2/Marketplace.sol\":12058:12077  counter._value += 1 */\n      dup1\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":12076:12077  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":12058:12077  counter._value += 1 */\n      add\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":11971:12094  function increment(Counter storage counter) internal {... */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":20073:20095  _itemsSold.increment() */\n    tag_248:\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":14124:14125  1 */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":15051:15058  _status */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":15051:15073  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":19576:20100  function createMarketSale(... */\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":21581:22877  function buyItemBySQF(... */\n    tag_104:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21706:21732  _requireERC721(nftAddress) */\n      tag_252\n        /* \"contracts/Marketplace2/Marketplace.sol\":21721:21731  nftAddress */\n      dup4\n        /* \"contracts/Marketplace2/Marketplace.sol\":21706:21720  _requireERC721 */\n      tag_184\n        /* \"contracts/Marketplace2/Marketplace.sol\":21706:21732  _requireERC721(nftAddress) */\n      jump\t// in\n    tag_252:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":21850:21867  items[nftAddress] */\n      dup1\n      dup5\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":21743:21757  address sender */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21850:21867  items[nftAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":21850:21855  items */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21850:21867  items[nftAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":21850:21876  items[nftAddress][assetId] */\n      dup8\n      dup6\n      mstore\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":21831:21876  Item memory item = items[nftAddress][assetId] */\n      dup2\n      mload\n      0xc0\n      dup2\n      add\n      dup4\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      swap4\n      dup2\n      add\n      sload\n      dup7\n      and\n      swap3\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x02\n      dup3\n      add\n      sload\n      swap1\n      swap5\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x03\n      dup4\n      add\n      sload\n      0x60\n      dup3\n      add\n      mstore\n      0x04\n      dup1\n      dup5\n      add\n      sload\n      0x80\n      dup4\n      add\n      mstore\n      0x05\n      dup5\n      add\n      sload\n        /* \"contracts/Marketplace2/Marketplace.sol\":21760:21770  msg.sender */\n      caller\n      swap5\n        /* \"contracts/Marketplace2/Marketplace.sol\":21810:21820  nftAddress */\n      dup9\n      swap5\n        /* \"contracts/Marketplace2/Marketplace.sol\":21743:21757  address sender */\n      swap4\n        /* \"contracts/Marketplace2/Marketplace.sol\":21831:21876  Item memory item = items[nftAddress][assetId] */\n      swap3\n        /* \"contracts/Marketplace2/Marketplace.sol\":21850:21876  items[nftAddress][assetId] */\n      swap1\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":21831:21876  Item memory item = items[nftAddress][assetId] */\n      0xa0\n      dup5\n      add\n      swap2\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n      dup2\n      gt\n      iszero\n      tag_254\n      jumpi\n      tag_254\n      tag_200\n      jump\t// in\n    tag_254:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_256\n      jumpi\n      tag_256\n      tag_200\n      jump\t// in\n    tag_256:\n      swap1\n      mstore\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21895:21902  item.id */\n      dup1\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":21831:21876  Item memory item = items[nftAddress][assetId] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21895:21902  item.id */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":21895:21907  item.id != 0 */\n      sub\n        /* \"contracts/Marketplace2/Marketplace.sol\":21887:21931  require(item.id != 0, \"Asset not published\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10269:10271   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":21887:21931  require(item.id != 0, \"Asset not published\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10251:10272   */\n      mstore\n        /* \"#utility.yul\":10308:10310   */\n      0x13\n        /* \"#utility.yul\":10288:10306   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10281:10311   */\n      mstore\n      shl(0x6a, 0x105cdcd95d081b9bdd081c1d589b1a5cda1959)\n        /* \"#utility.yul\":10327:10345   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10320:10369   */\n      mstore\n        /* \"#utility.yul\":10386:10404   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":21887:21931  require(item.id != 0, \"Asset not published\") */\n      tag_164\n        /* \"#utility.yul\":10067:10410   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":21887:21931  require(item.id != 0, \"Asset not published\") */\n    tag_257:\n        /* \"contracts/Marketplace2/Marketplace.sol\":21964:21979  ItemStatus.LIST */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":21949:21953  item */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":21949:21960  item.status */\n      0xa0\n      add\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":21949:21979  item.status == ItemStatus.LIST */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_263\n      jumpi\n      tag_263\n      tag_200\n      jump\t// in\n    tag_263:\n      eq\n        /* \"contracts/Marketplace2/Marketplace.sol\":21941:22008  require(item.status == ItemStatus.LIST, \"Asset is not list to buy\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10617:10619   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":21941:22008  require(item.status == ItemStatus.LIST, \"Asset is not list to buy\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10599:10620   */\n      mstore\n        /* \"#utility.yul\":10656:10658   */\n      0x18\n        /* \"#utility.yul\":10636:10654   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10629:10659   */\n      mstore\n        /* \"#utility.yul\":10695:10721   */\n      0x4173736574206973206e6f74206c69737420746f206275790000000000000000\n        /* \"#utility.yul\":10675:10693   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10668:10722   */\n      mstore\n        /* \"#utility.yul\":10739:10757   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":21941:22008  require(item.status == ItemStatus.LIST, \"Asset is not list to buy\") */\n      tag_164\n        /* \"#utility.yul\":10415:10763   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":21941:22008  require(item.status == ItemStatus.LIST, \"Asset is not list to buy\") */\n    tag_264:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22036:22047  item.seller */\n      0x20\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22066:22086  seller != address(0) */\n      dup2\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":22058:22106  require(seller != address(0), \"Invalid address\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10970:10972   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":22058:22106  require(seller != address(0), \"Invalid address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10952:10973   */\n      mstore\n        /* \"#utility.yul\":11009:11011   */\n      0x0f\n        /* \"#utility.yul\":10989:11007   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10982:11012   */\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n        /* \"#utility.yul\":11028:11046   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11021:11066   */\n      mstore\n        /* \"#utility.yul\":11083:11101   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":22058:22106  require(seller != address(0), \"Invalid address\") */\n      tag_164\n        /* \"#utility.yul\":10768:11107   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":22058:22106  require(seller != address(0), \"Invalid address\") */\n    tag_267:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22137:22141  item */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":22137:22151  item.priceAnta */\n      0x80\n      add\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":22124:22133  priceAnta */\n      dup6\n        /* \"contracts/Marketplace2/Marketplace.sol\":22124:22151  priceAnta >= item.priceAnta */\n      lt\n      iszero\n        /* \"contracts/Marketplace2/Marketplace.sol\":22116:22186  require(priceAnta >= item.priceAnta, \"price need equal listing price\") */\n      tag_270\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11314:11316   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":22116:22186  require(priceAnta >= item.priceAnta, \"price need equal listing price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11296:11317   */\n      mstore\n        /* \"#utility.yul\":11353:11355   */\n      0x1e\n        /* \"#utility.yul\":11333:11351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11326:11356   */\n      mstore\n        /* \"#utility.yul\":11392:11424   */\n      0x7072696365206e65656420657175616c206c697374696e672070726963650000\n        /* \"#utility.yul\":11372:11390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11365:11425   */\n      mstore\n        /* \"#utility.yul\":11442:11460   */\n      0x64\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":22116:22186  require(priceAnta >= item.priceAnta, \"price need equal listing price\") */\n      tag_164\n        /* \"#utility.yul\":11112:11466   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":22116:22186  require(priceAnta >= item.priceAnta, \"price need equal listing price\") */\n    tag_270:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22212:22226  antaFeePercent */\n      sload(0x03)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22197:22208  uint256 fee */\n      0x00\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22242:22245  100 */\n      0x64\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22212:22238  antaFeePercent * priceAnta */\n      tag_273\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22229:22238  priceAnta */\n      dup9\n      swap1\n      shl(0xa8, 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22212:22226  antaFeePercent */\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":22212:22238  antaFeePercent * priceAnta */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22211:22245  (antaFeePercent * priceAnta) / 100 */\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22197:22245  uint256 fee = (antaFeePercent * priceAnta) / 100 */\n      swap1\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":22255:22275  uint256 remainAmount */\n      0x00\n        /* \"contracts/Marketplace2/Marketplace.sol\":22278:22293  priceAnta - fee */\n      tag_277\n        /* \"contracts/Marketplace2/Marketplace.sol\":22197:22245  uint256 fee = (antaFeePercent * priceAnta) / 100 */\n      dup3\n        /* \"contracts/Marketplace2/Marketplace.sol\":22278:22287  priceAnta */\n      dup9\n        /* \"contracts/Marketplace2/Marketplace.sol\":22278:22293  priceAnta - fee */\n      tag_115\n      jump\t// in\n    tag_277:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22303:22311  sqfToken */\n      sload(0x03)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22303:22352  sqfToken.transferFrom(sender, address(this), fee) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":22255:22293  uint256 remainAmount = priceAnta - fee */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22303:22311  sqfToken */\n      and\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22303:22324  sqfToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22303:22352  sqfToken.transferFrom(sender, address(this), fee) */\n      tag_278\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22325:22331  sender */\n      dup10\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22341:22345  this */\n      address\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22348:22351  fee */\n      dup8\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22303:22352  sqfToken.transferFrom(sender, address(this), fee) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_278:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_280\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_280:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_281\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":22362:22370  sqfToken */\n      sload(0x03)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22362:22413  sqfToken.transferFrom(sender, seller, remainAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22362:22370  sqfToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22362:22383  sqfToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22362:22413  sqfToken.transferFrom(sender, seller, remainAmount) */\n      tag_283\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22384:22390  sender */\n      dup10\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22392:22398  seller */\n      dup8\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22400:22412  remainAmount */\n      dup7\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22362:22413  sqfToken.transferFrom(sender, seller, remainAmount) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_283:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_285\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_285:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_286\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_286:\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":22423:22483  nftRegistry.safeTransferFrom(address(this), sender, assetId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22423:22451  nftRegistry.safeTransferFrom */\n      dup7\n      and\n      swap1\n      0x42842e0e\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22423:22483  nftRegistry.safeTransferFrom(address(this), sender, assetId) */\n      tag_287\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22460:22464  this */\n      address\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22467:22473  sender */\n      dup11\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22475:22482  assetId */\n      dup14\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22423:22483  nftRegistry.safeTransferFrom(address(this), sender, assetId) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_287:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22511  items[nftAddress] */\n      dup10\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22499  items */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22511  items[nftAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22520  items[nftAddress][assetId] */\n      dup15\n      dup6\n      mstore\n      dup3\n      mstore\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22527  items[nftAddress][assetId].seller */\n      swap2\n      dup3\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22536  items[nftAddress][assetId].seller = sender */\n      dup1\n      sload\n      dup13\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":22546:22579  items[nftAddress][assetId].status */\n      0x05\n      swap1\n      swap3\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":22546:22599  items[nftAddress][assetId].status = ItemStatus.BOUGHT */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":22582:22599  ItemStatus.BOUGHT */\n      0x02\n        /* \"contracts/Marketplace2/Marketplace.sol\":22546:22599  items[nftAddress][assetId].status = ItemStatus.BOUGHT */\n      or\n      swap1\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":22646:22653  item.id */\n      dup9\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":22732:22746  item.priceAnta */\n      0x80\n      dup1\n      dup12\n      add\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":22760:22774  antaFeePercent */\n      sload(0x03)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22615:22870  BuyItemSuccessful(... */\n      dup7\n      mload\n        /* \"#utility.yul\":12496:12521   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":12537:12555   */\n      swap4\n      dup4\n      add\n        /* \"#utility.yul\":12530:12590   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":12606:12624   */\n      swap4\n      dup2\n      add\n        /* \"#utility.yul\":12599:12633   */\n      swap5\n      swap1\n      swap5\n      mstore\n      shl(0xa8, 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22760:22774  antaFeePercent */\n      swap1\n      div\n      0xff\n      and\n        /* \"#utility.yul\":12664:12666   */\n      0x60\n        /* \"#utility.yul\":12649:12667   */\n      dup5\n      add\n        /* \"#utility.yul\":12642:12687   */\n      mstore\n        /* \"#utility.yul\":12703:12722   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12696:12731   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":12768:12771   */\n      0xe0\n        /* \"#utility.yul\":12577:12580   */\n      0xa0\n        /* \"#utility.yul\":12747:12766   */\n      dup4\n      add\n        /* \"#utility.yul\":12740:12772   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12809:12810   */\n      0x04\n        /* \"#utility.yul\":12788:12807   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":12781:12811   */\n      mstore\n      shl(0xe0, 0x414e5441)\n        /* \"contracts/Marketplace2/Marketplace.sol\":22760:22774  antaFeePercent */\n      0x0100\n        /* \"#utility.yul\":12827:12846   */\n      dup4\n      add\n        /* \"#utility.yul\":12820:12855   */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":22845:22860  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":12922:12925   */\n      0xc0\n        /* \"#utility.yul\":12907:12926   */\n      dup4\n      add\n        /* \"#utility.yul\":12900:12935   */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22536  items[nftAddress][assetId].seller = sender */\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":22615:22870  BuyItemSuccessful(... */\n      dup6\n      and\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22494:22520  items[nftAddress][assetId] */\n      dup11\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":22615:22870  BuyItemSuccessful(... */\n      0x30247e11bbb597dfefd2a3124026f1ef8987a4d6ba46e3629f80bac1b0c9faee\n      swap1\n        /* \"#utility.yul\":12887:12890   */\n      0x0120\n        /* \"#utility.yul\":12872:12891   */\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":22615:22870  BuyItemSuccessful(... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/Marketplace2/Marketplace.sol\":21696:22877  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":21581:22877  function buyItemBySQF(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":2560:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"contracts/Marketplace2/Marketplace.sol\":1750:1756  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x04))\n        /* \"contracts/Marketplace2/Marketplace.sol\":635:645  msg.sender */\n      caller\n        /* \"contracts/Marketplace2/Marketplace.sol\":1890:1913  owner() == _msgSender() */\n      eq\n        /* \"contracts/Marketplace2/Marketplace.sol\":1882:1950  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_224\n      jump\t// in\n    tag_298:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":2648:2670  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":2640:2713  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13148:13150   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":2640:2713  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13130:13151   */\n      mstore\n        /* \"#utility.yul\":13187:13189   */\n      0x26\n        /* \"#utility.yul\":13167:13185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13160:13190   */\n      mstore\n        /* \"#utility.yul\":13226:13260   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13206:13224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13199:13261   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13277:13295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13270:13306   */\n      mstore\n        /* \"#utility.yul\":13323:13342   */\n      0x84\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":2640:2713  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_164\n        /* \"#utility.yul\":12946:13348   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":2640:2713  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_301:\n        /* \"contracts/Marketplace2/Marketplace.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_304\n        /* \"contracts/Marketplace2/Marketplace.sol\":2742:2750  newOwner */\n      dup2\n        /* \"contracts/Marketplace2/Marketplace.sol\":2723:2741  _transferOwnership */\n      tag_227\n        /* \"contracts/Marketplace2/Marketplace.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/Marketplace2/Marketplace.sol\":2560:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":22883:23272  function _requireERC721(address nftAddress) internal view {... */\n    tag_184:\n        /* \"contracts/Marketplace2/Marketplace.sol\":23386:23404  extcodesize(_addr) */\n      dup1\n      extcodesize\n        /* \"contracts/Marketplace2/Marketplace.sol\":23423:23431  size > 0 */\n      0xffffffff\n      and\n        /* \"contracts/Marketplace2/Marketplace.sol\":22951:23056  require(... */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":22951:23056  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13537:13558   */\n      mstore\n        /* \"#utility.yul\":13594:13596   */\n      0x24\n        /* \"#utility.yul\":13574:13592   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":13567:13597   */\n      mstore\n        /* \"#utility.yul\":13633:13667   */\n      0x546865204e465420416464726573732073686f756c64206265206120636f6e74\n        /* \"#utility.yul\":13613:13631   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13606:13668   */\n      mstore\n      shl(0xe2, 0x1c9858dd)\n        /* \"#utility.yul\":13684:13702   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13677:13711   */\n      mstore\n        /* \"#utility.yul\":13728:13747   */\n      0x84\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":22951:23056  require(... */\n      tag_164\n        /* \"#utility.yul\":13353:13753   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":22951:23056  require(... */\n    tag_310:\n        /* \"contracts/Marketplace2/Marketplace.sol\":23139:23186  nftRegistry.supportsInterface(ERC721_Interface) */\n      mload(0x40)\n      shl(0xe0, 0x01ffc9a7)\n      dup2\n      mstore\n      shl(0xe0, 0x80ac58cd)\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2025:2077   */\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":23097:23107  nftAddress */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":23139:23168  nftRegistry.supportsInterface */\n      dup3\n      and\n      swap1\n      0x01ffc9a7\n      swap1\n        /* \"#utility.yul\":1998:2016   */\n      0x24\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":23139:23186  nftRegistry.supportsInterface(ERC721_Interface) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_316:\n        /* \"contracts/Marketplace2/Marketplace.sol\":23118:23265  require(... */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13960:13962   */\n      0x20\n        /* \"contracts/Marketplace2/Marketplace.sol\":23118:23265  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13942:13963   */\n      mstore\n        /* \"#utility.yul\":13999:14001   */\n      0x35\n        /* \"#utility.yul\":13979:13997   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13972:14002   */\n      mstore\n        /* \"#utility.yul\":14038:14072   */\n      0x546865204e465420636f6e74726163742068617320616e20696e76616c696420\n        /* \"#utility.yul\":14018:14036   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14011:14073   */\n      mstore\n      shl(0x59, 0x22a9219b99189034b6b83632b6b2b73a30ba34b7b7)\n        /* \"#utility.yul\":14089:14107   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14082:14133   */\n      mstore\n        /* \"#utility.yul\":14150:14169   */\n      0x84\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":23118:23265  require(... */\n      tag_164\n        /* \"#utility.yul\":13758:14175   */\n      jump\n        /* \"contracts/Marketplace2/Marketplace.sol\":23118:23265  require(... */\n    tag_317:\n        /* \"contracts/Marketplace2/Marketplace.sol\":22941:23272  {... */\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":22883:23272  function _requireERC721(address nftAddress) internal view {... */\n      pop\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":23436:24070  function _createItem(... */\n    tag_205:\n        /* \"contracts/Marketplace2/Marketplace.sol\":23649:23812  abi.encodePacked(... */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Marketplace2/Marketplace.sol\":23683:23698  block.timestamp */\n      timestamp\n        /* \"contracts/Marketplace2/Marketplace.sol\":23649:23812  abi.encodePacked(... */\n      0x20\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":14421:14440   */\n      swap2\n      swap1\n      swap2\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":14528:14530   */\n      0x60\n        /* \"#utility.yul\":14524:14539   */\n      dup10\n      dup2\n      shl\n        /* \"#utility.yul\":14520:14544   */\n      dup3\n      and\n        /* \"#utility.yul\":14506:14518   */\n      dup5\n      dup7\n      add\n        /* \"#utility.yul\":14499:14545   */\n      mstore\n        /* \"#utility.yul\":14561:14573   */\n      0x54\n      dup5\n      add\n        /* \"#utility.yul\":14554:14582   */\n      dup10\n      swap1\n      mstore\n        /* \"#utility.yul\":14616:14631   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":14612:14636   */\n      and\n        /* \"#utility.yul\":14598:14610   */\n      0x74\n      dup4\n      add\n        /* \"#utility.yul\":14591:14637   */\n      mstore\n        /* \"#utility.yul\":14653:14666   */\n      0x88\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":14646:14675   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":23649:23812  abi.encodePacked(... */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":14691:14704   */\n      0xa8\n      dup4\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":23649:23812  abi.encodePacked(... */\n      dup1\n      dup6\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":23626:23822  keccak256(... */\n      dup2\n      mload\n      swap2\n      swap1\n      swap3\n      add\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":23862:24063  Item({... */\n      0x0168\n      dup4\n      add\n      swap1\n      swap4\n      mstore\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup10\n      and\n      0xc8\n      dup5\n      add\n      mstore\n      dup7\n      and\n      0xe8\n      dup4\n      add\n      mstore\n      0x0108\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n      0x0128\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14691:14704   */\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":23862:24063  Item({... */\n      0x0148\n      add\n        /* \"contracts/Marketplace2/Marketplace.sol\":24037:24052  ItemStatus.LIST */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":23862:24063  Item({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":23833:23850  items[nftAddress] */\n      dup6\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":23833:23838  items */\n      0x01\n        /* \"contracts/Marketplace2/Marketplace.sol\":23833:23850  items[nftAddress] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":23833:23859  items[nftAddress][assetId] */\n      dup12\n      dup6\n      mstore\n      dup3\n      mstore\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/Marketplace2/Marketplace.sol\":23833:24063  items[nftAddress][assetId] = Item({... */\n      dup6\n      mload\n      dup2\n      sstore\n      swap1\n      dup6\n      add\n      mload\n      dup2\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      dup2\n      and\n      swap3\n      dup8\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      sstore\n      swap3\n      dup6\n      add\n      mload\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      swap1\n      swap5\n      and\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap2\n      sstore\n      0x60\n      dup4\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0xa0\n      dup5\n      add\n      mload\n      0x05\n      dup5\n      add\n      dup1\n      sload\n      swap2\n      swap4\n      swap1\n      swap3\n      not(0xff)\n      swap1\n      swap3\n      and\n      swap2\n      dup5\n      swap1\n      dup2\n      gt\n      iszero\n      tag_326\n      jumpi\n      tag_326\n      tag_200\n      jump\t// in\n    tag_326:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":23436:24070  function _createItem(... */\n      jump\t// out\n        /* \"contracts/Marketplace2/Marketplace.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_227:\n        /* \"contracts/Marketplace2/Marketplace.sol\":3004:3010  _owner */\n      0x04\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Marketplace2/Marketplace.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Marketplace2/Marketplace.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/Marketplace2/Marketplace.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/Marketplace2/Marketplace.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/Marketplace2/Marketplace.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/Marketplace2/Marketplace.sol\":2975:3099  {... */\n      pop\n        /* \"contracts/Marketplace2/Marketplace.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_122:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(sub(shl(0xa0, 0x01), 0x01), 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:495   */\n    tag_330:\n        /* \"#utility.yul\":96:101   */\n      dup1\n        /* \"#utility.yul\":90:102   */\n      mload\n        /* \"#utility.yul\":85:88   */\n      dup3\n        /* \"#utility.yul\":78:103   */\n      mstore\n        /* \"#utility.yul\":149:153   */\n      0x20\n        /* \"#utility.yul\":142:147   */\n      dup2\n        /* \"#utility.yul\":138:154   */\n      add\n        /* \"#utility.yul\":132:155   */\n      mload\n        /* \"#utility.yul\":191:192   */\n      0x01\n        /* \"#utility.yul\":187:188   */\n      dup1\n        /* \"#utility.yul\":182:185   */\n      0xa0\n        /* \"#utility.yul\":178:189   */\n      shl\n        /* \"#utility.yul\":174:193   */\n      sub\n        /* \"#utility.yul\":243:245   */\n      dup1\n        /* \"#utility.yul\":229:241   */\n      dup3\n        /* \"#utility.yul\":225:246   */\n      and\n        /* \"#utility.yul\":218:222   */\n      0x20\n        /* \"#utility.yul\":213:216   */\n      dup6\n        /* \"#utility.yul\":209:223   */\n      add\n        /* \"#utility.yul\":202:247   */\n      mstore\n        /* \"#utility.yul\":296:300   */\n      0x40\n        /* \"#utility.yul\":289:294   */\n      dup4\n        /* \"#utility.yul\":285:301   */\n      add\n        /* \"#utility.yul\":279:302   */\n      mload\n        /* \"#utility.yul\":272:276   */\n      0x40\n        /* \"#utility.yul\":267:270   */\n      dup6\n        /* \"#utility.yul\":263:277   */\n      add\n        /* \"#utility.yul\":256:303   */\n      mstore\n        /* \"#utility.yul\":364:366   */\n      dup1\n        /* \"#utility.yul\":356:360   */\n      0x60\n        /* \"#utility.yul\":349:354   */\n      dup5\n        /* \"#utility.yul\":345:361   */\n      add\n        /* \"#utility.yul\":339:362   */\n      mload\n        /* \"#utility.yul\":335:367   */\n      and\n        /* \"#utility.yul\":328:332   */\n      0x60\n        /* \"#utility.yul\":323:326   */\n      dup6\n        /* \"#utility.yul\":319:333   */\n      add\n        /* \"#utility.yul\":312:368   */\n      mstore\n        /* \"#utility.yul\":429:431   */\n      dup1\n        /* \"#utility.yul\":421:425   */\n      0x80\n        /* \"#utility.yul\":414:419   */\n      dup5\n        /* \"#utility.yul\":410:426   */\n      add\n        /* \"#utility.yul\":404:427   */\n      mload\n        /* \"#utility.yul\":400:432   */\n      and\n        /* \"#utility.yul\":393:397   */\n      0x80\n        /* \"#utility.yul\":388:391   */\n      dup6\n        /* \"#utility.yul\":384:398   */\n      add\n        /* \"#utility.yul\":377:433   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":482:486   */\n      0xa0\n        /* \"#utility.yul\":475:480   */\n      dup2\n        /* \"#utility.yul\":471:487   */\n      add\n        /* \"#utility.yul\":465:488   */\n      mload\n        /* \"#utility.yul\":458:462   */\n      0xa0\n        /* \"#utility.yul\":453:456   */\n      dup4\n        /* \"#utility.yul\":449:463   */\n      add\n        /* \"#utility.yul\":442:489   */\n      mstore\n        /* \"#utility.yul\":14:495   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":500:1210   */\n    tag_27:\n        /* \"#utility.yul\":725:727   */\n      0x20\n        /* \"#utility.yul\":777:798   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":847:860   */\n      dup3\n      mload\n        /* \"#utility.yul\":750:768   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":869:891   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":696:700   */\n      0x00\n      swap2\n        /* \"#utility.yul\":725:727   */\n      swap1\n        /* \"#utility.yul\":948:963   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":922:924   */\n      0x40\n        /* \"#utility.yul\":907:925   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":696:700   */\n      dup5\n        /* \"#utility.yul\":991:1184   */\n    tag_336:\n        /* \"#utility.yul\":1005:1011   */\n      dup2\n        /* \"#utility.yul\":1002:1003   */\n      dup2\n        /* \"#utility.yul\":999:1012   */\n      lt\n        /* \"#utility.yul\":991:1184   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1054:1102   */\n      tag_339\n        /* \"#utility.yul\":1098:1101   */\n      dup4\n        /* \"#utility.yul\":1089:1095   */\n      dup6\n        /* \"#utility.yul\":1083:1096   */\n      mload\n        /* \"#utility.yul\":1054:1102   */\n      tag_330\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1159:1174   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":1131:1135   */\n      0xc0\n        /* \"#utility.yul\":1122:1136   */\n      swap3\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":1027:1028   */\n      0x01\n        /* \"#utility.yul\":1020:1029   */\n      add\n        /* \"#utility.yul\":991:1184   */\n      jump(tag_336)\n    tag_338:\n      pop\n        /* \"#utility.yul\":1201:1204   */\n      swap1\n      swap7\n        /* \"#utility.yul\":500:1210   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1437:1617   */\n    tag_40:\n        /* \"#utility.yul\":1496:1502   */\n      0x00\n        /* \"#utility.yul\":1549:1551   */\n      0x20\n        /* \"#utility.yul\":1537:1546   */\n      dup3\n        /* \"#utility.yul\":1528:1535   */\n      dup5\n        /* \"#utility.yul\":1524:1547   */\n      sub\n        /* \"#utility.yul\":1520:1552   */\n      slt\n        /* \"#utility.yul\":1517:1569   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":1565:1566   */\n      0x00\n        /* \"#utility.yul\":1562:1563   */\n      dup1\n        /* \"#utility.yul\":1555:1567   */\n      revert\n        /* \"#utility.yul\":1517:1569   */\n    tag_342:\n      pop\n        /* \"#utility.yul\":1588:1611   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1437:1617   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1622:1876   */\n    tag_43:\n        /* \"#utility.yul\":1810:1813   */\n      0xc0\n        /* \"#utility.yul\":1795:1814   */\n      dup2\n      add\n        /* \"#utility.yul\":1823:1870   */\n      tag_344\n        /* \"#utility.yul\":1799:1808   */\n      dup3\n        /* \"#utility.yul\":1852:1858   */\n      dup5\n        /* \"#utility.yul\":1823:1870   */\n      tag_330\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1622:1876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2088:2219   */\n    tag_331:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2163:2194   */\n      dup2\n      and\n        /* \"#utility.yul\":2153:2195   */\n      dup2\n      eq\n        /* \"#utility.yul\":2143:2213   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2209:2210   */\n      0x00\n        /* \"#utility.yul\":2206:2207   */\n      dup1\n        /* \"#utility.yul\":2199:2211   */\n      revert\n        /* \"#utility.yul\":2224:2680   */\n    tag_52:\n        /* \"#utility.yul\":2301:2307   */\n      0x00\n        /* \"#utility.yul\":2309:2315   */\n      dup1\n        /* \"#utility.yul\":2317:2323   */\n      0x00\n        /* \"#utility.yul\":2370:2372   */\n      0x60\n        /* \"#utility.yul\":2358:2367   */\n      dup5\n        /* \"#utility.yul\":2349:2356   */\n      dup7\n        /* \"#utility.yul\":2345:2368   */\n      sub\n        /* \"#utility.yul\":2341:2373   */\n      slt\n        /* \"#utility.yul\":2338:2390   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":2386:2387   */\n      0x00\n        /* \"#utility.yul\":2383:2384   */\n      dup1\n        /* \"#utility.yul\":2376:2388   */\n      revert\n        /* \"#utility.yul\":2338:2390   */\n    tag_349:\n        /* \"#utility.yul\":2425:2434   */\n      dup4\n        /* \"#utility.yul\":2412:2435   */\n      calldataload\n        /* \"#utility.yul\":2444:2475   */\n      tag_350\n        /* \"#utility.yul\":2469:2474   */\n      dup2\n        /* \"#utility.yul\":2444:2475   */\n      tag_331\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2494:2499   */\n      swap3\n      pop\n        /* \"#utility.yul\":2546:2548   */\n      0x20\n        /* \"#utility.yul\":2531:2549   */\n      dup5\n      add\n        /* \"#utility.yul\":2518:2550   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2602:2604   */\n      0x40\n        /* \"#utility.yul\":2587:2605   */\n      dup5\n      add\n        /* \"#utility.yul\":2574:2606   */\n      calldataload\n        /* \"#utility.yul\":2615:2648   */\n      tag_351\n        /* \"#utility.yul\":2574:2606   */\n      dup2\n        /* \"#utility.yul\":2615:2648   */\n      tag_331\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2667:2674   */\n      dup1\n        /* \"#utility.yul\":2657:2674   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2224:2680   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2938:3321   */\n    tag_58:\n        /* \"#utility.yul\":3015:3021   */\n      0x00\n        /* \"#utility.yul\":3023:3029   */\n      dup1\n        /* \"#utility.yul\":3031:3037   */\n      0x00\n        /* \"#utility.yul\":3084:3086   */\n      0x60\n        /* \"#utility.yul\":3072:3081   */\n      dup5\n        /* \"#utility.yul\":3063:3070   */\n      dup7\n        /* \"#utility.yul\":3059:3082   */\n      sub\n        /* \"#utility.yul\":3055:3087   */\n      slt\n        /* \"#utility.yul\":3052:3104   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":3100:3101   */\n      0x00\n        /* \"#utility.yul\":3097:3098   */\n      dup1\n        /* \"#utility.yul\":3090:3102   */\n      revert\n        /* \"#utility.yul\":3052:3104   */\n    tag_354:\n        /* \"#utility.yul\":3139:3148   */\n      dup4\n        /* \"#utility.yul\":3126:3149   */\n      calldataload\n        /* \"#utility.yul\":3158:3189   */\n      tag_355\n        /* \"#utility.yul\":3183:3188   */\n      dup2\n        /* \"#utility.yul\":3158:3189   */\n      tag_331\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3208:3213   */\n      swap6\n        /* \"#utility.yul\":3260:3262   */\n      0x20\n        /* \"#utility.yul\":3245:3263   */\n      dup6\n      add\n        /* \"#utility.yul\":3232:3264   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3311:3313   */\n      0x40\n        /* \"#utility.yul\":3296:3314   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":3283:3315   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":2938:3321   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3326:3641   */\n    tag_63:\n        /* \"#utility.yul\":3394:3400   */\n      0x00\n        /* \"#utility.yul\":3402:3408   */\n      dup1\n        /* \"#utility.yul\":3455:3457   */\n      0x40\n        /* \"#utility.yul\":3443:3452   */\n      dup4\n        /* \"#utility.yul\":3434:3441   */\n      dup6\n        /* \"#utility.yul\":3430:3453   */\n      sub\n        /* \"#utility.yul\":3426:3458   */\n      slt\n        /* \"#utility.yul\":3423:3475   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3471:3472   */\n      0x00\n        /* \"#utility.yul\":3468:3469   */\n      dup1\n        /* \"#utility.yul\":3461:3473   */\n      revert\n        /* \"#utility.yul\":3423:3475   */\n    tag_357:\n        /* \"#utility.yul\":3510:3519   */\n      dup3\n        /* \"#utility.yul\":3497:3520   */\n      calldataload\n        /* \"#utility.yul\":3529:3560   */\n      tag_358\n        /* \"#utility.yul\":3554:3559   */\n      dup2\n        /* \"#utility.yul\":3529:3560   */\n      tag_331\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3579:3584   */\n      swap5\n        /* \"#utility.yul\":3631:3633   */\n      0x20\n        /* \"#utility.yul\":3616:3634   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":3603:3635   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3326:3641   */\n      jump\t// out\n        /* \"#utility.yul\":3646:3773   */\n    tag_200:\n        /* \"#utility.yul\":3707:3717   */\n      0x4e487b71\n        /* \"#utility.yul\":3702:3705   */\n      0xe0\n        /* \"#utility.yul\":3698:3718   */\n      shl\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3688:3719   */\n      mstore\n        /* \"#utility.yul\":3738:3742   */\n      0x21\n        /* \"#utility.yul\":3735:3736   */\n      0x04\n        /* \"#utility.yul\":3728:3743   */\n      mstore\n        /* \"#utility.yul\":3762:3766   */\n      0x24\n        /* \"#utility.yul\":3759:3760   */\n      0x00\n        /* \"#utility.yul\":3752:3767   */\n      revert\n        /* \"#utility.yul\":3778:4534   */\n    tag_66:\n        /* \"#utility.yul\":4077:4102   */\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4176:4191   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":4171:4173   */\n      0x20\n        /* \"#utility.yul\":4156:4174   */\n      dup4\n      add\n        /* \"#utility.yul\":4149:4192   */\n      mstore\n        /* \"#utility.yul\":4228:4243   */\n      dup6\n      and\n        /* \"#utility.yul\":4223:4225   */\n      0x40\n        /* \"#utility.yul\":4208:4226   */\n      dup3\n      add\n        /* \"#utility.yul\":4201:4244   */\n      mstore\n        /* \"#utility.yul\":4275:4277   */\n      0x60\n        /* \"#utility.yul\":4260:4278   */\n      dup2\n      add\n        /* \"#utility.yul\":4253:4287   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4318:4321   */\n      0x80\n        /* \"#utility.yul\":4303:4322   */\n      dup2\n      add\n        /* \"#utility.yul\":4296:4331   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4064:4067   */\n      0xc0\n        /* \"#utility.yul\":4049:4068   */\n      dup2\n      add\n        /* \"#utility.yul\":4361:4362   */\n      0x05\n        /* \"#utility.yul\":4350:4363   */\n      dup4\n      lt\n        /* \"#utility.yul\":4340:4484   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":4406:4416   */\n      0x4e487b71\n        /* \"#utility.yul\":4401:4404   */\n      0xe0\n        /* \"#utility.yul\":4397:4417   */\n      shl\n        /* \"#utility.yul\":4394:4395   */\n      0x00\n        /* \"#utility.yul\":4387:4418   */\n      mstore\n        /* \"#utility.yul\":4441:4445   */\n      0x21\n        /* \"#utility.yul\":4438:4439   */\n      0x04\n        /* \"#utility.yul\":4431:4446   */\n      mstore\n        /* \"#utility.yul\":4469:4473   */\n      0x24\n        /* \"#utility.yul\":4466:4467   */\n      0x00\n        /* \"#utility.yul\":4459:4474   */\n      revert\n        /* \"#utility.yul\":4340:4484   */\n    tag_361:\n        /* \"#utility.yul\":4521:4527   */\n      dup3\n        /* \"#utility.yul\":4515:4518   */\n      0xa0\n        /* \"#utility.yul\":4504:4513   */\n      dup4\n        /* \"#utility.yul\":4500:4519   */\n      add\n        /* \"#utility.yul\":4493:4528   */\n      mstore\n        /* \"#utility.yul\":3778:4534   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4936:5183   */\n    tag_87:\n        /* \"#utility.yul\":4995:5001   */\n      0x00\n        /* \"#utility.yul\":5048:5050   */\n      0x20\n        /* \"#utility.yul\":5036:5045   */\n      dup3\n        /* \"#utility.yul\":5027:5034   */\n      dup5\n        /* \"#utility.yul\":5023:5046   */\n      sub\n        /* \"#utility.yul\":5019:5051   */\n      slt\n        /* \"#utility.yul\":5016:5068   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5064:5065   */\n      0x00\n        /* \"#utility.yul\":5061:5062   */\n      dup1\n        /* \"#utility.yul\":5054:5066   */\n      revert\n        /* \"#utility.yul\":5016:5068   */\n    tag_365:\n        /* \"#utility.yul\":5103:5112   */\n      dup2\n        /* \"#utility.yul\":5090:5113   */\n      calldataload\n        /* \"#utility.yul\":5122:5153   */\n      tag_366\n        /* \"#utility.yul\":5147:5152   */\n      dup2\n        /* \"#utility.yul\":5122:5153   */\n      tag_331\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5172:5177   */\n      swap4\n        /* \"#utility.yul\":4936:5183   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5315   */\n    tag_332:\n        /* \"#utility.yul\":5249:5259   */\n      0x4e487b71\n        /* \"#utility.yul\":5244:5247   */\n      0xe0\n        /* \"#utility.yul\":5240:5260   */\n      shl\n        /* \"#utility.yul\":5237:5238   */\n      0x00\n        /* \"#utility.yul\":5230:5261   */\n      mstore\n        /* \"#utility.yul\":5280:5284   */\n      0x11\n        /* \"#utility.yul\":5277:5278   */\n      0x04\n        /* \"#utility.yul\":5270:5285   */\n      mstore\n        /* \"#utility.yul\":5304:5308   */\n      0x24\n        /* \"#utility.yul\":5301:5302   */\n      0x00\n        /* \"#utility.yul\":5294:5309   */\n      revert\n        /* \"#utility.yul\":5320:5445   */\n    tag_115:\n        /* \"#utility.yul\":5360:5364   */\n      0x00\n        /* \"#utility.yul\":5388:5389   */\n      dup3\n        /* \"#utility.yul\":5385:5386   */\n      dup3\n        /* \"#utility.yul\":5382:5390   */\n      lt\n        /* \"#utility.yul\":5379:5413   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":5393:5411   */\n      tag_370\n      tag_332\n      jump\t// in\n    tag_370:\n      pop\n        /* \"#utility.yul\":5430:5439   */\n      sub\n      swap1\n        /* \"#utility.yul\":5320:5445   */\n      jump\t// out\n        /* \"#utility.yul\":5450:5577   */\n    tag_118:\n        /* \"#utility.yul\":5511:5521   */\n      0x4e487b71\n        /* \"#utility.yul\":5506:5509   */\n      0xe0\n        /* \"#utility.yul\":5502:5522   */\n      shl\n        /* \"#utility.yul\":5499:5500   */\n      0x00\n        /* \"#utility.yul\":5492:5523   */\n      mstore\n        /* \"#utility.yul\":5542:5546   */\n      0x41\n        /* \"#utility.yul\":5539:5540   */\n      0x04\n        /* \"#utility.yul\":5532:5547   */\n      mstore\n        /* \"#utility.yul\":5566:5570   */\n      0x24\n        /* \"#utility.yul\":5563:5564   */\n      0x00\n        /* \"#utility.yul\":5556:5571   */\n      revert\n        /* \"#utility.yul\":5582:5710   */\n    tag_127:\n        /* \"#utility.yul\":5622:5625   */\n      0x00\n        /* \"#utility.yul\":5653:5654   */\n      dup3\n        /* \"#utility.yul\":5649:5655   */\n      not\n        /* \"#utility.yul\":5646:5647   */\n      dup3\n        /* \"#utility.yul\":5643:5656   */\n      gt\n        /* \"#utility.yul\":5640:5679   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5659:5677   */\n      tag_374\n      tag_332\n      jump\t// in\n    tag_374:\n      pop\n        /* \"#utility.yul\":5695:5704   */\n      add\n      swap1\n        /* \"#utility.yul\":5582:5710   */\n      jump\t// out\n        /* \"#utility.yul\":5715:5842   */\n    tag_132:\n        /* \"#utility.yul\":5776:5786   */\n      0x4e487b71\n        /* \"#utility.yul\":5771:5774   */\n      0xe0\n        /* \"#utility.yul\":5767:5787   */\n      shl\n        /* \"#utility.yul\":5764:5765   */\n      0x00\n        /* \"#utility.yul\":5757:5788   */\n      mstore\n        /* \"#utility.yul\":5807:5811   */\n      0x32\n        /* \"#utility.yul\":5804:5805   */\n      0x04\n        /* \"#utility.yul\":5797:5812   */\n      mstore\n        /* \"#utility.yul\":5831:5835   */\n      0x24\n        /* \"#utility.yul\":5828:5829   */\n      0x00\n        /* \"#utility.yul\":5821:5836   */\n      revert\n        /* \"#utility.yul\":5847:5982   */\n    tag_135:\n        /* \"#utility.yul\":5886:5889   */\n      0x00\n        /* \"#utility.yul\":5907:5924   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5904:5947   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":5927:5945   */\n      tag_378\n      tag_332\n      jump\t// in\n    tag_378:\n      pop\n        /* \"#utility.yul\":5974:5975   */\n      0x01\n        /* \"#utility.yul\":5963:5976   */\n      add\n      swap1\n        /* \"#utility.yul\":5847:5982   */\n      jump\t// out\n        /* \"#utility.yul\":6704:7079   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6962:6977   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":6944:6978   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7014:7029   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7009:7011   */\n      0x20\n        /* \"#utility.yul\":6994:7012   */\n      dup3\n      add\n        /* \"#utility.yul\":6987:7030   */\n      mstore\n        /* \"#utility.yul\":7061:7063   */\n      0x40\n        /* \"#utility.yul\":7046:7064   */\n      dup2\n      add\n        /* \"#utility.yul\":7039:7073   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6894:6896   */\n      0x60\n        /* \"#utility.yul\":6879:6897   */\n      add\n      swap1\n        /* \"#utility.yul\":6704:7079   */\n      jump\t// out\n        /* \"#utility.yul\":7624:7875   */\n    tag_190:\n        /* \"#utility.yul\":7694:7700   */\n      0x00\n        /* \"#utility.yul\":7747:7749   */\n      0x20\n        /* \"#utility.yul\":7735:7744   */\n      dup3\n        /* \"#utility.yul\":7726:7733   */\n      dup5\n        /* \"#utility.yul\":7722:7745   */\n      sub\n        /* \"#utility.yul\":7718:7750   */\n      slt\n        /* \"#utility.yul\":7715:7767   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":7763:7764   */\n      0x00\n        /* \"#utility.yul\":7760:7761   */\n      dup1\n        /* \"#utility.yul\":7753:7765   */\n      revert\n        /* \"#utility.yul\":7715:7767   */\n    tag_385:\n        /* \"#utility.yul\":7795:7804   */\n      dup2\n        /* \"#utility.yul\":7789:7805   */\n      mload\n        /* \"#utility.yul\":7814:7845   */\n      tag_366\n        /* \"#utility.yul\":7839:7844   */\n      dup2\n        /* \"#utility.yul\":7814:7845   */\n      tag_331\n      jump\t// in\n        /* \"#utility.yul\":9273:9629   */\n    tag_224:\n        /* \"#utility.yul\":9475:9477   */\n      0x20\n        /* \"#utility.yul\":9457:9478   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9494:9512   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9487:9517   */\n      mstore\n        /* \"#utility.yul\":9553:9587   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9548:9550   */\n      0x40\n        /* \"#utility.yul\":9533:9551   */\n      dup3\n      add\n        /* \"#utility.yul\":9526:9588   */\n      mstore\n        /* \"#utility.yul\":9620:9622   */\n      0x60\n        /* \"#utility.yul\":9605:9623   */\n      add\n      swap1\n        /* \"#utility.yul\":9273:9629   */\n      jump\t// out\n        /* \"#utility.yul\":11471:11639   */\n    tag_274:\n        /* \"#utility.yul\":11511:11518   */\n      0x00\n        /* \"#utility.yul\":11577:11578   */\n      dup2\n        /* \"#utility.yul\":11573:11574   */\n      0x00\n        /* \"#utility.yul\":11569:11575   */\n      not\n        /* \"#utility.yul\":11565:11579   */\n      div\n        /* \"#utility.yul\":11562:11563   */\n      dup4\n        /* \"#utility.yul\":11559:11580   */\n      gt\n        /* \"#utility.yul\":11554:11555   */\n      dup3\n        /* \"#utility.yul\":11547:11556   */\n      iszero\n        /* \"#utility.yul\":11540:11557   */\n      iszero\n        /* \"#utility.yul\":11536:11581   */\n      and\n        /* \"#utility.yul\":11533:11604   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":11584:11602   */\n      tag_398\n      tag_332\n      jump\t// in\n    tag_398:\n      pop\n        /* \"#utility.yul\":11624:11633   */\n      mul\n      swap1\n        /* \"#utility.yul\":11471:11639   */\n      jump\t// out\n        /* \"#utility.yul\":11644:11861   */\n    tag_276:\n        /* \"#utility.yul\":11684:11685   */\n      0x00\n        /* \"#utility.yul\":11710:11711   */\n      dup3\n        /* \"#utility.yul\":11700:11832   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":11754:11764   */\n      0x4e487b71\n        /* \"#utility.yul\":11749:11752   */\n      0xe0\n        /* \"#utility.yul\":11745:11765   */\n      shl\n        /* \"#utility.yul\":11742:11743   */\n      0x00\n        /* \"#utility.yul\":11735:11766   */\n      mstore\n        /* \"#utility.yul\":11789:11793   */\n      0x12\n        /* \"#utility.yul\":11786:11787   */\n      0x04\n        /* \"#utility.yul\":11779:11794   */\n      mstore\n        /* \"#utility.yul\":11817:11821   */\n      0x24\n        /* \"#utility.yul\":11814:11815   */\n      0x00\n        /* \"#utility.yul\":11807:11822   */\n      revert\n        /* \"#utility.yul\":11700:11832   */\n    tag_400:\n      pop\n        /* \"#utility.yul\":11846:11855   */\n      div\n      swap1\n        /* \"#utility.yul\":11644:11861   */\n      jump\t// out\n        /* \"#utility.yul\":11866:12143   */\n    tag_282:\n        /* \"#utility.yul\":11933:11939   */\n      0x00\n        /* \"#utility.yul\":11986:11988   */\n      0x20\n        /* \"#utility.yul\":11974:11983   */\n      dup3\n        /* \"#utility.yul\":11965:11972   */\n      dup5\n        /* \"#utility.yul\":11961:11984   */\n      sub\n        /* \"#utility.yul\":11957:11989   */\n      slt\n        /* \"#utility.yul\":11954:12006   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":12002:12003   */\n      0x00\n        /* \"#utility.yul\":11999:12000   */\n      dup1\n        /* \"#utility.yul\":11992:12004   */\n      revert\n        /* \"#utility.yul\":11954:12006   */\n    tag_402:\n        /* \"#utility.yul\":12034:12043   */\n      dup2\n        /* \"#utility.yul\":12028:12044   */\n      mload\n        /* \"#utility.yul\":12087:12092   */\n      dup1\n        /* \"#utility.yul\":12080:12093   */\n      iszero\n        /* \"#utility.yul\":12073:12094   */\n      iszero\n        /* \"#utility.yul\":12066:12071   */\n      dup2\n        /* \"#utility.yul\":12063:12095   */\n      eq\n        /* \"#utility.yul\":12053:12113   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":12109:12110   */\n      0x00\n        /* \"#utility.yul\":12106:12107   */\n      dup1\n        /* \"#utility.yul\":12099:12111   */\n      revert\n\n    auxdata: 0xa26469706673582212204517e964c0383902366f7dacfc7ef652924828e1a11c2459852f7c16b56440e264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_417": {
									"entryPoint": null,
									"id": 417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_123": {
									"entryPoint": 36,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600160005561001f33610024565b610076565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611b39806100856000396000f3fe6080604052600436106101095760003560e01c8063715018a611610095578063b7a60c7e11610064578063b7a60c7e14610376578063c23b139e14610397578063c7be7a4914610186578063f01b52dc146103aa578063f2fde38b146103ca57600080fd5b8063715018a6146102f057806385a8b36c146103055780638da5cb5b1461033857806392bf77dd1461035657600080fd5b80632b4c32be116100dc5780632b4c32be146101b357806349739678146101e757806358eb2df5146102415780635c80a4351461025657806368915327146102d057600080fd5b80630f08efe01461010e57806315b81dc314610139578063202e3740146101715780632a45b25014610186575b600080fd5b34801561011a57600080fd5b506101236103ea565b60405161013091906117d8565b60405180910390f35b34801561014557600080fd5b50600354610159906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b34801561017d57600080fd5b50610123610578565b34801561019257600080fd5b506101a66101a1366004611826565b610743565b604051610130919061183f565b3480156101bf57600080fd5b506101ce6380ac58cd60e01b81565b6040516001600160e01b03199091168152602001610130565b3480156101f357600080fd5b5061022c610202366004611868565b60026020908152600093845260408085208252928452828420905282529020805460019091015482565b60408051928352602083019190915201610130565b61025461024f3660046118aa565b6107b2565b005b34801561026257600080fd5b506102be6102713660046118df565b600160208181526000938452604080852090915291835291208054918101546002820154600383015460048401546005909401546001600160a01b03938416949390921692909160ff1686565b60405161013096959493929190611921565b3480156102dc57600080fd5b506102546102eb3660046118aa565b6109c1565b3480156102fc57600080fd5b50610254610d28565b34801561031157600080fd5b5060035461032690600160a01b900460ff1681565b60405160ff9091168152602001610130565b34801561034457600080fd5b506004546001600160a01b0316610159565b34801561036257600080fd5b5061025461037136600461197c565b610d5e565b34801561038257600080fd5b5060035461032690600160a81b900460ff1681565b6102546103a53660046118df565b610daa565b3480156103b657600080fd5b506102546103c53660046118aa565b610f73565b3480156103d657600080fd5b506102546103e536600461197c565b6113d4565b606060006103f760055490565b9050600061040460065490565b60055461041191906119b6565b90506000808267ffffffffffffffff81111561042f5761042f6119cd565b60405190808252806020026020018201604052801561046857816020015b61045561173d565b81526020019060019003908161044d5790505b50905060005b8481101561056f5760006007816104868460016119e3565b81526020810191909152604001600020600401546001600160a01b03160361055d5760006007816104b88460016119e3565b815260208082019290925260409081016000908120548082526007845290829020825160c0810184528154815260018201546001600160a01b039081169582019590955260028201549381019390935260038101548416606084015260048101549093166080830152600583015460a08301528551909350859087908110610542576105426119fb565b60209081029190910101526105586001866119e3565b945050505b8061056781611a11565b91505061046e565b50949350505050565b6060600061058560055490565b905060008060005b838110156105e75733600760006105a58460016119e3565b81526020810191909152604001600020600401546001600160a01b0316036105d5576105d26001846119e3565b92505b806105df81611a11565b91505061058d565b5060008267ffffffffffffffff811115610603576106036119cd565b60405190808252806020026020018201604052801561063c57816020015b61062961173d565b8152602001906001900390816106215790505b50905060005b8481101561056f57336007600061065a8460016119e3565b81526020810191909152604001600020600401546001600160a01b03160361073157600060078161068c8460016119e3565b815260208082019290925260409081016000908120548082526007845290829020825160c0810184528154815260018201546001600160a01b039081169582019590955260028201549381019390935260038101548416606084015260048101549093166080830152600583015460a08301528551909350859087908110610716576107166119fb565b602090810291909101015261072c6001866119e3565b945050505b8061073b81611a11565b915050610642565b61074b61173d565b50600090815260076020908152604091829020825160c0810184528154815260018201546001600160a01b0390811693820193909352600282015493810193909352600381015482166060840152600481015490911660808301526005015460a082015290565b6002600054036108095760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000558061085b5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206d757374206265206174206c65617374203120776569000000006044820152606401610800565b610869600580546001019055565b600061087460055490565b6040805160c0810182528281526001600160a01b0380881660208084018281528486018a8152336060870181815260006080890181815260a08a018e81528c83526007909752908a90209851895593516001890180549189166001600160a01b03199283161790559251600289015551600388018054918816918416919091179055915160048088018054929097169190921617909455905160059094019390935592516323b872dd60e01b815293945091926323b872dd9261093c92913091899101611a2a565b600060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b5050505082846001600160a01b0316827f2ad024d53a0dc50c130967f8d4941927ee087ea31394cebb2b9599d3706c9c00336000876040516109ae93929190611a2a565b60405180910390a4505060016000555050565b60008111610a115760405162461bcd60e51b815260206004820152601d60248201527f50726963652073686f756c6420626520626967676572207468616e20300000006044820152606401610800565b610a1a8361146f565b6040516331a9108f60e11b8152600481018390523390849082906001600160a01b03831690636352211e90602401602060405180830381865afa158015610a65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a899190611a4e565b6001600160a01b031614610ae95760405162461bcd60e51b815260206004820152602160248201527f5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e656044820152603960f91b6064820152608401610800565b6040516323b872dd60e01b81526001600160a01b038216906323b872dd90610b1990859030908990600401611a2a565b600060405180830381600087803b158015610b3357600080fd5b505af1158015610b47573d6000803e3d6000fd5b505050506001600160a01b0385811660009081526001602081815260408084208985528252808420815160c081018352815481529381015486169284019290925260028201549094169382019390935260038301546060820152600480840154608083015260058401549293919260a084019160ff90911690811115610bcf57610bcf61190b565b6004811115610be057610be061190b565b9052508051909150600003610c0257610bfd8386888760006115ae565b610cab565b60018160a001516004811115610c1a57610c1a61190b565b03610c5a5760405162461bcd60e51b815260206004820152601060248201526f4173736574206973206c697374696e6760801b6044820152606401610800565b6001600160a01b0386811660009081526001602081815260408084208a855290915290912060058101805460ff191683179055600381018790550180546001600160a01b0319169185169190911790555b8051604080516001600160a01b038981168252602082019390935290810186905260a0606082018190526003908201526221272160e91b60c08201524260808201529084169086907fff2412bd5c66e6ad5153e35ee902ee32bb4393211a4d0662428b9b481929a7b99060e00160405180910390a3505050505050565b6004546001600160a01b03163314610d525760405162461bcd60e51b815260040161080090611a6b565b610d5c60006116eb565b565b6004546001600160a01b03163314610d885760405162461bcd60e51b815260040161080090611a6b565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600260005403610dfc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610800565b600260008181558281526007602052604090206005810154910154348214610e8e576040805162461bcd60e51b81526020600482015260248101919091527f506c65617365207375626d6974207468652061736b696e67207072696365206960448201527f6e206f7264657220746f20636f6d706c657465207468652070757263686173656064820152608401610800565b6000838152600760205260408082206003015490516001600160a01b03909116913480156108fc02929091818181858888f19350505050158015610ed6573d6000803e3d6000fd5b506040516323b872dd60e01b81526001600160a01b038516906323b872dd90610f0790309033908690600401611a2a565b600060405180830381600087803b158015610f2157600080fd5b505af1158015610f35573d6000803e3d6000fd5b505050600084815260076020526040902060040180546001600160a01b0319163317905550610f68600680546001019055565b505060016000555050565b610f7c8361146f565b6001600160a01b0380841660009081526001602081815260408084208785528252808420815160c08101835281548152938101548616928401929092526002820154909416938201939093526003830154606082015260048084015460808301526005840154339488949392909160a084019160ff909116908111156110045761100461190b565b60048111156110155761101561190b565b90525080519091506000036110625760405162461bcd60e51b8152602060048201526013602482015272105cdcd95d081b9bdd081c1d589b1a5cda1959606a1b6044820152606401610800565b60018160a00151600481111561107a5761107a61190b565b146110c75760405162461bcd60e51b815260206004820152601860248201527f4173736574206973206e6f74206c69737420746f2062757900000000000000006044820152606401610800565b60208101516001600160a01b0381166111145760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610800565b81608001518510156111685760405162461bcd60e51b815260206004820152601e60248201527f7072696365206e65656420657175616c206c697374696e6720707269636500006044820152606401610800565b600354600090606490611186908890600160a81b900460ff16611aa0565b6111909190611abf565b9050600061119e82886119b6565b6003546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906111d390899030908790600401611a2a565b6020604051808303816000875af11580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611ae1565b506003546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061124b90899087908690600401611a2a565b6020604051808303816000875af115801561126a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128e9190611ae1565b50604051632142170760e11b81526001600160a01b038616906342842e0e906112bf9030908a908d90600401611a2a565b600060405180830381600087803b1580156112d957600080fd5b505af11580156112ed573d6000803e3d6000fd5b505050506001600160a01b0389811660008181526001602081815260408084208e855282529283902091820180548c87166001600160a01b031990911681179091556005909201805460ff1916600217905588516080808b015160035486519384529383019690965293810194909452600160a81b900460ff16606084015290820185905260e060a0830181905260049083015263414e544160e01b6101008301524260c0830152918516908a907f30247e11bbb597dfefd2a3124026f1ef8987a4d6ba46e3629f80bac1b0c9faee906101200160405180910390a4505050505050505050565b6004546001600160a01b031633146113fe5760405162461bcd60e51b815260040161080090611a6b565b6001600160a01b0381166114635760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610800565b61146c816116eb565b50565b803b63ffffffff166114cf5760405162461bcd60e51b8152602060048201526024808201527f546865204e465420416464726573732073686f756c64206265206120636f6e746044820152631c9858dd60e21b6064820152608401610800565b6040516301ffc9a760e01b81526380ac58cd60e01b600482015281906001600160a01b038216906301ffc9a790602401602060405180830381865afa15801561151c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115409190611ae1565b6115aa5760405162461bcd60e51b815260206004820152603560248201527f546865204e465420636f6e74726163742068617320616e20696e76616c69642060448201527422a9219b99189034b6b83632b6b2b73a30ba34b7b760591b6064820152608401610800565b5050565b60408051426020808301919091526bffffffffffffffffffffffff19606089811b8216848601526054840189905287901b16607483015260888083018690528351808403909101815260a883018085528151919092012061016883019093528281526001600160a01b0380891660c8840152861660e8830152610108820185905261012882018490529061014801600190526001600160a01b0385811660009081526001602081815260408084208b8552825292839020855181559085015181830180546001600160a01b03199081169287169290921790559285015160028201805490941694169390931790915560608301516003830155608083015160048084019190915560a08401516005840180549193909260ff199092169184908111156116dc576116dc61190b565b02179055505050505050505050565b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040518060c001604052806000815260200160006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b80518252602081015160018060a01b03808216602085015260408301516040850152806060840151166060850152806080840151166080850152505060a081015160a08301525050565b6020808252825182820181905260009190848201906040850190845b8181101561181a5761180783855161178e565b9284019260c092909201916001016117f4565b50909695505050505050565b60006020828403121561183857600080fd5b5035919050565b60c0810161184d828461178e565b92915050565b6001600160a01b038116811461146c57600080fd5b60008060006060848603121561187d57600080fd5b833561188881611853565b925060208401359150604084013561189f81611853565b809150509250925092565b6000806000606084860312156118bf57600080fd5b83356118ca81611853565b95602085013595506040909401359392505050565b600080604083850312156118f257600080fd5b82356118fd81611853565b946020939093013593505050565b634e487b7160e01b600052602160045260246000fd5b8681526001600160a01b03868116602083015285166040820152606081018490526080810183905260c081016005831061196b57634e487b7160e01b600052602160045260246000fd5b8260a0830152979650505050505050565b60006020828403121561198e57600080fd5b813561199981611853565b9392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156119c8576119c86119a0565b500390565b634e487b7160e01b600052604160045260246000fd5b600082198211156119f6576119f66119a0565b500190565b634e487b7160e01b600052603260045260246000fd5b600060018201611a2357611a236119a0565b5060010190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611a6057600080fd5b815161199981611853565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000816000190483118215151615611aba57611aba6119a0565b500290565b600082611adc57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611af357600080fd5b8151801515811461199957600080fdfea26469706673582212204517e964c0383902366f7dacfc7ef652924828e1a11c2459852f7c16b56440e264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x1F CALLER PUSH2 0x24 JUMP JUMPDEST PUSH2 0x76 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1B39 DUP1 PUSH2 0x85 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB7A60C7E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB7A60C7E EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xC23B139E EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xC7BE7A49 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xF01B52DC EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x85A8B36C EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x92BF77DD EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B4C32BE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2B4C32BE EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x49739678 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x58EB2DF5 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x5C80A435 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x68915327 EQ PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF08EFE0 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x15B81DC3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x202E3740 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x2A45B250 EQ PUSH2 0x186 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x159 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x578 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0xDAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3F7 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x404 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F JUMPI PUSH2 0x42F PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x468 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x455 PUSH2 0x173D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x44D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 PUSH2 0x486 DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x55D JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 PUSH2 0x4B8 DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x7 DUP5 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x542 JUMPI PUSH2 0x542 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x558 PUSH1 0x1 DUP7 PUSH2 0x19E3 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 PUSH2 0x567 DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x46E JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x585 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x5A5 DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5D5 JUMPI PUSH2 0x5D2 PUSH1 0x1 DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x5DF DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x603 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x63C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x629 PUSH2 0x173D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x621 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x56F JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x65A DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x731 JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 PUSH2 0x68C DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x7 DUP5 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x716 JUMPI PUSH2 0x716 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x72C PUSH1 0x1 DUP7 PUSH2 0x19E3 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 PUSH2 0x73B DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x642 JUMP JUMPDEST PUSH2 0x74B PUSH2 0x173D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE DUP1 PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH2 0x869 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x874 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP11 DUP2 MSTORE CALLER PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP11 ADD DUP15 DUP2 MSTORE DUP13 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP8 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP10 ADD DUP1 SLOAD SWAP2 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD SWAP2 DUP9 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x4 DUP1 DUP9 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SWAP5 SSTORE SWAP1 MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x93C SWAP3 SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x2AD024D53A0DC50C130967F8D4941927EE087EA31394CEBB2B9599D3706C9C00 CALLER PUSH1 0x0 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726963652073686F756C6420626520626967676572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH2 0xA1A DUP4 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073656C6C6572206973206E6F206C6F6E67657220746865206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xB19 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP5 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP5 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0xA0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBCF PUSH2 0x190B JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x190B JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0xC02 JUMPI PUSH2 0xBFD DUP4 DUP7 DUP9 DUP8 PUSH1 0x0 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC1A PUSH2 0x190B JUMP JUMPDEST SUB PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4173736574206973206C697374696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP8 SWAP1 SSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 SWAP1 DUP3 ADD MSTORE PUSH3 0x212721 PUSH1 0xE9 SHL PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE SWAP1 DUP5 AND SWAP1 DUP7 SWAP1 PUSH32 0xFF2412BD5C66E6AD5153E35EE902EE32BB4393211A4D0662428B9B481929A7B9 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0xD5C PUSH1 0x0 PUSH2 0x16EB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 SSTORE DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP2 ADD SLOAD CALLVALUE DUP3 EQ PUSH2 0xE8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x506C65617365207375626D6974207468652061736B696E672070726963652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7264657220746F20636F6D706C65746520746865207075726368617365 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xED6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xF07 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH2 0xF68 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF7C DUP4 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP5 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP5 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD CALLER SWAP5 DUP9 SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xA0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1004 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x1015 PUSH2 0x190B JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x1062 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105CDCD95D081B9BDD081C1D589B1A5CDA1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x107A JUMPI PUSH2 0x107A PUSH2 0x190B JUMP JUMPDEST EQ PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4173736574206973206E6F74206C69737420746F206275790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD DUP6 LT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7072696365206E65656420657175616C206C697374696E672070726963650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1186 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x119E DUP3 DUP9 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x11D3 SWAP1 DUP10 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x124B SWAP1 DUP10 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x12BF SWAP1 ADDRESS SWAP1 DUP11 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP15 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 SWAP2 DUP3 ADD DUP1 SLOAD DUP13 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP9 MLOAD PUSH1 0x80 DUP1 DUP12 ADD MLOAD PUSH1 0x3 SLOAD DUP7 MLOAD SWAP4 DUP5 MSTORE SWAP4 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP4 ADD MSTORE PUSH4 0x414E5441 PUSH1 0xE0 SHL PUSH2 0x100 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP6 AND SWAP1 DUP11 SWAP1 PUSH32 0x30247E11BBB597DFEFD2A3124026F1EF8987A4D6BA46E3629F80BAC1B0C9FAEE SWAP1 PUSH2 0x120 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH2 0x146C DUP2 PUSH2 0x16EB JUMP JUMPDEST POP JUMP JUMPDEST DUP1 EXTCODESIZE PUSH4 0xFFFFFFFF AND PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546865204E465420416464726573732073686F756C64206265206120636F6E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204E465420636F6E74726163742068617320616E20696E76616C696420 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x22A9219B99189034B6B83632B6B2B73A30BA34B7B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND DUP5 DUP7 ADD MSTORE PUSH1 0x54 DUP5 ADD DUP10 SWAP1 MSTORE DUP8 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH2 0x168 DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0xC8 DUP5 ADD MSTORE DUP7 AND PUSH1 0xE8 DUP4 ADD MSTORE PUSH2 0x108 DUP3 ADD DUP6 SWAP1 MSTORE PUSH2 0x128 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH2 0x148 ADD PUSH1 0x1 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP12 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD DUP2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP3 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP5 ADD DUP1 SLOAD SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DC PUSH2 0x190B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE DUP1 PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1807 DUP4 DUP6 MLOAD PUSH2 0x178E JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0xC0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17F4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x184D DUP3 DUP5 PUSH2 0x178E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x146C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x187D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1888 DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x189F DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18CA DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18FD DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x196B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1999 DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19C8 JUMPI PUSH2 0x19C8 PUSH2 0x19A0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F6 PUSH2 0x19A0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A23 JUMPI PUSH2 0x1A23 PUSH2 0x19A0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1999 DUP2 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1ABA JUMPI PUSH2 0x1ABA PUSH2 0x19A0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1ADC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1999 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT OR 0xE9 PUSH5 0xC038390236 PUSH16 0x7DACFC7EF652924828E1A11C2459852F PUSH29 0x16B56440E264736F6C634300080D003300000000000000000000000000 ",
							"sourceMap": "17004:7068:0:-:0;;;;;;;;;;;;-1:-1:-1;14124:1:0;14229:7;:22;1563:32;635:10;1563:18;:32::i;:::-;17004:7068;;2912:187;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;17004:7068::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ERC721_Interface_470": {
									"entryPoint": null,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_createItem_1368": {
									"entryPoint": 5550,
									"id": 1368,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireERC721_1307": {
									"entryPoint": 5231,
									"id": 1307,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_123": {
									"entryPoint": 5867,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@antaFeePercent_493": {
									"entryPoint": null,
									"id": 493,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@bnbFeePercent_491": {
									"entryPoint": null,
									"id": 491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyItemBySQF_1279": {
									"entryPoint": 3955,
									"id": 1279,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@createMarketItem_704": {
									"entryPoint": 1970,
									"id": 704,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@createMarketSale_901": {
									"entryPoint": 3498,
									"id": 901,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@current_343": {
									"entryPoint": null,
									"id": 343,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fetchMarketItem_919": {
									"entryPoint": 1859,
									"id": 919,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fetchMarketItems_1012": {
									"entryPoint": 1002,
									"id": 1012,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fetchMyNFTs_1124": {
									"entryPoint": 1400,
									"id": 1124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getMarketItem_611": {
									"entryPoint": null,
									"id": 611,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_357": {
									"entryPoint": null,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_1324": {
									"entryPoint": null,
									"id": 1324,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@itemOffers_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@items_477": {
									"entryPoint": null,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_80": {
									"entryPoint": 3368,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellItem_831": {
									"entryPoint": 2497,
									"id": 831,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setSQFToken_625": {
									"entryPoint": 3422,
									"id": 625,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sqfToken_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_103": {
									"entryPoint": 5076,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_address": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_MarketItem": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32_t_uint256_t_stringliteral_3ed03c38e59dc60c7b69c2a4bf68f9214acd953252b5a90e8f5f59583e9bc3ae_t_uint256__to_t_address_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_enum$_ItemStatus_$445__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed": {
									"entryPoint": 6433,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint8_t_uint256_t_stringliteral_13e02b8da55bc3461c43518788a3134484113c988aed7254102c6119037e5bdc_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$201__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b21f699a65a09b6e2704b11039ba04720c874542f986244c42f28469a6d8771__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a4ac9c47293eba02502bc2710c664fc3fb7804c6a27a6eaeb00f1e59d2e77b01__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_aff85cd57953df3387ee562487eca81d120f6fa919b73ed7cc04af598c9d9beb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b168b8e58a91ea5544216a4380103027d80d47eebc6bdf99e44544ae4afe7b42__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c706a5268ea237005cc19ce46562045551bcc4d5328f908e472345149359b32f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2f2e2a8ca6c2437ca423af4c2d2b7b3f1b61098282723eeea1ac3007dee4d77__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5ddf9c65ddf74cb37cf466efa2e4fa6fcd9593c09e9268830bd059f7b7880f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc3e7906b75a290460d275d30b192fd86fe681901b5d05ae5a9c34e52cbe2f12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_MarketItem_$579_memory_ptr__to_t_struct$_MarketItem_$579_memory_ptr__fromStack_reversed": {
									"entryPoint": 6207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 6411,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6605,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14712:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "68:427:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "85:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "96:5:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "90:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "90:12:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "78:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "78:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "112:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "142:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "149:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "138:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "138:16:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "132:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "132:23:1"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "116:12:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "164:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "182:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "187:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "191:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "174:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "174:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "168:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "213:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "218:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "229:12:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "243:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "225:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "202:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "267:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "272:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "263:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "263:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "289:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "296:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "285:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "285:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "279:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "328:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "319:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "349:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "356:4:1",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "345:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "345:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "339:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "339:23:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "364:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "335:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "335:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "312:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "388:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "393:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "414:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "421:4:1",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "410:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "410:16:1"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "404:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "404:23:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "429:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "400:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "377:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "377:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "453:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "458:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "449:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "475:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "482:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "471:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "471:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "465:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "465:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "442:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "442:47:1"
														}
													]
												},
												"name": "abi_encode_struct_MarketItem",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "52:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "59:3:1",
														"type": ""
													}
												],
												"src": "14:481:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "705:505:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "715:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "725:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "719:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "736:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "754:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "765:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "740:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "784:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "795:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "777:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "777:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "807:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "818:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "811:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "833:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "853:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "847:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "837:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "876:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "869:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "869:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "900:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "911:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "922:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "907:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "907:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "900:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "934:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "952:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "960:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "948:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "948:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "938:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "972:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "981:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "976:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:144:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1089:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1083:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1083:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1098:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_struct_MarketItem",
																				"nodeType": "YulIdentifier",
																				"src": "1054:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1054:48:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:48:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1115:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1131:4:1",
																					"type": "",
																					"value": "0xc0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1122:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1115:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1149:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1163:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1171:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1159:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1159:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1149:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1002:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1005:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "999:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "999:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1013:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1015:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1024:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1027:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1020:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1020:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1015:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "995:3:1",
																"statements": []
															},
															"src": "991:193:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1193:11:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1201:3:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1193:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "685:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "696:4:1",
														"type": ""
													}
												],
												"src": "500:710:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1382:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1397:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1413:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1418:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1409:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1409:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1422:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1405:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1405:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1393:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1375:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$201__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1310:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1321:4:1",
														"type": ""
													}
												],
												"src": "1215:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1507:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1553:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1562:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1565:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1555:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1555:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1555:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1528:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1537:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1524:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:32:1"
															},
															"nodeType": "YulIf",
															"src": "1517:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1578:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1601:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1588:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1588:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1578:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1473:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1484:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1496:6:1",
														"type": ""
													}
												],
												"src": "1437:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:99:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1787:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1799:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1795:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1795:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1787:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1852:6:1"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_MarketItem",
																	"nodeType": "YulIdentifier",
																	"src": "1823:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:47:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MarketItem_$579_memory_ptr__to_t_struct$_MarketItem_$579_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1746:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1757:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1768:4:1",
														"type": ""
													}
												],
												"src": "1622:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1980:103:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1990:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2013:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1998:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1990:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2047:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2059:3:1",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2064:10:1",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2055:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2055:20:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2043:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:33:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2025:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2025:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2025:52:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1949:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1960:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1971:4:1",
														"type": ""
													}
												],
												"src": "1881:202:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2133:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2197:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2206:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2209:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2199:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2199:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2156:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2167:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2182:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2187:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2178:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2178:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2191:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2174:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2174:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2163:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2163:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2153:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2153:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2146:50:1"
															},
															"nodeType": "YulIf",
															"src": "2143:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2122:5:1",
														"type": ""
													}
												],
												"src": "2088:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2328:352:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2374:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2386:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2376:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2376:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2376:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2349:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2358:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2345:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2370:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:32:1"
															},
															"nodeType": "YulIf",
															"src": "2338:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2399:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2412:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2412:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2403:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2469:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2444:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2444:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2484:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2494:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2484:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2508:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2535:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2546:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2531:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2518:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2518:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2508:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2559:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2602:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2574:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2574:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2563:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2640:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2615:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2657:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2667:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2657:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2278:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2289:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2301:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2309:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2317:6:1",
														"type": ""
													}
												],
												"src": "2224:456:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2814:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2824:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2836:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2847:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2824:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2866:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2877:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2859:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2859:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2859:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2904:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2915:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2900:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2900:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2920:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2893:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2893:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2775:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2786:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2794:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2805:4:1",
														"type": ""
													}
												],
												"src": "2685:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3042:279:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3088:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3097:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3100:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3090:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3090:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3090:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3063:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3072:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3084:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"nodeType": "YulIf",
															"src": "3052:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3113:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3139:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3126:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3126:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3117:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3183:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3158:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3198:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3208:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3222:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3249:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3260:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3245:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3232:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3232:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3222:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3273:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3300:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3311:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3296:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3283:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3283:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2992:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3003:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3015:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3023:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3031:6:1",
														"type": ""
													}
												],
												"src": "2938:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3459:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3468:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3471:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3461:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3461:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3461:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3434:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3443:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3455:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:32:1"
															},
															"nodeType": "YulIf",
															"src": "3423:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3484:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3510:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3497:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3488:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3554:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3529:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3529:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3529:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3569:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3579:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3569:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3593:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3620:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3631:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3616:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3603:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3371:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3382:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3394:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3402:6:1",
														"type": ""
													}
												],
												"src": "3326:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3678:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3702:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3698:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3698:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3688:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3688:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3735:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3738:4:1",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3728:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3728:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3759:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3762:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3752:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3752:15:1"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "3646:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4031:503:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4041:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4053:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4064:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4041:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4084:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4095:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4077:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4111:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4129:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4134:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4125:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4115:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4171:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4156:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4180:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4188:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4149:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4149:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4223:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4208:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4232:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4240:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4228:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4201:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4201:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4264:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4275:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4260:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4260:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4280:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4253:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4253:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4253:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4307:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4318:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4303:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "4324:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:35:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4373:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4394:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4401:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4406:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4397:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4397:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4387:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4387:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4387:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4438:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4441:4:1",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4431:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4431:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4431:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4466:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4469:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4459:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4459:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4459:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "4353:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4361:1:1",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4350:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4350:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4343:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4343:21:1"
															},
															"nodeType": "YulIf",
															"src": "4340:144:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4504:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4515:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4500:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4500:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "4521:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4493:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4493:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4493:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_enum$_ItemStatus_$445__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3960:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3971:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3979:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3987:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3995:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4003:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4011:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4022:4:1",
														"type": ""
													}
												],
												"src": "3778:756:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4636:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4646:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4658:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4654:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4646:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4688:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4703:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4711:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4699:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4681:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4605:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4616:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4627:4:1",
														"type": ""
													}
												],
												"src": "4539:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4829:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4839:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4851:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4862:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4847:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4847:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4839:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4881:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4896:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4912:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4917:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4908:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4908:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4921:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4904:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4904:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4892:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4874:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4874:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4798:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4809:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4820:4:1",
														"type": ""
													}
												],
												"src": "4728:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5006:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5052:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5061:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5064:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5054:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5054:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5054:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5027:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5036:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5023:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:32:1"
															},
															"nodeType": "YulIf",
															"src": "5016:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5077:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5103:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5090:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5090:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5081:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5147:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5122:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5122:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5162:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5172:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4972:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4983:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4995:6:1",
														"type": ""
													}
												],
												"src": "4936:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5220:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5237:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5244:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5249:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5240:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5240:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5230:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5230:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5230:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5277:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5280:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5301:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5304:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5294:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5188:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5369:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5385:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5382:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5382:8:1"
															},
															"nodeType": "YulIf",
															"src": "5379:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5422:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5434:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5437:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5430:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5430:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5422:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5351:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5354:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5360:4:1",
														"type": ""
													}
												],
												"src": "5320:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5482:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5499:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5506:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5511:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5502:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5492:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5492:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5539:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5532:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5532:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5566:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5556:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5556:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "5450:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5630:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5657:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5659:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5659:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5659:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5646:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5653:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5649:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5643:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5643:13:1"
															},
															"nodeType": "YulIf",
															"src": "5640:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5688:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5699:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5702:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5613:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5616:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5622:3:1",
														"type": ""
													}
												],
												"src": "5582:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5747:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5771:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5776:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5767:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5757:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5804:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5807:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5797:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5797:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5797:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5831:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5821:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5821:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5715:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5894:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5925:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5927:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5927:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5927:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5921:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5917:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5907:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:17:1"
															},
															"nodeType": "YulIf",
															"src": "5904:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5956:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5967:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5974:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5956:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5876:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5886:3:1",
														"type": ""
													}
												],
												"src": "5847:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6161:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6178:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6171:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6223:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6208:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6228:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6201:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6201:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6251:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6262:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6247:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6267:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6240:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6310:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6322:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6333:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6318:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6318:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6310:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6138:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6152:4:1",
														"type": ""
													}
												],
												"src": "5987:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6521:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6538:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6549:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6531:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6531:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6572:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6583:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6568:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6588:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6561:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6561:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6622:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6607:18:1"
																	},
																	{
																		"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6627:30:1",
																		"type": "",
																		"value": "Price must be at least 1 wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6600:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6667:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6679:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6690:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6675:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6675:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6667:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6498:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6512:4:1",
														"type": ""
													}
												],
												"src": "6347:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6861:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6871:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6883:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6894:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6879:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6879:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6871:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6906:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6924:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6929:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6933:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6916:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6910:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6951:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6966:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6974:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6962:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6944:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7009:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6994:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7018:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7026:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7014:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6987:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7050:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7061:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7066:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7039:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6814:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6825:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6833:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6852:4:1",
														"type": ""
													}
												],
												"src": "6704:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7258:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7275:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7286:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7268:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7268:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7268:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7309:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7320:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7305:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7305:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7298:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7298:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7348:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7359:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7344:18:1"
																	},
																	{
																		"hexValue": "50726963652073686f756c6420626520626967676572207468616e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7364:31:1",
																		"type": "",
																		"value": "Price should be bigger than 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7337:59:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7337:59:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7405:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7417:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7428:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7413:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7413:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7405:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2f2e2a8ca6c2437ca423af4c2d2b7b3f1b61098282723eeea1ac3007dee4d77__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7235:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7249:4:1",
														"type": ""
													}
												],
												"src": "7084:353:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7553:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7565:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7576:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7561:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7553:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7595:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7588:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7588:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7512:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7523:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7534:4:1",
														"type": ""
													}
												],
												"src": "7442:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7705:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7751:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7760:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7763:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7753:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7753:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7753:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7726:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7735:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7722:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7722:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7747:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:32:1"
															},
															"nodeType": "YulIf",
															"src": "7715:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7776:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7795:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7789:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7789:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7780:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7839:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7814:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7814:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7854:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7864:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7854:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7671:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7682:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7694:6:1",
														"type": ""
													}
												],
												"src": "7624:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8054:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8071:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8082:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8064:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8064:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8105:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8116:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8101:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8121:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8094:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8094:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8094:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8144:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8155:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8140:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8140:18:1"
																	},
																	{
																		"hexValue": "5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8160:34:1",
																		"type": "",
																		"value": "The seller is no longer the owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8133:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8133:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8215:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8226:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8211:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8211:18:1"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8231:3:1",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8204:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8204:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8204:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8244:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8244:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc3e7906b75a290460d275d30b192fd86fe681901b5d05ae5a9c34e52cbe2f12__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8031:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8045:4:1",
														"type": ""
													}
												],
												"src": "7880:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8456:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8473:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8466:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8466:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8507:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8518:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8503:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8503:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8523:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8496:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8496:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8546:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8557:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8542:18:1"
																	},
																	{
																		"hexValue": "4173736574206973206c697374696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8562:18:1",
																		"type": "",
																		"value": "Asset is listing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8535:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8535:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8590:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8613:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8598:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8598:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8590:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b168b8e58a91ea5544216a4380103027d80d47eebc6bdf99e44544ae4afe7b42__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8433:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8447:4:1",
														"type": ""
													}
												],
												"src": "8282:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8913:355:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8930:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8945:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8961:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8966:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8957:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8957:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8970:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8953:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8953:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8941:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8923:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8923:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8994:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9005:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8990:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9010:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8983:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8983:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9037:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9048:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9033:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9053:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9026:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9026:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9026:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9080:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9091:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9076:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9076:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9096:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9069:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9069:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9120:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9131:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9116:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9116:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9137:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9109:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9109:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9159:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9170:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9155:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9155:19:1"
																	},
																	{
																		"hexValue": "424e42",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9176:5:1",
																		"type": "",
																		"value": "BNB"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9148:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9148:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9148:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9191:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9203:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9214:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9199:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9199:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9191:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9238:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9249:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9234:19:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9255:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9227:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9227:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_stringliteral_3ed03c38e59dc60c7b69c2a4bf68f9214acd953252b5a90e8f5f59583e9bc3ae_t_uint256__to_t_address_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8858:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8869:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8877:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8885:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8893:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8904:4:1",
														"type": ""
													}
												],
												"src": "8627:641:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9447:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9464:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9457:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9457:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9457:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9498:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9509:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9494:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9494:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9487:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9487:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9487:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9537:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9548:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9533:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9553:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9526:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9526:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9597:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9609:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9620:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9605:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9605:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9597:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9424:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9438:4:1",
														"type": ""
													}
												],
												"src": "9273:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9808:254:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9825:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9836:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9818:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9818:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9818:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9859:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9870:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9855:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9875:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9848:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9848:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9898:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9909:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9894:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9894:18:1"
																	},
																	{
																		"hexValue": "506c65617365207375626d6974207468652061736b696e672070726963652069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9914:34:1",
																		"type": "",
																		"value": "Please submit the asking price i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9887:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9887:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9887:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9969:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9980:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9965:18:1"
																	},
																	{
																		"hexValue": "6e206f7264657220746f20636f6d706c65746520746865207075726368617365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9985:34:1",
																		"type": "",
																		"value": "n order to complete the purchase"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9958:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10029:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10041:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10052:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10037:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10037:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10029:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9785:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9799:4:1",
														"type": ""
													}
												],
												"src": "9634:428:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10241:169:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10258:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10269:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10251:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10251:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10251:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10292:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10303:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10288:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10281:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10281:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10331:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10342:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10327:18:1"
																	},
																	{
																		"hexValue": "4173736574206e6f74207075626c6973686564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10347:21:1",
																		"type": "",
																		"value": "Asset not published"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10378:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10390:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10401:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10386:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10386:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10378:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a4ac9c47293eba02502bc2710c664fc3fb7804c6a27a6eaeb00f1e59d2e77b01__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10218:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10232:4:1",
														"type": ""
													}
												],
												"src": "10067:343:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10589:174:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10606:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10617:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10599:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10599:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10640:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10651:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10636:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10636:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10629:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10629:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10629:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10690:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10675:18:1"
																	},
																	{
																		"hexValue": "4173736574206973206e6f74206c69737420746f20627579",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10695:26:1",
																		"type": "",
																		"value": "Asset is not list to buy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10668:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10668:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10731:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10743:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10754:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10739:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10739:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10731:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c706a5268ea237005cc19ce46562045551bcc4d5328f908e472345149359b32f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10566:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10580:4:1",
														"type": ""
													}
												],
												"src": "10415:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10942:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10959:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10970:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10952:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10952:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10993:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11004:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10989:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10989:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11009:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10982:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10982:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11032:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11043:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11028:18:1"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11048:17:1",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11021:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11021:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11021:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11075:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11087:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11098:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11083:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11083:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11075:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10919:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10933:4:1",
														"type": ""
													}
												],
												"src": "10768:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11286:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11303:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11314:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11296:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11296:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11348:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11333:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11326:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11376:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11387:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11372:18:1"
																	},
																	{
																		"hexValue": "7072696365206e65656420657175616c206c697374696e67207072696365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11392:32:1",
																		"type": "",
																		"value": "price need equal listing price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11365:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11365:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11434:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11446:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11442:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11442:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11434:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5ddf9c65ddf74cb37cf466efa2e4fa6fcd9593c09e9268830bd059f7b7880f1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11263:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11277:4:1",
														"type": ""
													}
												],
												"src": "11112:354:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11523:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11582:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11584:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11584:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11584:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11554:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11547:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11547:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11540:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11540:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11562:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11573:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11569:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11569:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11577:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11565:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11565:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11559:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11559:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11536:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:45:1"
															},
															"nodeType": "YulIf",
															"src": "11533:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11613:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11628:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11631:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11624:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11624:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11613:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11502:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11505:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11511:7:1",
														"type": ""
													}
												],
												"src": "11471:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11690:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11721:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11742:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11749:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11754:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11745:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11745:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11735:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11735:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11735:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11786:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11789:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11779:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11779:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11779:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11814:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11817:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11807:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11807:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11807:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11710:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11703:9:1"
															},
															"nodeType": "YulIf",
															"src": "11700:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11841:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11850:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11853:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11846:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11846:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11841:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11675:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11678:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11684:1:1",
														"type": ""
													}
												],
												"src": "11644:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11944:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11990:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11999:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12002:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11992:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11992:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11992:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11965:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11974:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11961:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11961:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11986:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11957:32:1"
															},
															"nodeType": "YulIf",
															"src": "11954:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12015:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12034:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12028:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12028:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12019:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12097:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12106:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12109:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12099:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12099:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12099:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12066:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12087:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "12080:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12080:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12073:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12073:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12063:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12063:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12056:40:1"
															},
															"nodeType": "YulIf",
															"src": "12053:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12122:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12132:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11910:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11921:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11933:6:1",
														"type": ""
													}
												],
												"src": "11866:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12486:455:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12503:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12514:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12496:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12496:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12496:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12541:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12552:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12537:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12537:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12561:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12577:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12573:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12573:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12586:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12569:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12569:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12557:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12557:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12530:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12530:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12530:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12610:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12621:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12606:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12626:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12599:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12599:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12599:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12653:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12664:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12649:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "12673:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12681:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12669:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12642:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12642:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12642:45:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12707:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12718:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12703:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12703:19:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "12724:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12696:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12696:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12696:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12751:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12762:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12747:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12768:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12740:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12740:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12740:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12803:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12788:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12809:1:1",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12781:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12781:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12831:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12842:3:1",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12827:19:1"
																	},
																	{
																		"hexValue": "414e5441",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12848:6:1",
																		"type": "",
																		"value": "ANTA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12820:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12820:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12820:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12864:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12876:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12887:3:1",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12864:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12911:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12922:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12907:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12907:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint8_t_uint256_t_stringliteral_13e02b8da55bc3461c43518788a3134484113c988aed7254102c6119037e5bdc_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12415:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "12426:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12434:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12442:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12450:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12458:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12466:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12477:4:1",
														"type": ""
													}
												],
												"src": "12148:793:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13120:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13130:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13130:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13130:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13171:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13182:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13167:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13167:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13187:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13160:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13160:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13221:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13206:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13226:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13199:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13199:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13281:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13292:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13277:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13277:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13297:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13270:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13270:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13270:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13315:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13327:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13338:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13323:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13315:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13097:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13111:4:1",
														"type": ""
													}
												],
												"src": "12946:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13527:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13544:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13537:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13537:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13537:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13578:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13589:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13574:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13594:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13567:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13567:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13617:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13628:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13613:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13613:18:1"
																	},
																	{
																		"hexValue": "546865204e465420416464726573732073686f756c64206265206120636f6e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13633:34:1",
																		"type": "",
																		"value": "The NFT Address should be a cont"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13606:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13606:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13606:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13699:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13684:18:1"
																	},
																	{
																		"hexValue": "72616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13704:6:1",
																		"type": "",
																		"value": "ract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13677:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13677:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13677:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13720:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13732:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13743:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13728:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13728:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13720:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_aff85cd57953df3387ee562487eca81d120f6fa919b73ed7cc04af598c9d9beb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13504:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13518:4:1",
														"type": ""
													}
												],
												"src": "13353:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13932:243:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13949:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13960:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13942:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13942:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13942:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13994:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13979:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13999:2:1",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13972:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13972:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13972:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14022:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14033:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14018:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14018:18:1"
																	},
																	{
																		"hexValue": "546865204e465420636f6e74726163742068617320616e20696e76616c696420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14038:34:1",
																		"type": "",
																		"value": "The NFT contract has an invalid "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14011:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14011:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14011:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14093:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14104:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14089:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14089:18:1"
																	},
																	{
																		"hexValue": "45524337323120696d706c656d656e746174696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14109:23:1",
																		"type": "",
																		"value": "ERC721 implementation"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14082:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14082:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14142:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14154:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14165:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14150:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14150:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14142:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b21f699a65a09b6e2704b11039ba04720c874542f986244c42f28469a6d8771__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13909:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13923:4:1",
														"type": ""
													}
												],
												"src": "13758:417:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14411:299:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14428:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14433:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14421:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14421:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14421:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14449:41:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14463:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "14459:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14459:31:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14453:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14510:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14515:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14506:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14528:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "14532:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14524:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14524:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14541:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14520:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14499:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14499:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14565:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14570:2:1",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14561:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14561:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14575:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14554:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14554:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14554:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14602:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14607:2:1",
																				"type": "",
																				"value": "84"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14598:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14620:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "14624:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "14616:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14616:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14633:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14612:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14591:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14591:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14657:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14662:3:1",
																				"type": "",
																				"value": "104"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14653:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14653:13:1"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14668:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14646:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14646:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14646:29:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14684:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14695:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14700:3:1",
																		"type": "",
																		"value": "136"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14691:13:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14684:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14355:3:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14360:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14368:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14376:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14384:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14392:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14403:3:1",
														"type": ""
													}
												],
												"src": "14180:530:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_struct_MarketItem(value, pos)\n    {\n        mstore(pos, mload(value))\n        let memberValue0 := mload(add(value, 0x20))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(pos, 0x20), and(memberValue0, _1))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), _1))\n        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), _1))\n        mstore(add(pos, 0xa0), mload(add(value, 0xa0)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            abi_encode_struct_MarketItem(mload(srcPtr), pos)\n            pos := add(pos, 0xc0)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$201__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_struct$_MarketItem_$579_memory_ptr__to_t_struct$_MarketItem_$579_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_MarketItem(value0, headStart)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_enum$_ItemStatus_$445__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        if iszero(lt(value5, 5))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Price must be at least 1 wei\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e2f2e2a8ca6c2437ca423af4c2d2b7b3f1b61098282723eeea1ac3007dee4d77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Price should be bigger than 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fc3e7906b75a290460d275d30b192fd86fe681901b5d05ae5a9c34e52cbe2f12__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"The seller is no longer the owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b168b8e58a91ea5544216a4380103027d80d47eebc6bdf99e44544ae4afe7b42__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Asset is listing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_stringliteral_3ed03c38e59dc60c7b69c2a4bf68f9214acd953252b5a90e8f5f59583e9bc3ae_t_uint256__to_t_address_t_bytes32_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        mstore(add(headStart, 160), 3)\n        mstore(add(headStart, 192), \"BNB\")\n        tail := add(headStart, 224)\n        mstore(add(headStart, 128), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Please submit the asking price i\")\n        mstore(add(headStart, 96), \"n order to complete the purchase\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a4ac9c47293eba02502bc2710c664fc3fb7804c6a27a6eaeb00f1e59d2e77b01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Asset not published\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c706a5268ea237005cc19ce46562045551bcc4d5328f908e472345149359b32f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Asset is not list to buy\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5ddf9c65ddf74cb37cf466efa2e4fa6fcd9593c09e9268830bd059f7b7880f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"price need equal listing price\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_uint256_t_uint8_t_uint256_t_stringliteral_13e02b8da55bc3461c43518788a3134484113c988aed7254102c6119037e5bdc_t_uint256__to_t_bytes32_t_address_t_uint256_t_uint8_t_uint256_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), 224)\n        mstore(add(headStart, 224), 4)\n        mstore(add(headStart, 256), \"ANTA\")\n        tail := add(headStart, 288)\n        mstore(add(headStart, 192), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_aff85cd57953df3387ee562487eca81d120f6fa919b73ed7cc04af598c9d9beb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"The NFT Address should be a cont\")\n        mstore(add(headStart, 96), \"ract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4b21f699a65a09b6e2704b11039ba04720c874542f986244c42f28469a6d8771__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"The NFT contract has an invalid \")\n        mstore(add(headStart, 96), \"ERC721 implementation\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        mstore(pos, value0)\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 32), and(shl(96, value1), _1))\n        mstore(add(pos, 52), value2)\n        mstore(add(pos, 84), and(shl(96, value3), _1))\n        mstore(add(pos, 104), value4)\n        end := add(pos, 136)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB7A60C7E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB7A60C7E EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xC23B139E EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xC7BE7A49 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0xF01B52DC EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x85A8B36C EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x92BF77DD EQ PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B4C32BE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x2B4C32BE EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x49739678 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x58EB2DF5 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x5C80A435 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x68915327 EQ PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF08EFE0 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x15B81DC3 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x202E3740 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x2A45B250 EQ PUSH2 0x186 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x17D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x159 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x578 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x1A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1826 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x183F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CE PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22C PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0x1868 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 DUP3 MSTORE SWAP3 DUP5 MSTORE DUP3 DUP5 KECCAK256 SWAP1 MSTORE DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x24F CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x7B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP5 SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1921 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x9C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0xD28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x311 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x159 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x371 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x326 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x254 PUSH2 0x3A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0xDAA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x3C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0xF73 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x254 PUSH2 0x3E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x3F7 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x404 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x411 SWAP2 SWAP1 PUSH2 0x19B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x42F JUMPI PUSH2 0x42F PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x468 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x455 PUSH2 0x173D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x44D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 PUSH2 0x486 DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x55D JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 PUSH2 0x4B8 DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x7 DUP5 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x542 JUMPI PUSH2 0x542 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x558 PUSH1 0x1 DUP7 PUSH2 0x19E3 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 PUSH2 0x567 DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x46E JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x585 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5E7 JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x5A5 DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x5D5 JUMPI PUSH2 0x5D2 PUSH1 0x1 DUP5 PUSH2 0x19E3 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x5DF DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x58D JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x603 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x63C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x629 PUSH2 0x173D JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x621 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x56F JUMPI CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x65A DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x731 JUMPI PUSH1 0x0 PUSH1 0x7 DUP2 PUSH2 0x68C DUP5 PUSH1 0x1 PUSH2 0x19E3 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP1 DUP3 MSTORE PUSH1 0x7 DUP5 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP4 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP6 MLOAD SWAP1 SWAP4 POP DUP6 SWAP1 DUP8 SWAP1 DUP2 LT PUSH2 0x716 JUMPI PUSH2 0x716 PUSH2 0x19FB JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x72C PUSH1 0x1 DUP7 PUSH2 0x19E3 JUMP JUMPDEST SWAP5 POP POP POP JUMPDEST DUP1 PUSH2 0x73B DUP2 PUSH2 0x1A11 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x642 JUMP JUMPDEST PUSH2 0x74B PUSH2 0x173D JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP2 ADD SLOAD DUP3 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x809 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE DUP1 PUSH2 0x85B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH2 0x869 PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x874 PUSH1 0x5 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x20 DUP1 DUP5 ADD DUP3 DUP2 MSTORE DUP5 DUP7 ADD DUP11 DUP2 MSTORE CALLER PUSH1 0x60 DUP8 ADD DUP2 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP10 ADD DUP2 DUP2 MSTORE PUSH1 0xA0 DUP11 ADD DUP15 DUP2 MSTORE DUP13 DUP4 MSTORE PUSH1 0x7 SWAP1 SWAP8 MSTORE SWAP1 DUP11 SWAP1 KECCAK256 SWAP9 MLOAD DUP10 SSTORE SWAP4 MLOAD PUSH1 0x1 DUP10 ADD DUP1 SLOAD SWAP2 DUP10 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP3 MLOAD PUSH1 0x2 DUP10 ADD SSTORE MLOAD PUSH1 0x3 DUP9 ADD DUP1 SLOAD SWAP2 DUP9 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE SWAP2 MLOAD PUSH1 0x4 DUP1 DUP9 ADD DUP1 SLOAD SWAP3 SWAP1 SWAP8 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SWAP5 SSTORE SWAP1 MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 SWAP5 POP SWAP2 SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x93C SWAP3 SWAP2 ADDRESS SWAP2 DUP10 SWAP2 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x96A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP3 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH32 0x2AD024D53A0DC50C130967F8D4941927EE087EA31394CEBB2B9599D3706C9C00 CALLER PUSH1 0x0 DUP8 PUSH1 0x40 MLOAD PUSH2 0x9AE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA11 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726963652073686F756C6420626520626967676572207468616E2030000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH2 0xA1A DUP4 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 DUP5 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA65 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1A4E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xAE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5468652073656C6C6572206973206E6F206C6F6E67657220746865206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xB19 SWAP1 DUP6 SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB47 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP5 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP5 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0xA0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0xBCF JUMPI PUSH2 0xBCF PUSH2 0x190B JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x190B JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0xC02 JUMPI PUSH2 0xBFD DUP4 DUP7 DUP9 DUP8 PUSH1 0x0 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0xCAB JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC1A PUSH2 0x190B JUMP JUMPDEST SUB PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4173736574206973206C697374696E67 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 OR SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP8 SWAP1 SSTORE ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 DUP6 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x3 SWAP1 DUP3 ADD MSTORE PUSH3 0x212721 PUSH1 0xE9 SHL PUSH1 0xC0 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE SWAP1 DUP5 AND SWAP1 DUP7 SWAP1 PUSH32 0xFF2412BD5C66E6AD5153E35EE902EE32BB4393211A4D0662428B9B481929A7B9 SWAP1 PUSH1 0xE0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD52 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH2 0xD5C PUSH1 0x0 PUSH2 0x16EB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xDFC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 SSTORE DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD SWAP2 ADD SLOAD CALLVALUE DUP3 EQ PUSH2 0xE8E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x506C65617365207375626D6974207468652061736B696E672070726963652069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206F7264657220746F20636F6D706C65746520746865207075726368617365 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 CALLVALUE DUP1 ISZERO PUSH2 0x8FC MUL SWAP3 SWAP1 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xED6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xF07 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP PUSH2 0xF68 PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH2 0xF7C DUP4 PUSH2 0x146F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xC0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE SWAP4 DUP2 ADD SLOAD DUP7 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP1 SWAP5 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP1 DUP5 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x5 DUP5 ADD SLOAD CALLER SWAP5 DUP9 SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0xA0 DUP5 ADD SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 DUP2 GT ISZERO PUSH2 0x1004 JUMPI PUSH2 0x1004 PUSH2 0x190B JUMP JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1015 JUMPI PUSH2 0x1015 PUSH2 0x190B JUMP JUMPDEST SWAP1 MSTORE POP DUP1 MLOAD SWAP1 SWAP2 POP PUSH1 0x0 SUB PUSH2 0x1062 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x105CDCD95D081B9BDD081C1D589B1A5CDA1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xA0 ADD MLOAD PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x107A JUMPI PUSH2 0x107A PUSH2 0x190B JUMP JUMPDEST EQ PUSH2 0x10C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4173736574206973206E6F74206C69737420746F206275790000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1114 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST DUP2 PUSH1 0x80 ADD MLOAD DUP6 LT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7072696365206E65656420657175616C206C697374696E672070726963650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1186 SWAP1 DUP9 SWAP1 PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1AA0 JUMP JUMPDEST PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x1ABF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x119E DUP3 DUP9 PUSH2 0x19B6 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x11D3 SWAP1 DUP10 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1216 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x124B SWAP1 DUP10 SWAP1 DUP8 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x126A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x12BF SWAP1 ADDRESS SWAP1 DUP11 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A2A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP15 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 SWAP2 DUP3 ADD DUP1 SLOAD DUP13 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x5 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR SWAP1 SSTORE DUP9 MLOAD PUSH1 0x80 DUP1 DUP12 ADD MLOAD PUSH1 0x3 SLOAD DUP7 MLOAD SWAP4 DUP5 MSTORE SWAP4 DUP4 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x1 PUSH1 0xA8 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x60 DUP5 ADD MSTORE SWAP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0xE0 PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x4 SWAP1 DUP4 ADD MSTORE PUSH4 0x414E5441 PUSH1 0xE0 SHL PUSH2 0x100 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP4 ADD MSTORE SWAP2 DUP6 AND SWAP1 DUP11 SWAP1 PUSH32 0x30247E11BBB597DFEFD2A3124026F1EF8987A4D6BA46E3629F80BAC1B0C9FAEE SWAP1 PUSH2 0x120 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x800 SWAP1 PUSH2 0x1A6B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH2 0x146C DUP2 PUSH2 0x16EB JUMP JUMPDEST POP JUMP JUMPDEST DUP1 EXTCODESIZE PUSH4 0xFFFFFFFF AND PUSH2 0x14CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x546865204E465420416464726573732073686F756C64206265206120636F6E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C9858DD PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x1FFC9A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x151C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1540 SWAP2 SWAP1 PUSH2 0x1AE1 JUMP JUMPDEST PUSH2 0x15AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546865204E465420636F6E74726163742068617320616E20696E76616C696420 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x22A9219B99189034B6B83632B6B2B73A30BA34B7B7 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x800 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND DUP5 DUP7 ADD MSTORE PUSH1 0x54 DUP5 ADD DUP10 SWAP1 MSTORE DUP8 SWAP1 SHL AND PUSH1 0x74 DUP4 ADD MSTORE PUSH1 0x88 DUP1 DUP4 ADD DUP7 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA8 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH2 0x168 DUP4 ADD SWAP1 SWAP4 MSTORE DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0xC8 DUP5 ADD MSTORE DUP7 AND PUSH1 0xE8 DUP4 ADD MSTORE PUSH2 0x108 DUP3 ADD DUP6 SWAP1 MSTORE PUSH2 0x128 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 PUSH2 0x148 ADD PUSH1 0x1 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP12 DUP6 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP1 DUP6 ADD MLOAD DUP2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE SWAP3 DUP6 ADD MLOAD PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP5 AND SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x5 DUP5 ADD DUP1 SLOAD SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x16DC JUMPI PUSH2 0x16DC PUSH2 0x190B JUMP JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP6 ADD MSTORE DUP1 PUSH1 0x60 DUP5 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE DUP1 PUSH1 0x80 DUP5 ADD MLOAD AND PUSH1 0x80 DUP6 ADD MSTORE POP POP PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x181A JUMPI PUSH2 0x1807 DUP4 DUP6 MLOAD PUSH2 0x178E JUMP JUMPDEST SWAP3 DUP5 ADD SWAP3 PUSH1 0xC0 SWAP3 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x17F4 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0x184D DUP3 DUP5 PUSH2 0x178E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x146C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x187D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1888 DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x189F DUP2 PUSH2 0x1853 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x18CA DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x18FD DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD PUSH1 0x5 DUP4 LT PUSH2 0x196B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x198E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1999 DUP2 PUSH2 0x1853 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19C8 JUMPI PUSH2 0x19C8 PUSH2 0x19A0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x19F6 JUMPI PUSH2 0x19F6 PUSH2 0x19A0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A23 JUMPI PUSH2 0x1A23 PUSH2 0x19A0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1999 DUP2 PUSH2 0x1853 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1ABA JUMPI PUSH2 0x1ABA PUSH2 0x19A0 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1ADC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1999 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT OR 0xE9 PUSH5 0xC038390236 PUSH16 0x7DACFC7EF652924828E1A11C2459852F PUSH29 0x16B56440E264736F6C634300080D003300000000000000000000000000 ",
							"sourceMap": "17004:7068:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20261:608;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16146:22;;;;;;;;;;-1:-1:-1;16146:22:0;;;;-1:-1:-1;;;;;16146:22:0;;;;;;-1:-1:-1;;;;;1393:32:1;;;1375:51;;1363:2;1348:18;16146:22:0;1215:217:1;20873:703:0;;;;;;;;;;;;;:::i;20104:153::-;;;;;;;;;;-1:-1:-1;20104:153:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;15771:60::-;;;;;;;;;;-1:-1:-1;15771:60:0;-1:-1:-1;;;15771:60:0;;;;;-1:-1:-1;;;;;;2043:33:1;;;2025:52;;2013:2;1998:18;15771:60:0;1881:202:1;16045:95:0;;;;;;;;;;-1:-1:-1;16045:95:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2859:25:1;;;2915:2;2900:18;;2893:34;;;;2832:18;16045:95:0;2685:248:1;17829:626:0;;;;;;:::i;:::-;;:::i;:::-;;15909:57;;;;;;;;;;-1:-1:-1;15909:57:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15909:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18459:1113::-;;;;;;;;;;-1:-1:-1;18459:1113:0;;;;;:::i;:::-;;:::i;2310:101::-;;;;;;;;;;;;;:::i;16175:26::-;;;;;;;;;;-1:-1:-1;16175:26:0;;;;-1:-1:-1;;;16175:26:0;;;;;;;;;4711:4:1;4699:17;;;4681:36;;4669:2;4654:18;16175:26:0;4539:184:1;1678:85:0;;;;;;;;;;-1:-1:-1;1750:6:0;;-1:-1:-1;;;;;1750:6:0;1678:85;;17727:98;;;;;;;;;;-1:-1:-1;17727:98:0;;;;;:::i;:::-;;:::i;16207:27::-;;;;;;;;;;-1:-1:-1;16207:27:0;;;;-1:-1:-1;;;16207:27:0;;;;;;19576:524;;;;;;:::i;:::-;;:::i;21581:1296::-;;;;;;;;;;-1:-1:-1;21581:1296:0;;;;;:::i;:::-;;:::i;2560:198::-;;;;;;;;;;-1:-1:-1;2560:198:0;;;;;:::i;:::-;;:::i;20261:608::-;20310:19;20337:14;20354:18;:8;11944:14;;11853:112;20354:18;20337:35;;20378:20;20422;:10;11944:14;;11853:112;20422:20;20401:8;11944:14;20401:41;;;;:::i;:::-;20378:64;;20448:17;20476:25;20521:15;20504:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;20476:61;;20548:6;20543:300;20564:9;20560:1;:13;20543:300;;;20631:1;20592:14;20631:1;20607:5;:1;20611;20607:5;:::i;:::-;20592:21;;;;;;;;;;;-1:-1:-1;20592:21:0;:27;;;-1:-1:-1;;;;;20592:27:0;:41;20588:249;;20645:14;20662;20645;20677:5;:1;20681;20677:5;:::i;:::-;20662:21;;;;;;;;;;;;;;-1:-1:-1;20662:21:0;;;:28;20733:25;;;:14;:25;;;;;;20768:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;20768:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;20662:28;;-1:-1:-1;20768:5:0;;20774:12;;20768:19;;;;;;:::i;:::-;;;;;;;;;;:33;20811:17;20827:1;20811:17;;:::i;:::-;;;20635:202;;20588:249;20575:3;;;;:::i;:::-;;;;20543:300;;;-1:-1:-1;20859:5:0;20261:608;-1:-1:-1;;;;20261:608:0:o;20873:703::-;20917:19;20944;20966:18;:8;11944:14;;11853:112;20966:18;20944:40;;20990:14;21014:17;21047:6;21042:136;21063:14;21059:1;:18;21042:136;;;21127:10;21096:14;:21;21111:5;:1;21115;21111:5;:::i;:::-;21096:21;;;;;;;;;;;-1:-1:-1;21096:21:0;:27;;;-1:-1:-1;;;;;21096:27:0;:41;21092:80;;21149:14;21162:1;21149:14;;:::i;:::-;;;21092:80;21079:3;;;;:::i;:::-;;;;21042:136;;;;21184:25;21229:9;21212:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21184:55;;21250:6;21245:305;21266:14;21262:1;:18;21245:305;;;21330:10;21299:14;:21;21314:5;:1;21318;21314:5;:::i;:::-;21299:21;;;;;;;;;;;-1:-1:-1;21299:21:0;:27;;;-1:-1:-1;;;;;21299:27:0;:41;21295:249;;21352:14;21369;21352;21384:5;:1;21388;21384:5;:::i;:::-;21369:21;;;;;;;;;;;;;;-1:-1:-1;21369:21:0;;;:28;21440:25;;;:14;:25;;;;;;21475:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;21475:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:19;;21369:28;;-1:-1:-1;21475:5:0;;21481:12;;21475:19;;;;;;:::i;:::-;;;;;;;;;;:33;21518:17;21534:1;21518:17;;:::i;:::-;;;21342:202;;21295:249;21282:3;;;;:::i;:::-;;;;21245:305;;20104:153;20163:17;;:::i;:::-;-1:-1:-1;20188:22:0;20213;;;:14;:22;;;;;;;;;20188:47;;;;;;;;;;;;;;;-1:-1:-1;;;;;20188:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20104:153::o;17829:626::-;14167:1;14748:7;;:19;14740:63;;;;-1:-1:-1;;;14740:63:0;;6189:2:1;14740:63:0;;;6171:21:1;6228:2;6208:18;;;6201:30;6267:33;6247:18;;;6240:61;6318:18;;14740:63:0;;;;;;;;;14167:1;14878:7;:18;17966:9;17958:50:::1;;;::::0;-1:-1:-1;;;17958:50:0;;6549:2:1;17958:50:0::1;::::0;::::1;6531:21:1::0;6588:2;6568:18;;;6561:30;6627;6607:18;;;6600:58;6675:18;;17958:50:0::1;6347:352:1::0;17958:50:0::1;18015:20;:8;12058:19:::0;;12076:1;12058:19;;;11971:123;18015:20:::1;18041:14;18058:18;:8;11944:14:::0;;11853:112;18058:18:::1;18111:131;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;18111:131:0;;::::1;;::::0;;::::1;::::0;;;;;;;;;18185:10:::1;18111:131:::0;;;;;;-1:-1:-1;18111:131:0;;;;;;;;;;;;18085:22;;;:14:::1;:22:::0;;;;;;;:157;;;;;;::::1;::::0;::::1;::::0;;;;::::1;-1:-1:-1::0;;;;;;18085:157:0;;::::1;;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;;::::1;::::0;;;::::1;;::::0;;;;;::::1;::::0;;::::1;::::0;;;;18249:69;;-1:-1:-1;;;18249:69:0;;18041:35;;-1:-1:-1;18111:131:0;;18249:33:::1;::::0;:69:::1;::::0;18185:10;18303:4:::1;::::0;18162:7;;18249:69:::1;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;18388:7;18369:11;-1:-1:-1::0;;;;;18330:120:0::1;18355:6;18330:120;18403:10;18429:1;18439:5;18330:120;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;14124:1:0;15051:7;:22;-1:-1:-1;;17829:626:0:o;18459:1113::-;18592:1;18584:5;:9;18576:51;;;;-1:-1:-1;;;18576:51:0;;7286:2:1;18576:51:0;;;7268:21:1;7325:2;7305:18;;;7298:30;7364:31;7344:18;;;7337:59;7413:18;;18576:51:0;7084:353:1;18576:51:0;18637:26;18652:10;18637:14;:26::i;:::-;18784:28;;-1:-1:-1;;;18784:28:0;;;;;7588:25:1;;;18691:10:0;;18741;;18691;;-1:-1:-1;;;;;18784:19:0;;;;;7561:18:1;;18784:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;18784:38:0;;18763:118;;;;-1:-1:-1;;;18763:118:0;;8082:2:1;18763:118:0;;;8064:21:1;8121:2;8101:18;;;8094:30;8160:34;8140:18;;;8133:62;-1:-1:-1;;;8211:18:1;;;8204:31;8252:19;;18763:118:0;7880:397:1;18763:118:0;18891:56;;-1:-1:-1;;;18891:56:0;;-1:-1:-1;;;;;18891:24:0;;;;;:56;;18916:6;;18932:4;;18939:7;;18891:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;18976:17:0;;;18957:16;18976:17;;;:5;:17;;;;;;;;:26;;;;;;;;18957:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:16;;:45;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;19016:7:0;;18957:45;;-1:-1:-1;19016:7:0;:12;19012:358;;19044:50;19056:6;19064:7;19073:10;19085:5;19092:1;19044:11;:50::i;:::-;19012:358;;;19148:15;19133:4;:11;;;:30;;;;;;;;:::i;:::-;;19125:59;;;;-1:-1:-1;;;19125:59:0;;8484:2:1;19125:59:0;;;8466:21:1;8523:2;8503:18;;;8496:30;-1:-1:-1;;;8542:18:1;;;8535:46;8598:18;;19125:59:0;8282:340:1;19125:59:0;-1:-1:-1;;;;;19198:17:0;;;;;;;19234:15;19198:17;;;;;;;;:26;;;;;;;;;:33;;;:51;;-1:-1:-1;;19198:51:0;;;;;19263:32;;;:40;;;19317:33;:42;;-1:-1:-1;;;;;;19317:42:0;;;;;;;;;;19012:358;19440:7;;19384:181;;;-1:-1:-1;;;;;8941:32:1;;;8923:51;;9005:2;8990:18;;8983:34;;;;9033:18;;;9026:34;;;8961:3;9091:2;9076:18;;9069:31;;;9137:1;9116:19;;;9109:30;-1:-1:-1;;;9170:3:1;9155:19;;9148:34;19540:15:0;9249:3:1;9234:19;;9227:35;19384:181:0;;;;19461:7;;19384:181;;9214:3:1;9199:19;19384:181:0;;;;;;;18566:1006;;;18459:1113;;;:::o;2310:101::-;1750:6;;-1:-1:-1;;;;;1750:6:0;635:10;1890:23;1882:68;;;;-1:-1:-1;;;1882:68:0;;;;;;;:::i;:::-;2374:30:::1;2401:1;2374:18;:30::i;:::-;2310:101::o:0;17727:98::-;1750:6;;-1:-1:-1;;;;;1750:6:0;635:10;1890:23;1882:68;;;;-1:-1:-1;;;1882:68:0;;;;;;;:::i;:::-;17795:8:::1;:27:::0;;-1:-1:-1;;;;;;17795:27:0::1;-1:-1:-1::0;;;;;17795:27:0;;;::::1;::::0;;;::::1;::::0;;17727:98::o;19576:524::-;14167:1;14748:7;;:19;14740:63;;;;-1:-1:-1;;;14740:63:0;;6189:2:1;14740:63:0;;;6171:21:1;6228:2;6208:18;;;6201:30;6267:33;6247:18;;;6240:61;6318:18;;14740:63:0;5987:355:1;14740:63:0;14167:1;14878:7;:18;;;19700:22;;;:14:::1;:22;::::0;;;;:28:::1;::::0;::::1;::::0;19749:30;::::1;::::0;19793:9:::1;:18:::0;::::1;19785:95;;;::::0;;-1:-1:-1;;;19785:95:0;;9836:2:1;19785:95:0::1;::::0;::::1;9818:21:1::0;9855:18;;;9848:30;;;;9914:34;9894:18;;;9887:62;9985:34;9965:18;;;9958:62;10037:19;;19785:95:0::1;9634:428:1::0;19785:95:0::1;19887:22;::::0;;;:14:::1;:22;::::0;;;;;:29:::1;;::::0;:49;;-1:-1:-1;;;;;19887:29:0;;::::1;::::0;19926:9:::1;19887:49:::0;::::1;;;::::0;19926:9;;19887:49;:22;:49;19926:9;19887:29;:49;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;19942:69:0::1;::::0;-1:-1:-1;;;19942:69:0;;-1:-1:-1;;;;;19942:33:0;::::1;::::0;::::1;::::0;:69:::1;::::0;19984:4:::1;::::0;19991:10:::1;::::0;20003:7;;19942:69:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;20017:22:0::1;::::0;;;:14:::1;:22;::::0;;;;:28:::1;;:50:::0;;-1:-1:-1;;;;;;20017:50:0::1;20056:10;20017:50;::::0;;-1:-1:-1;20073:22:0::1;:10;12058:19:::0;;12076:1;12058:19;;;11971:123;20073:22:::1;-1:-1:-1::0;;14124:1:0;15051:7;:22;-1:-1:-1;;19576:524:0:o;21581:1296::-;21706:26;21721:10;21706:14;:26::i;:::-;-1:-1:-1;;;;;21850:17:0;;;21743:14;21850:17;;;:5;:17;;;;;;;;:26;;;;;;;;21831:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21760:10;;21810;;21743:14;21831:45;21850:26;;21831:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;21895:7:0;;21831:45;;-1:-1:-1;21895:7:0;:12;21887:44;;;;-1:-1:-1;;;21887:44:0;;10269:2:1;21887:44:0;;;10251:21:1;10308:2;10288:18;;;10281:30;-1:-1:-1;;;10327:18:1;;;10320:49;10386:18;;21887:44:0;10067:343:1;21887:44:0;21964:15;21949:4;:11;;;:30;;;;;;;;:::i;:::-;;21941:67;;;;-1:-1:-1;;;21941:67:0;;10617:2:1;21941:67:0;;;10599:21:1;10656:2;10636:18;;;10629:30;10695:26;10675:18;;;10668:54;10739:18;;21941:67:0;10415:348:1;21941:67:0;22036:11;;;;-1:-1:-1;;;;;22066:20:0;;22058:48;;;;-1:-1:-1;;;22058:48:0;;10970:2:1;22058:48:0;;;10952:21:1;11009:2;10989:18;;;10982:30;-1:-1:-1;;;11028:18:1;;;11021:45;11083:18;;22058:48:0;10768:339:1;22058:48:0;22137:4;:14;;;22124:9;:27;;22116:70;;;;-1:-1:-1;;;22116:70:0;;11314:2:1;22116:70:0;;;11296:21:1;11353:2;11333:18;;;11326:30;11392:32;11372:18;;;11365:60;11442:18;;22116:70:0;11112:354:1;22116:70:0;22212:14;;22197:11;;22242:3;;22212:26;;22229:9;;-1:-1:-1;;;22212:14:0;;;;:26;:::i;:::-;22211:34;;;;:::i;:::-;22197:48;-1:-1:-1;22255:20:0;22278:15;22197:48;22278:9;:15;:::i;:::-;22303:8;;:49;;-1:-1:-1;;;22303:49:0;;22255:38;;-1:-1:-1;;;;;;22303:8:0;;:21;;:49;;22325:6;;22341:4;;22348:3;;22303:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22362:8:0;;:51;;-1:-1:-1;;;22362:51:0;;-1:-1:-1;;;;;22362:8:0;;;;:21;;:51;;22384:6;;22392;;22400:12;;22362:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;22423:60:0;;-1:-1:-1;;;22423:60:0;;-1:-1:-1;;;;;22423:28:0;;;;;:60;;22460:4;;22467:6;;22475:7;;22423:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;22494:17:0;;;;;;;:5;:17;;;;;;;;:26;;;;;;;;;:33;;;:42;;;;;-1:-1:-1;;;;;;22494:42:0;;;;;;;;22546:33;;;;:53;;-1:-1:-1;;22546:53:0;22582:17;22546:53;;;22646:7;;22732:14;;;;;22760;;22615:255;;12496:25:1;;;12537:18;;;12530:60;;;;12606:18;;;12599:34;;;;-1:-1:-1;;;22760:14:0;;;;12664:2:1;12649:18;;12642:45;12703:19;;;12696:35;;;12768:3;12577;12747:19;;12740:32;;;12809:1;12788:19;;;12781:30;-1:-1:-1;;;22760:14:0;12827:19:1;;12820:35;22845:15:0;12922:3:1;12907:19;;12900:35;22494:42:0;22615:255;;;22494:26;;22615:255;;12887:3:1;12872:19;22615:255:0;;;;;;;21696:1181;;;;;;21581:1296;;;:::o;2560:198::-;1750:6;;-1:-1:-1;;;;;1750:6:0;635:10;1890:23;1882:68;;;;-1:-1:-1;;;1882:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2648:22:0;::::1;2640:73;;;::::0;-1:-1:-1;;;2640:73:0;;13148:2:1;2640:73:0::1;::::0;::::1;13130:21:1::0;13187:2;13167:18;;;13160:30;13226:34;13206:18;;;13199:62;-1:-1:-1;;;13277:18:1;;;13270:36;13323:19;;2640:73:0::1;12946:402:1::0;2640:73:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2560:198:::0;:::o;22883:389::-;23386:18;;23423:8;;22951:105;;;;-1:-1:-1;;;22951:105:0;;13555:2:1;22951:105:0;;;13537:21:1;13594:2;13574:18;;;13567:30;13633:34;13613:18;;;13606:62;-1:-1:-1;;;13684:18:1;;;13677:34;13728:19;;22951:105:0;13353:400:1;22951:105:0;23139:47;;-1:-1:-1;;;23139:47:0;;-1:-1:-1;;;23139:47:0;;;2025:52:1;23097:10:0;;-1:-1:-1;;;;;23139:29:0;;;;;1998:18:1;;23139:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23118:147;;;;-1:-1:-1;;;23118:147:0;;13960:2:1;23118:147:0;;;13942:21:1;13999:2;13979:18;;;13972:30;14038:34;14018:18;;;14011:62;-1:-1:-1;;;14089:18:1;;;14082:51;14150:19;;23118:147:0;13758:417:1;23118:147:0;22941:331;22883:389;:::o;23436:634::-;23649:163;;;23683:15;23649:163;;;;14421:19:1;;;;-1:-1:-1;;14528:2:1;14524:15;;;14520:24;;14506:12;;;14499:46;14561:12;;;14554:28;;;14616:15;;;14612:24;14598:12;;;14591:46;14653:13;;;;14646:29;;;23649:163:0;;;;;;;;;;14691:13:1;;;23649:163:0;;;23626:196;;;;;;;23862:201;;;;;;;;;-1:-1:-1;;;;;23862:201:0;;;;;;;;;;;;;;;;;;;;;;;;;14691:13:1;23862:201:0;;24037:15;23862:201;;-1:-1:-1;;;;;23833:17:0;;;;;;;:5;:17;;;;;;;;:26;;;;;;;;;:230;;;;;;;;;;;;;-1:-1:-1;;;;;;23833:230:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23833:230:0;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;;;;23436:634:0:o;2912:187::-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:481:1:-;96:5;90:12;85:3;78:25;149:4;142:5;138:16;132:23;191:1;187;182:3;178:11;174:19;243:2;229:12;225:21;218:4;213:3;209:14;202:45;296:4;289:5;285:16;279:23;272:4;267:3;263:14;256:47;364:2;356:4;349:5;345:16;339:23;335:32;328:4;323:3;319:14;312:56;429:2;421:4;414:5;410:16;404:23;400:32;393:4;388:3;384:14;377:56;;;482:4;475:5;471:16;465:23;458:4;453:3;449:14;442:47;14:481;;:::o;500:710::-;725:2;777:21;;;847:13;;750:18;;;869:22;;;696:4;;725:2;948:15;;;;922:2;907:18;;;696:4;991:193;1005:6;1002:1;999:13;991:193;;;1054:48;1098:3;1089:6;1083:13;1054:48;:::i;:::-;1159:15;;;;1131:4;1122:14;;;;;1027:1;1020:9;991:193;;;-1:-1:-1;1201:3:1;;500:710;-1:-1:-1;;;;;;500:710:1:o;1437:180::-;1496:6;1549:2;1537:9;1528:7;1524:23;1520:32;1517:52;;;1565:1;1562;1555:12;1517:52;-1:-1:-1;1588:23:1;;1437:180;-1:-1:-1;1437:180:1:o;1622:254::-;1810:3;1795:19;;1823:47;1799:9;1852:6;1823:47;:::i;:::-;1622:254;;;;:::o;2088:131::-;-1:-1:-1;;;;;2163:31:1;;2153:42;;2143:70;;2209:1;2206;2199:12;2224:456;2301:6;2309;2317;2370:2;2358:9;2349:7;2345:23;2341:32;2338:52;;;2386:1;2383;2376:12;2338:52;2425:9;2412:23;2444:31;2469:5;2444:31;:::i;:::-;2494:5;-1:-1:-1;2546:2:1;2531:18;;2518:32;;-1:-1:-1;2602:2:1;2587:18;;2574:32;2615:33;2574:32;2615:33;:::i;:::-;2667:7;2657:17;;;2224:456;;;;;:::o;2938:383::-;3015:6;3023;3031;3084:2;3072:9;3063:7;3059:23;3055:32;3052:52;;;3100:1;3097;3090:12;3052:52;3139:9;3126:23;3158:31;3183:5;3158:31;:::i;:::-;3208:5;3260:2;3245:18;;3232:32;;-1:-1:-1;3311:2:1;3296:18;;;3283:32;;2938:383;-1:-1:-1;;;2938:383:1:o;3326:315::-;3394:6;3402;3455:2;3443:9;3434:7;3430:23;3426:32;3423:52;;;3471:1;3468;3461:12;3423:52;3510:9;3497:23;3529:31;3554:5;3529:31;:::i;:::-;3579:5;3631:2;3616:18;;;;3603:32;;-1:-1:-1;;;3326:315:1:o;3646:127::-;3707:10;3702:3;3698:20;3695:1;3688:31;3738:4;3735:1;3728:15;3762:4;3759:1;3752:15;3778:756;4077:25;;;-1:-1:-1;;;;;4176:15:1;;;4171:2;4156:18;;4149:43;4228:15;;4223:2;4208:18;;4201:43;4275:2;4260:18;;4253:34;;;4318:3;4303:19;;4296:35;;;4064:3;4049:19;;4361:1;4350:13;;4340:144;;4406:10;4401:3;4397:20;4394:1;4387:31;4441:4;4438:1;4431:15;4469:4;4466:1;4459:15;4340:144;4521:6;4515:3;4504:9;4500:19;4493:35;3778:756;;;;;;;;;:::o;4936:247::-;4995:6;5048:2;5036:9;5027:7;5023:23;5019:32;5016:52;;;5064:1;5061;5054:12;5016:52;5103:9;5090:23;5122:31;5147:5;5122:31;:::i;:::-;5172:5;4936:247;-1:-1:-1;;;4936:247:1:o;5188:127::-;5249:10;5244:3;5240:20;5237:1;5230:31;5280:4;5277:1;5270:15;5304:4;5301:1;5294:15;5320:125;5360:4;5388:1;5385;5382:8;5379:34;;;5393:18;;:::i;:::-;-1:-1:-1;5430:9:1;;5320:125::o;5450:127::-;5511:10;5506:3;5502:20;5499:1;5492:31;5542:4;5539:1;5532:15;5566:4;5563:1;5556:15;5582:128;5622:3;5653:1;5649:6;5646:1;5643:13;5640:39;;;5659:18;;:::i;:::-;-1:-1:-1;5695:9:1;;5582:128::o;5715:127::-;5776:10;5771:3;5767:20;5764:1;5757:31;5807:4;5804:1;5797:15;5831:4;5828:1;5821:15;5847:135;5886:3;5907:17;;;5904:43;;5927:18;;:::i;:::-;-1:-1:-1;5974:1:1;5963:13;;5847:135::o;6704:375::-;-1:-1:-1;;;;;6962:15:1;;;6944:34;;7014:15;;;;7009:2;6994:18;;6987:43;7061:2;7046:18;;7039:34;;;;6894:2;6879:18;;6704:375::o;7624:251::-;7694:6;7747:2;7735:9;7726:7;7722:23;7718:32;7715:52;;;7763:1;7760;7753:12;7715:52;7795:9;7789:16;7814:31;7839:5;7814:31;:::i;9273:356::-;9475:2;9457:21;;;9494:18;;;9487:30;9553:34;9548:2;9533:18;;9526:62;9620:2;9605:18;;9273:356::o;11471:168::-;11511:7;11577:1;11573;11569:6;11565:14;11562:1;11559:21;11554:1;11547:9;11540:17;11536:45;11533:71;;;11584:18;;:::i;:::-;-1:-1:-1;11624:9:1;;11471:168::o;11644:217::-;11684:1;11710;11700:132;;11754:10;11749:3;11745:20;11742:1;11735:31;11789:4;11786:1;11779:15;11817:4;11814:1;11807:15;11700:132;-1:-1:-1;11846:9:1;;11644:217::o;11866:277::-;11933:6;11986:2;11974:9;11965:7;11961:23;11957:32;11954:52;;;12002:1;11999;11992:12;11954:52;12034:9;12028:16;12087:5;12080:13;12073:21;12066:5;12063:32;12053:60;;12109:1;12106;12099:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1393800",
								"executionCost": "49401",
								"totalCost": "1443201"
							},
							"external": {
								"ERC721_Interface()": "248",
								"antaFeePercent()": "2352",
								"bnbFeePercent()": "2375",
								"buyItemBySQF(address,uint256,uint256)": "infinite",
								"createMarketItem(address,uint256,uint256)": "infinite",
								"createMarketSale(address,uint256)": "infinite",
								"fetchMarketItem(uint256)": "13713",
								"fetchMarketItems()": "infinite",
								"fetchMyNFTs()": "infinite",
								"getMarketItem(uint256)": "13689",
								"itemOffers(address,uint256,address)": "infinite",
								"items(address,uint256)": "13499",
								"owner()": "2398",
								"renounceOwnership()": "28140",
								"sellItem(address,uint256,uint256)": "infinite",
								"setSQFToken(address)": "26794",
								"sqfToken()": "2383",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_createItem(address,uint256,address,uint256,uint256)": "infinite",
								"_requireERC721(address)": "infinite",
								"isContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14124,
									"end": 14125,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14229,
									"end": 14236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14229,
									"end": 14251,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1595,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 635,
									"end": 645,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1563,
									"end": 1581,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1563,
									"end": 1595,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1563,
									"end": 1595,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1563,
									"end": 1595,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17004,
									"end": 24072,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204517e964c0383902366f7dacfc7ef652924828e1a11c2459852f7c16b56440e264736f6c634300080d0033",
									".code": [
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "B7A60C7E"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "B7A60C7E"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "C23B139E"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "C7BE7A49"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "F01B52DC"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "85A8B36C"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "92BF77DD"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "2B4C32BE"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "2B4C32BE"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "49739678"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "58EB2DF5"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "5C80A435"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "68915327"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "F08EFE0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "15B81DC3"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "202E3740"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "2A45B250"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17004,
											"end": 24072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1393,
											"end": 1425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1426,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16146,
											"end": 16168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1215,
											"end": 1432,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2043,
											"end": 2076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2076,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2043,
											"end": 2076,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15771,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1881,
											"end": 2083,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2859,
											"end": 2884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16045,
											"end": 16140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2685,
											"end": 2933,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 15909,
											"end": 15966,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4711,
											"end": 4715,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4699,
											"end": 4716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4699,
											"end": 4716,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4699,
											"end": 4716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4717,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4681,
											"end": 4717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4669,
											"end": 4671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4654,
											"end": 4672,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16175,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4539,
											"end": 4723,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1678,
											"end": 1763,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16207,
											"end": 16234,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20310,
											"end": 20329,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20337,
											"end": 20351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20354,
											"end": 20372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20354,
											"end": 20362,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20354,
											"end": 20372,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 20354,
											"end": 20372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20337,
											"end": 20372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20337,
											"end": 20372,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20378,
											"end": 20398,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20422,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20422,
											"end": 20432,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20422,
											"end": 20442,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 20422,
											"end": 20442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20409,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 20401,
											"end": 20442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20378,
											"end": 20442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20378,
											"end": 20442,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20448,
											"end": 20465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20476,
											"end": 20501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20521,
											"end": 20536,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20504,
											"end": 20537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20476,
											"end": 20537,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20548,
											"end": 20554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20564,
											"end": 20573,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20560,
											"end": 20561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20560,
											"end": 20573,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20631,
											"end": 20632,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20592,
											"end": 20606,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20631,
											"end": 20632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20607,
											"end": 20612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20607,
											"end": 20608,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20611,
											"end": 20612,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20607,
											"end": 20612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20607,
											"end": 20612,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20607,
											"end": 20612,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 20607,
											"end": 20612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20592,
											"end": 20613,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20619,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20592,
											"end": 20619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20592,
											"end": 20619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20592,
											"end": 20633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20588,
											"end": 20837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20645,
											"end": 20659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20662,
											"end": 20676,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20645,
											"end": 20659,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20677,
											"end": 20682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20677,
											"end": 20678,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20681,
											"end": 20682,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20677,
											"end": 20682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20677,
											"end": 20682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20677,
											"end": 20682,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 20677,
											"end": 20682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20683,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20690,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20747,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20733,
											"end": 20758,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20662,
											"end": 20690,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20768,
											"end": 20773,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20773,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20786,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20768,
											"end": 20801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 20827,
											"end": 20828,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20837,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 20588,
											"end": 20837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20575,
											"end": 20578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 20543,
											"end": 20843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20859,
											"end": 20864,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20261,
											"end": 20869,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 20873,
											"end": 21576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20917,
											"end": 20936,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20944,
											"end": 20963,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20966,
											"end": 20984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20966,
											"end": 20974,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20966,
											"end": 20984,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 20966,
											"end": 20984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20944,
											"end": 20984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21014,
											"end": 21031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21047,
											"end": 21053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21063,
											"end": 21077,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21059,
											"end": 21060,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21059,
											"end": 21077,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21127,
											"end": 21137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21110,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21111,
											"end": 21112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21115,
											"end": 21116,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21111,
											"end": 21116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21096,
											"end": 21117,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21123,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21096,
											"end": 21123,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21123,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21096,
											"end": 21123,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21096,
											"end": 21137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21092,
											"end": 21172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21092,
											"end": 21172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21162,
											"end": 21163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21149,
											"end": 21163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21092,
											"end": 21172,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 21092,
											"end": 21172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21082,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21042,
											"end": 21178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21184,
											"end": 21209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21229,
											"end": 21238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21184,
											"end": 21239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21184,
											"end": 21239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21250,
											"end": 21256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21266,
											"end": 21280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21262,
											"end": 21263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21262,
											"end": 21280,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21330,
											"end": 21340,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21313,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21314,
											"end": 21319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 21314,
											"end": 21315,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21318,
											"end": 21319,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21314,
											"end": 21319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21314,
											"end": 21319,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21314,
											"end": 21319,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 21314,
											"end": 21319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21299,
											"end": 21320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21326,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21299,
											"end": 21326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21299,
											"end": 21326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21299,
											"end": 21340,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21295,
											"end": 21544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21295,
											"end": 21544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21352,
											"end": 21366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21369,
											"end": 21383,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21352,
											"end": 21366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21384,
											"end": 21389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21384,
											"end": 21385,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21388,
											"end": 21389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21384,
											"end": 21389,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21384,
											"end": 21389,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21384,
											"end": 21389,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21384,
											"end": 21389,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21390,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21397,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21454,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21440,
											"end": 21465,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21397,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21475,
											"end": 21480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21493,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21481,
											"end": 21493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21475,
											"end": 21508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21534,
											"end": 21535,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21518,
											"end": 21535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21342,
											"end": 21544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21342,
											"end": 21544,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21295,
											"end": 21544,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21295,
											"end": 21544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21282,
											"end": 21285,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 21245,
											"end": 21550,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20163,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20163,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20163,
											"end": 20180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20163,
											"end": 20180,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 20163,
											"end": 20180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20188,
											"end": 20210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20227,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20213,
											"end": 20235,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20188,
											"end": 20235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20104,
											"end": 20257,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14748,
											"end": 14755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14748,
											"end": 14767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6171,
											"end": 6192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6230,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14878,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17966,
											"end": 17975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6531,
											"end": 6552,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6588,
											"end": 6590,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6586,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6561,
											"end": 6591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6657,
											"name": "PUSH",
											"source": 1,
											"value": "5072696365206D757374206265206174206C6561737420312077656900000000"
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6675,
											"end": 6693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6347,
											"end": 6699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17958,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18015,
											"end": 18035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 18015,
											"end": 18023,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12077,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 12094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18015,
											"end": 18035,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 18015,
											"end": 18035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18058,
											"end": 18076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18058,
											"end": 18066,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11944,
											"end": 11958,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11853,
											"end": 11965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18058,
											"end": 18076,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 18058,
											"end": 18076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18195,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18099,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18085,
											"end": 18242,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18076,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18041,
											"end": 18076,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18111,
											"end": 18242,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18282,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 18249,
											"end": 18282,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18185,
											"end": 18195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18307,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18303,
											"end": 18307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18162,
											"end": 18169,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18162,
											"end": 18169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18249,
											"end": 18318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18388,
											"end": 18395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18369,
											"end": 18380,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18355,
											"end": 18361,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "PUSH",
											"source": 0,
											"value": "2AD024D53A0DC50C130967F8D4941927EE087EA31394CEBB2B9599D3706C9C00"
										},
										{
											"begin": 18403,
											"end": 18413,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18429,
											"end": 18430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18439,
											"end": 18444,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18330,
											"end": 18450,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14124,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15051,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15073,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17829,
											"end": 18455,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18592,
											"end": 18593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18584,
											"end": 18589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18584,
											"end": 18593,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7327,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 7305,
											"end": 7323,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7305,
											"end": 7323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7305,
											"end": 7323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "50726963652073686F756C6420626520626967676572207468616E2030000000"
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7431,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7413,
											"end": 7431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7084,
											"end": 7437,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18576,
											"end": 18627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18637,
											"end": 18663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18652,
											"end": 18662,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18637,
											"end": 18651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 18637,
											"end": 18663,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18637,
											"end": 18663,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 18637,
											"end": 18663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7588,
											"end": 7613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7613,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7588,
											"end": 7613,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18691,
											"end": 18701,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18691,
											"end": 18701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18741,
											"end": 18751,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18741,
											"end": 18751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18691,
											"end": 18701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18691,
											"end": 18701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18784,
											"end": 18803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18803,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 18784,
											"end": 18803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7561,
											"end": 7579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 18784,
											"end": 18812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18784,
											"end": 18822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18784,
											"end": 18822,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8082,
											"end": 8084,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8064,
											"end": 8085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8121,
											"end": 8123,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8101,
											"end": 8119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8094,
											"end": 8124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8160,
											"end": 8194,
											"name": "PUSH",
											"source": 1,
											"value": "5468652073656C6C6572206973206E6F206C6F6E67657220746865206F776E65"
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8195,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8204,
											"end": 8235,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8271,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8252,
											"end": 8271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7880,
											"end": 8277,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 18763,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18891,
											"end": 18915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18915,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 18891,
											"end": 18915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18916,
											"end": 18922,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18916,
											"end": 18922,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18932,
											"end": 18936,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18932,
											"end": 18936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18939,
											"end": 18946,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18939,
											"end": 18946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18891,
											"end": 18947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 18973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 18993,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 18973,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 18973,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19016,
											"end": 19023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19016,
											"end": 19023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 19002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19016,
											"end": 19023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19016,
											"end": 19028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19044,
											"end": 19094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19056,
											"end": 19062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19064,
											"end": 19071,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19073,
											"end": 19083,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19090,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19092,
											"end": 19093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19044,
											"end": 19055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 19044,
											"end": 19094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19044,
											"end": 19094,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19044,
											"end": 19094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19148,
											"end": 19163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19133,
											"end": 19137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19144,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 19133,
											"end": 19144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19133,
											"end": 19163,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8484,
											"end": 8486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8466,
											"end": 8487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8523,
											"end": 8525,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8503,
											"end": 8521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8496,
											"end": 8526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4173736574206973206C697374696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8542,
											"end": 8560,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8616,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8598,
											"end": 8616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8282,
											"end": 8622,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 19125,
											"end": 19184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19234,
											"end": 19249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19231,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19198,
											"end": 19231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19198,
											"end": 19249,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19295,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19263,
											"end": 19295,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19295,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19263,
											"end": 19303,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19317,
											"end": 19359,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 19012,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8941,
											"end": 8973,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8941,
											"end": 8973,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8923,
											"end": 8974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8990,
											"end": 9008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9017,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 9017,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9033,
											"end": 9051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9060,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 9091,
											"end": 9093,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9069,
											"end": 9100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9116,
											"end": 9135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9109,
											"end": 9139,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "212721"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9170,
											"end": 9173,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 9155,
											"end": 9174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9148,
											"end": 9182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19540,
											"end": 19555,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9252,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9234,
											"end": 9253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9234,
											"end": 9253,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19461,
											"end": 19468,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19461,
											"end": 19468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "PUSH",
											"source": 0,
											"value": "FF2412BD5C66E6AD5153E35EE902EE32BB4393211A4D0662428B9B481929A7B9"
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9214,
											"end": 9217,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9199,
											"end": 9218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19384,
											"end": 19565,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18566,
											"end": 19572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18459,
											"end": 19572,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 635,
											"end": 645,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1913,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 2374,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2310,
											"end": 2411,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 635,
											"end": 645,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1913,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17803,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17795,
											"end": 17822,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17727,
											"end": 17825,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14748,
											"end": 14755,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14748,
											"end": 14755,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14748,
											"end": 14767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6189,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6171,
											"end": 6192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6228,
											"end": 6230,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6300,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6301,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6318,
											"end": 6336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5987,
											"end": 6342,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 14740,
											"end": 14803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14167,
											"end": 14168,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14878,
											"end": 14885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14878,
											"end": 14896,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19714,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19722,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19728,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19700,
											"end": 19728,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19700,
											"end": 19728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19749,
											"end": 19779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19749,
											"end": 19779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19749,
											"end": 19779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19802,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19793,
											"end": 19811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9836,
											"end": 9838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9818,
											"end": 9839,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9873,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9855,
											"end": 9873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9855,
											"end": 9873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9914,
											"end": 9948,
											"name": "PUSH",
											"source": 1,
											"value": "506C65617365207375626D6974207468652061736B696E672070726963652069"
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9894,
											"end": 9912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9887,
											"end": 9949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9985,
											"end": 10019,
											"name": "PUSH",
											"source": 1,
											"value": "6E206F7264657220746F20636F6D706C65746520746865207075726368617365"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10020,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10037,
											"end": 10056,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10037,
											"end": 10056,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9634,
											"end": 10062,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 19785,
											"end": 19880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19901,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19935,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19926,
											"end": 19935,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19916,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 19887,
											"end": 19936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19942,
											"end": 19975,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 19975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 19975,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 19942,
											"end": 19975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 19988,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19984,
											"end": 19988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 20001,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 20001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20010,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20003,
											"end": 20010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 19942,
											"end": 20011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20031,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20017,
											"end": 20045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20067,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20067,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 20017,
											"end": 20067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20056,
											"end": 20066,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20067,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20067,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20073,
											"end": 20095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 20073,
											"end": 20083,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12076,
											"end": 12077,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12077,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11971,
											"end": 12094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20073,
											"end": 20095,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 20073,
											"end": 20095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14124,
											"end": 14125,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15051,
											"end": 15058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15051,
											"end": 15073,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19576,
											"end": 20100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21706,
											"end": 21732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 21721,
											"end": 21731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21706,
											"end": 21720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 21706,
											"end": 21732,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21706,
											"end": 21732,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 21706,
											"end": 21732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21855,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21867,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21760,
											"end": 21770,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21760,
											"end": 21770,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21810,
											"end": 21820,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 21810,
											"end": 21820,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 21743,
											"end": 21757,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21850,
											"end": 21876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21895,
											"end": 21902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21895,
											"end": 21902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21831,
											"end": 21876,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21895,
											"end": 21902,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21895,
											"end": 21907,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10269,
											"end": 10271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10251,
											"end": 10272,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10281,
											"end": 10311,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105CDCD95D081B9BDD081C1D589B1A5CDA1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10327,
											"end": 10345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10386,
											"end": 10404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10067,
											"end": 10410,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 21887,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 21979,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21949,
											"end": 21953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21960,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 21949,
											"end": 21960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21979,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10617,
											"end": 10619,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10599,
											"end": 10620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10656,
											"end": 10658,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10629,
											"end": 10659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10721,
											"name": "PUSH",
											"source": 1,
											"value": "4173736574206973206E6F74206C69737420746F206275790000000000000000"
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10675,
											"end": 10693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10722,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10739,
											"end": 10757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10415,
											"end": 10763,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 21941,
											"end": 22008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22036,
											"end": 22047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22036,
											"end": 22047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22036,
											"end": 22047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22036,
											"end": 22047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22066,
											"end": 22086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22066,
											"end": 22086,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10970,
											"end": 10972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10952,
											"end": 10973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11009,
											"end": 11011,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 10989,
											"end": 11007,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10989,
											"end": 11007,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10989,
											"end": 11007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10982,
											"end": 11012,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11028,
											"end": 11046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11083,
											"end": 11101,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11083,
											"end": 11101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10768,
											"end": 11107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 22058,
											"end": 22106,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22137,
											"end": 22141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22137,
											"end": 22151,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22137,
											"end": 22151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22137,
											"end": 22151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22151,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22124,
											"end": 22151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11314,
											"end": 11316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11353,
											"end": 11355,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11392,
											"end": 11424,
											"name": "PUSH",
											"source": 1,
											"value": "7072696365206E65656420657175616C206C697374696E672070726963650000"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11442,
											"end": 11460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 11112,
											"end": 11466,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 22116,
											"end": 22186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22212,
											"end": 22226,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22212,
											"end": 22226,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22197,
											"end": 22208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22242,
											"end": 22245,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22242,
											"end": 22245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22238,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22229,
											"end": 22238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22212,
											"end": 22226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22212,
											"end": 22226,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22212,
											"end": 22226,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22212,
											"end": 22226,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 22212,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 22211,
											"end": 22245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22255,
											"end": 22275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22278,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 22197,
											"end": 22245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22287,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22278,
											"end": 22293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 22278,
											"end": 22293,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22278,
											"end": 22293,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 22278,
											"end": 22293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22311,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22303,
											"end": 22311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22293,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22303,
											"end": 22311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22324,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22303,
											"end": 22324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22331,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 22325,
											"end": 22331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22341,
											"end": 22345,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22341,
											"end": 22345,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22348,
											"end": 22351,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22348,
											"end": 22351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 22303,
											"end": 22352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22362,
											"end": 22370,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22362,
											"end": 22370,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22362,
											"end": 22370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22370,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22370,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22370,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22383,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22362,
											"end": 22383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22390,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 22384,
											"end": 22390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22392,
											"end": 22398,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22392,
											"end": 22398,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22400,
											"end": 22412,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22400,
											"end": 22412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 22362,
											"end": 22413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22423,
											"end": 22451,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22451,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 22423,
											"end": 22451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22460,
											"end": 22464,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22460,
											"end": 22464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22467,
											"end": 22473,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22467,
											"end": 22473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22475,
											"end": 22482,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 22475,
											"end": 22482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 22423,
											"end": 22483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22499,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22511,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22579,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22546,
											"end": 22579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22579,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22599,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 22546,
											"end": 22599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22582,
											"end": 22599,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22546,
											"end": 22599,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22546,
											"end": 22599,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22646,
											"end": 22653,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 22646,
											"end": 22653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22746,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22732,
											"end": 22746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22746,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22732,
											"end": 22746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12537,
											"end": 12555,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12590,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12590,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 12530,
											"end": 12590,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12624,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12624,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 12633,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 12633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 12633,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12599,
											"end": 12633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12664,
											"end": 12666,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12649,
											"end": 12667,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12649,
											"end": 12667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12642,
											"end": 12687,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12703,
											"end": 12722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12731,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12768,
											"end": 12771,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12577,
											"end": 12580,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 12747,
											"end": 12766,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12747,
											"end": 12766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12740,
											"end": 12772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12740,
											"end": 12772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12740,
											"end": 12772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12809,
											"end": 12810,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12788,
											"end": 12807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12788,
											"end": 12807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12788,
											"end": 12807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12781,
											"end": 12811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "414E5441"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22760,
											"end": 22774,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12827,
											"end": 12846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12827,
											"end": 12846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12820,
											"end": 12855,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22845,
											"end": 22860,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 12922,
											"end": 12925,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 12907,
											"end": 12926,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12907,
											"end": 12926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12935,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22494,
											"end": 22536,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 22494,
											"end": 22520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "PUSH",
											"source": 0,
											"value": "30247E11BBB597DFEFD2A3124026F1EF8987A4D6BA46E3629F80BAC1B0C9FAEE"
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12887,
											"end": 12890,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 12872,
											"end": 12891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22615,
											"end": 22870,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21696,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21581,
											"end": 22877,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 635,
											"end": 645,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1913,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 1882,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2648,
											"end": 2670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13148,
											"end": 13150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13151,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13187,
											"end": 13189,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13167,
											"end": 13185,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13167,
											"end": 13185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13167,
											"end": 13185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13160,
											"end": 13190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13260,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13199,
											"end": 13261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13277,
											"end": 13295,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13277,
											"end": 13295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13270,
											"end": 13306,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13323,
											"end": 13342,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13323,
											"end": 13342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 12946,
											"end": 13348,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2640,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2742,
											"end": 2750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 2723,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2758,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22883,
											"end": 23272,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 22883,
											"end": 23272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23386,
											"end": 23404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23386,
											"end": 23404,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 23423,
											"end": 23431,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23423,
											"end": 23431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13537,
											"end": 13558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13594,
											"end": 13596,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13567,
											"end": 13597,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13633,
											"end": 13667,
											"name": "PUSH",
											"source": 1,
											"value": "546865204E465420416464726573732073686F756C64206265206120636F6E74"
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13613,
											"end": 13631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13606,
											"end": 13668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13684,
											"end": 13702,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13684,
											"end": 13702,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13684,
											"end": 13702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13677,
											"end": 13711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13747,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13728,
											"end": 13747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13353,
											"end": 13753,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 22951,
											"end": 23056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80AC58CD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23097,
											"end": 23107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23139,
											"end": 23168,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23168,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 23139,
											"end": 23168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 23139,
											"end": 23186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13960,
											"end": 13962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13942,
											"end": 13963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13999,
											"end": 14001,
											"name": "PUSH",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13979,
											"end": 13997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 14002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14038,
											"end": 14072,
											"name": "PUSH",
											"source": 1,
											"value": "546865204E465420636F6E74726163742068617320616E20696E76616C696420"
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14018,
											"end": 14036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22A9219B99189034B6B83632B6B2B73A30BA34B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14089,
											"end": 14107,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14089,
											"end": 14107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14082,
											"end": 14133,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14150,
											"end": 14169,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14150,
											"end": 14169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13758,
											"end": 14175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 23118,
											"end": 23265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22941,
											"end": 23272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22883,
											"end": 23272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22883,
											"end": 23272,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23436,
											"end": 24070,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 23436,
											"end": 24070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23683,
											"end": 23698,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14421,
											"end": 14440,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14528,
											"end": 14530,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14524,
											"end": 14539,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14524,
											"end": 14539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14524,
											"end": 14539,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14520,
											"end": 14544,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14518,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14518,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14506,
											"end": 14518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14499,
											"end": 14545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14573,
											"name": "PUSH",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 14561,
											"end": 14573,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14561,
											"end": 14573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14582,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14582,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14554,
											"end": 14582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14616,
											"end": 14631,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14616,
											"end": 14631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14616,
											"end": 14631,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14612,
											"end": 14636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14598,
											"end": 14610,
											"name": "PUSH",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 14598,
											"end": 14610,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14598,
											"end": 14610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14591,
											"end": 14637,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "PUSH",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14653,
											"end": 14666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14646,
											"end": 14675,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14646,
											"end": 14675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14646,
											"end": 14675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14704,
											"name": "PUSH",
											"source": 1,
											"value": "A8"
										},
										{
											"begin": 14691,
											"end": 14704,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23649,
											"end": 23812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "C8"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "E8"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14691,
											"end": 14704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24037,
											"end": 24052,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23862,
											"end": 24063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23838,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23850,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 23859,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23833,
											"end": 24063,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23436,
											"end": 24070,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "122"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 495,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 14,
											"end": 495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 96,
											"end": 101,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 90,
											"end": 102,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 85,
											"end": 88,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 78,
											"end": 103,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 149,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 142,
											"end": 147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 138,
											"end": 154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 132,
											"end": 155,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 191,
											"end": 192,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 187,
											"end": 188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 178,
											"end": 189,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 174,
											"end": 193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 243,
											"end": 245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 229,
											"end": 241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 218,
											"end": 222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 216,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 209,
											"end": 223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 202,
											"end": 247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 296,
											"end": 300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 285,
											"end": 301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 302,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 272,
											"end": 276,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 263,
											"end": 277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 256,
											"end": 303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 364,
											"end": 366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 356,
											"end": 360,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 349,
											"end": 354,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 345,
											"end": 361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 339,
											"end": 362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 335,
											"end": 367,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 328,
											"end": 332,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 319,
											"end": 333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 312,
											"end": 368,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 429,
											"end": 431,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 414,
											"end": 419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 410,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 404,
											"end": 427,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 400,
											"end": 432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 397,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 388,
											"end": 391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 384,
											"end": 398,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 377,
											"end": 433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 377,
											"end": 433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 377,
											"end": 433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 482,
											"end": 486,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 475,
											"end": 480,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 471,
											"end": 487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 465,
											"end": 488,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 449,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14,
											"end": 495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 495,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 500,
											"end": 1210,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 500,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 725,
											"end": 727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 798,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 777,
											"end": 798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 847,
											"end": 860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 847,
											"end": 860,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 750,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 750,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 750,
											"end": 768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 869,
											"end": 891,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 869,
											"end": 891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 869,
											"end": 891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 696,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 696,
											"end": 700,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 725,
											"end": 727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 948,
											"end": 963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 948,
											"end": 963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 948,
											"end": 963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 948,
											"end": 963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 924,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 907,
											"end": 925,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 907,
											"end": 925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 907,
											"end": 925,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 700,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1012,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1098,
											"end": 1101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1096,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1054,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1054,
											"end": 1102,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1054,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1054,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1174,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1122,
											"end": 1136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1028,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1020,
											"end": 1029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 991,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1204,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 500,
											"end": 1210,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 500,
											"end": 1210,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1437,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1535,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1524,
											"end": 1547,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1563,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1567,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 1517,
											"end": 1569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1588,
											"end": 1611,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1617,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1813,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1795,
											"end": 1814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1799,
											"end": 1808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1858,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1823,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 1823,
											"end": 1870,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1823,
											"end": 1870,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 1823,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1876,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2163,
											"end": 2194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2195,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2195,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2143,
											"end": 2213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2211,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2301,
											"end": 2307,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2372,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2358,
											"end": 2367,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2349,
											"end": 2356,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2373,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2390,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2338,
											"end": 2390,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2388,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2390,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2338,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2412,
											"end": 2435,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2469,
											"end": 2474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2546,
											"end": 2548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2518,
											"end": 2550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2574,
											"end": 2606,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2615,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2667,
											"end": 2674,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2674,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2938,
											"end": 3321,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 2938,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3023,
											"end": 3029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3084,
											"end": 3086,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3072,
											"end": 3081,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3063,
											"end": 3070,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3104,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3052,
											"end": 3104,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3097,
											"end": 3098,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3090,
											"end": 3102,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3104,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 3052,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3148,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3126,
											"end": 3149,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 3183,
											"end": 3188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 3158,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3213,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3264,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3232,
											"end": 3264,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3313,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3315,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3315,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 3321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2938,
											"end": 3321,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3326,
											"end": 3641,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 3326,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3458,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3473,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 3423,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3520,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3554,
											"end": 3559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 3529,
											"end": 3560,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3560,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3529,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3584,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3631,
											"end": 3633,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3603,
											"end": 3635,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3326,
											"end": 3641,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3646,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3646,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3707,
											"end": 3717,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3698,
											"end": 3718,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3719,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3735,
											"end": 3736,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3728,
											"end": 3743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3759,
											"end": 3760,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4102,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4102,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4173,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4156,
											"end": 4174,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4275,
											"end": 4277,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4260,
											"end": 4278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4318,
											"end": 4321,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4303,
											"end": 4322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4331,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4296,
											"end": 4331,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4049,
											"end": 4068,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4350,
											"end": 4363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4350,
											"end": 4363,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4340,
											"end": 4484,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4416,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 4401,
											"end": 4404,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4397,
											"end": 4417,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4394,
											"end": 4395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4387,
											"end": 4418,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4441,
											"end": 4445,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4431,
											"end": 4446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4466,
											"end": 4467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4484,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4340,
											"end": 4484,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4504,
											"end": 4513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4493,
											"end": 4528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 4534,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4936,
											"end": 5183,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 4936,
											"end": 5183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5027,
											"end": 5034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5046,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5051,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5016,
											"end": 5068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5068,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5016,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5103,
											"end": 5112,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5090,
											"end": 5113,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5147,
											"end": 5152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5153,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5122,
											"end": 5153,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5122,
											"end": 5153,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 5122,
											"end": 5153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5177,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 5183,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4936,
											"end": 5183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5188,
											"end": 5315,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5188,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5244,
											"end": 5247,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5240,
											"end": 5260,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5237,
											"end": 5238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5230,
											"end": 5261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5284,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5277,
											"end": 5278,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5270,
											"end": 5285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5294,
											"end": 5309,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5445,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5320,
											"end": 5445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5360,
											"end": 5364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5382,
											"end": 5390,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5379,
											"end": 5413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 5393,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5430,
											"end": 5439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5445,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5450,
											"end": 5577,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5450,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5521,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5506,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5502,
											"end": 5522,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5499,
											"end": 5500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5492,
											"end": 5523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5546,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5539,
											"end": 5540,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5532,
											"end": 5547,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5563,
											"end": 5564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5556,
											"end": 5571,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5582,
											"end": 5710,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 5582,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 5625,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5653,
											"end": 5654,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5656,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5679,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5640,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 5640,
											"end": 5679,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 5659,
											"end": 5677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5582,
											"end": 5710,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5715,
											"end": 5842,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5715,
											"end": 5842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5786,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 5771,
											"end": 5774,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5767,
											"end": 5787,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5764,
											"end": 5765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5811,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5804,
											"end": 5805,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5797,
											"end": 5812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5835,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5836,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5982,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 5847,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5924,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5907,
											"end": 5924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5907,
											"end": 5924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5904,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5904,
											"end": 5947,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5974,
											"end": 5975,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5982,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6704,
											"end": 7079,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 6704,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6962,
											"end": 6977,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6962,
											"end": 6977,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6962,
											"end": 6977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7014,
											"end": 7029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7014,
											"end": 7029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7014,
											"end": 7029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7014,
											"end": 7029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7009,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 7030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7073,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6894,
											"end": 6896,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6879,
											"end": 6897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 7079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7624,
											"end": 7875,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 7624,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7694,
											"end": 7700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7747,
											"end": 7749,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7735,
											"end": 7744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7726,
											"end": 7733,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7722,
											"end": 7745,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7718,
											"end": 7750,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7767,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 7715,
											"end": 7767,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7760,
											"end": 7761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7753,
											"end": 7765,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7767,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 7715,
											"end": 7767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7805,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7839,
											"end": 7844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7814,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7814,
											"end": 7845,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9273,
											"end": 9629,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 9273,
											"end": 9629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9457,
											"end": 9478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9457,
											"end": 9478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9512,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9553,
											"end": 9587,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9548,
											"end": 9550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9533,
											"end": 9551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9533,
											"end": 9551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9622,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9273,
											"end": 9629,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11471,
											"end": 11639,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 11471,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11511,
											"end": 11518,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11578,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11573,
											"end": 11574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11569,
											"end": 11575,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11565,
											"end": 11579,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11562,
											"end": 11563,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11559,
											"end": 11580,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11556,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11557,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11533,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 11533,
											"end": 11604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11624,
											"end": 11633,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11624,
											"end": 11633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11471,
											"end": 11639,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11644,
											"end": 11861,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 11644,
											"end": 11861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11684,
											"end": 11685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 11711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11700,
											"end": 11832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 11700,
											"end": 11832,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11754,
											"end": 11764,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11749,
											"end": 11752,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11745,
											"end": 11765,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11735,
											"end": 11766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11789,
											"end": 11793,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11786,
											"end": 11787,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11779,
											"end": 11794,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11817,
											"end": 11821,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11814,
											"end": 11815,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11807,
											"end": 11822,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11700,
											"end": 11832,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 11700,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11846,
											"end": 11855,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11846,
											"end": 11855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11861,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11866,
											"end": 12143,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 11866,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11933,
											"end": 11939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11986,
											"end": 11988,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 11983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11965,
											"end": 11972,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11961,
											"end": 11984,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11957,
											"end": 11989,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 11954,
											"end": 12006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11999,
											"end": 12000,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11992,
											"end": 12004,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11954,
											"end": 12006,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 11954,
											"end": 12006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12034,
											"end": 12043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12028,
											"end": 12044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12087,
											"end": 12092,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12080,
											"end": 12093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12073,
											"end": 12094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12066,
											"end": 12071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12063,
											"end": 12095,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12053,
											"end": 12113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 12053,
											"end": 12113,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12109,
											"end": 12110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12106,
											"end": 12107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12111,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ERC721_Interface()": "2b4c32be",
							"antaFeePercent()": "b7a60c7e",
							"bnbFeePercent()": "85a8b36c",
							"buyItemBySQF(address,uint256,uint256)": "f01b52dc",
							"createMarketItem(address,uint256,uint256)": "58eb2df5",
							"createMarketSale(address,uint256)": "c23b139e",
							"fetchMarketItem(uint256)": "2a45b250",
							"fetchMarketItems()": "0f08efe0",
							"fetchMyNFTs()": "202e3740",
							"getMarketItem(uint256)": "c7be7a49",
							"itemOffers(address,uint256,address)": "49739678",
							"items(address,uint256)": "5c80a435",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"sellItem(address,uint256,uint256)": "68915327",
							"setSQFToken(address)": "92bf77dd",
							"sqfToken()": "15b81dc3",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feePercent\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"BuyItemSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delistBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"DelistItemSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"MarketItemCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"currency\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"name\":\"SellItemSuccessful\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ERC721_Interface\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antaFeePercent\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bnbFeePercent\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAnta\",\"type\":\"uint256\"}],\"name\":\"buyItemBySQF\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"createMarketItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"createMarketSale\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"fetchMarketItem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTMarket.MarketItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketItems\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTMarket.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMyNFTs\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTMarket.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketItemId\",\"type\":\"uint256\"}],\"name\":\"getMarketItem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct NFTMarket.MarketItem\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"itemOffers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"offerPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"priceAnta\",\"type\":\"uint256\"},{\"internalType\":\"enum MarketplaceStorage.ItemStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"sellItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setSQFToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sqfToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"NFTMarket\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 409,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 477,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "items",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Item)459_storage))"
							},
							{
								"astId": 486,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "itemOffers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage)))"
							},
							{
								"astId": 489,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "sqfToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)201"
							},
							{
								"astId": 491,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "bnbFeePercent",
								"offset": 20,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 493,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "antaFeePercent",
								"offset": 21,
								"slot": "3",
								"type": "t_uint8"
							},
							{
								"astId": 27,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "_owner",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 563,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "_itemIds",
								"offset": 0,
								"slot": "5",
								"type": "t_struct(Counter)331_storage"
							},
							{
								"astId": 566,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "_itemsSold",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(Counter)331_storage"
							},
							{
								"astId": 584,
								"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
								"label": "idToMarketItem",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(MarketItem)579_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)201": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_enum(ItemStatus)445": {
								"encoding": "inplace",
								"label": "enum MarketplaceStorage.ItemStatus",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage)))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer)))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage))"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(Item)459_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(Item)459_storage)"
							},
							"t_mapping(t_address,t_struct(ItemOffer)464_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct MarketplaceStorage.ItemOffer)",
								"numberOfBytes": "32",
								"value": "t_struct(ItemOffer)464_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(ItemOffer)464_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(ItemOffer)464_storage)"
							},
							"t_mapping(t_uint256,t_struct(Item)459_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct MarketplaceStorage.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)459_storage"
							},
							"t_mapping(t_uint256,t_struct(MarketItem)579_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct NFTMarket.MarketItem)",
								"numberOfBytes": "32",
								"value": "t_struct(MarketItem)579_storage"
							},
							"t_struct(Counter)331_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 330,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Item)459_storage": {
								"encoding": "inplace",
								"label": "struct MarketplaceStorage.Item",
								"members": [
									{
										"astId": 447,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 449,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "seller",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 451,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "nftAddress",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 453,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 455,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "priceAnta",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 458,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "status",
										"offset": 0,
										"slot": "5",
										"type": "t_enum(ItemStatus)445"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(ItemOffer)464_storage": {
								"encoding": "inplace",
								"label": "struct MarketplaceStorage.ItemOffer",
								"members": [
									{
										"astId": 461,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 463,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "offerPrice",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(MarketItem)579_storage": {
								"encoding": "inplace",
								"label": "struct NFTMarket.MarketItem",
								"members": [
									{
										"astId": 568,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "itemId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 570,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "nftContract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 572,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 574,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "seller",
										"offset": 0,
										"slot": "3",
										"type": "t_address_payable"
									},
									{
										"astId": 576,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "owner",
										"offset": 0,
										"slot": "4",
										"type": "t_address_payable"
									},
									{
										"astId": 578,
										"contract": "contracts/Marketplace2/Marketplace.sol:NFTMarket",
										"label": "price",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/Marketplace2/Marketplace.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace2/Marketplace.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace2/Marketplace.sol\":{\"keccak256\":\"0x6a6a9c53d19af9bc4cfa7ad3158608faf6da89521338602867efca18c94ee787\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb04998a65361442b670d4cc5272e453facfa1d01b8014b0b19e27838c3d5734\",\"dweb:/ipfs/QmeuGCBsiHDjNeUie95s7HBeL5BzKQ7qtpuVopCk8zDyYF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 409,
								"contract": "contracts/Marketplace2/Marketplace.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Marketplace2/Marketplace.sol": {
				"ast": {
					"absolutePath": "contracts/Marketplace2/Marketplace.sol",
					"exportedSymbols": {
						"Context": [
							21
						],
						"Counters": [
							399
						],
						"IERC165": [
							212
						],
						"IERC20": [
							201
						],
						"IERC721": [
							326
						],
						"MarketplaceStorage": [
							550
						],
						"NFTMarket": [
							1369
						],
						"Ownable": [
							124
						],
						"ReentrancyGuard": [
							438
						]
					},
					"id": 1370,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "27:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "542:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "618:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "635:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "635:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "628:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "565:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:9:0"
									},
									"scope": 21,
									"src": "556:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "725:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "742:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "742:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "735:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "667:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "709:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "709:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:16:0"
									},
									"scope": 21,
									"src": "658:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1370,
							"src": "524:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "762:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1310:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1310:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "786:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124,
								21
							],
							"name": "Ownable",
							"nameLocation": "1299:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1340:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 124,
									"src": "1324:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1324:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1359:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1396:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1380:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1427:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1411:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1379:57:0"
									},
									"src": "1353:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1553:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1582:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1582:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1563:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1563:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1563:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1443:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1550:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1553:0:0"
									},
									"scope": 124,
									"src": "1539:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "1733:30:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1750:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 48,
												"id": 50,
												"nodeType": "Return",
												"src": "1743:13:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1608:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1687:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1692:2:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1724:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1723:9:0"
									},
									"scope": 124,
									"src": "1678:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "1872:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 52,
																	"src": "1890:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1890:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 58,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1901:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1890:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1882:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1882:68:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "1960:1:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "1769:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 66,
									"name": "onlyOwner",
									"nameLocation": "1860:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:2:0"
									},
									"src": "1851:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2364:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 75,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2401:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2393:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 73,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2393:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2393:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 72,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2374:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2374:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "2374:30:0"
											}
										]
									},
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "1974:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 70,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 69,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2354:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2354:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2319:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2336:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:0:0"
									},
									"scope": 124,
									"src": "2310:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2630:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2648:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2668:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2660:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2660:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2660:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2648:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2672:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2640:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2640:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2417:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "2620:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2620:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2569:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2595:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2587:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2630:0:0"
									},
									"scope": 124,
									"src": "2560:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"id": 111,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 113,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 114,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 116,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 118,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 119,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 117,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 121,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 124,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1370,
							"src": "1281:1820:0",
							"usedErrors": []
						},
						{
							"id": 125,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3104:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 126,
								"nodeType": "StructuredDocumentation",
								"src": "3129:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "IERC20",
							"nameLocation": "3210:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3223:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 132,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3303:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "3340:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:9:0"
									},
									"scope": 201,
									"src": "3294:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "3355:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3441:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3459:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3451:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:17:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3491:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:9:0"
									},
									"scope": 201,
									"src": "3432:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3506:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3722:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3739:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3751:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3730:28:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3777:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3777:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:6:0"
									},
									"scope": 201,
									"src": "3713:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "3789:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4067:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4085:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4077:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4100:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4092:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4076:32:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4132:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4132:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4131:9:0"
									},
									"scope": 201,
									"src": "4058:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "4147:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4803:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4819:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4811:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4810:33:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 167,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:6:0"
									},
									"scope": 201,
									"src": "4794:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4874:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5175:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5205:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5197:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5227:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5219:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5247:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5239:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5187:72:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5278:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5277:6:0"
									},
									"scope": 201,
									"src": "5166:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5290:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 191,
									"name": "Transfer",
									"nameLocation": "5459:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5484:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5468:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5506:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5490:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5518:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "5510:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5510:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5467:57:0"
									},
									"src": "5453:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "5531:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 200,
									"name": "Approval",
									"nameLocation": "5690:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5715:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5699:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5738:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5722:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5755:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "5747:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5747:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5698:63:0"
									},
									"src": "5684:78:0"
								}
							],
							"scope": 1370,
							"src": "3200:2564:0",
							"usedErrors": []
						},
						{
							"id": 202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "5765:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 203,
								"nodeType": "StructuredDocumentation",
								"src": "5790:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 212,
							"linearizedBaseContracts": [
								212
							],
							"name": "IERC165",
							"nameLocation": "6080:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "6094:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "6448:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "6473:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "6466:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 205,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "6466:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6465:20:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "6509:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6508:6:0"
									},
									"scope": 212,
									"src": "6439:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1370,
							"src": "6070:447:0",
							"usedErrors": []
						},
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6518:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 215,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 212,
										"src": "6633:7:0"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "6633:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 214,
								"nodeType": "StructuredDocumentation",
								"src": "6544:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 326,
							"linearizedBaseContracts": [
								326,
								212
							],
							"name": "IERC721",
							"nameLocation": "6622:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "6647:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 225,
									"name": "Transfer",
									"nameLocation": "6746:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6771:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6755:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6793:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6777:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 220,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6797:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6797:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6754:67:0"
									},
									"src": "6740:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "6828:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 234,
									"name": "Approval",
									"nameLocation": "6933:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6958:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6942:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "6981:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6965:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6965:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7007:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "6991:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6991:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6941:74:0"
									},
									"src": "6927:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "7022:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 243,
									"name": "ApprovalForAll",
									"nameLocation": "7150:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7181:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "7165:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7165:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7204:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "7188:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "7219:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "7214:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7214:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7164:64:0"
									},
									"src": "7144:85:0"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "7235:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "7325:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7343:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7335:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7335:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7334:15:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "7381:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7373:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7372:17:0"
									},
									"scope": 326,
									"src": "7316:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7396:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "7541:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7557:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7549:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7548:17:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7597:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "7589:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7588:15:0"
									},
									"scope": 326,
									"src": "7532:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "7610:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8314:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8348:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "8340:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8370:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "8362:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8390:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "8382:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8330:73:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8412:0:0"
									},
									"scope": 326,
									"src": "8305:108:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "8419:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "8937:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8967:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "8959:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8989:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "8981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9009:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "9001:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8949:73:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9031:0:0"
									},
									"scope": 326,
									"src": "8928:104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "9038:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "9504:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9520:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "9512:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9532:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "9524:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9524:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9511:29:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9549:0:0"
									},
									"scope": 326,
									"src": "9495:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "9556:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "9709:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9729:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "9721:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9720:17:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9769:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "9761:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9761:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9760:18:0"
									},
									"scope": 326,
									"src": "9700:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "9785:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "10108:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10134:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "10126:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "10149:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "10144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10144:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10125:34:0"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10168:0:0"
									},
									"scope": 326,
									"src": "10099:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "10175:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "10327:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10352:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "10344:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "10359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10343:33:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "10400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10399:6:0"
									},
									"scope": 326,
									"src": "10318:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "10412:556:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "10982:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11016:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11008:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11038:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11030:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11058:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "11075:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 321,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11075:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10998:102:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11109:0:0"
									},
									"scope": 326,
									"src": "10973:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1370,
							"src": "6612:4500:0",
							"usedErrors": []
						},
						{
							"id": 327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "11113:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "11138:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 399,
							"linearizedBaseContracts": [
								399
							],
							"name": "Counters",
							"nameLocation": "11458:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 331,
									"members": [
										{
											"constant": false,
											"id": 330,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "11820:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 331,
											"src": "11812:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11812:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "11480:7:0",
									"nodeType": "StructDefinition",
									"scope": 399,
									"src": "11473:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "11927:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 339,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "11944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 330,
													"src": "11944:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 338,
												"id": 341,
												"nodeType": "Return",
												"src": "11937:21:0"
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "11862:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "11886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "11870:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 333,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 332,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "11870:7:0"
													},
													"referencedDeclaration": 331,
													"src": "11870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11869:25:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "11918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11917:9:0"
									},
									"scope": 399,
									"src": "11853:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "12024:70:0",
										"statements": [
											{
												"id": 355,
												"nodeType": "UncheckedBlock",
												"src": "12034:54:0",
												"statements": [
													{
														"expression": {
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 349,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 346,
																	"src": "12058:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 330,
																"src": "12058:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12076:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "12058:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 354,
														"nodeType": "ExpressionStatement",
														"src": "12058:19:0"
													}
												]
											}
										]
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "11980:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "12006:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "11990:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 345,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 344,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "11990:7:0"
													},
													"referencedDeclaration": 331,
													"src": "11990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11989:25:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12024:0:0"
									},
									"scope": 399,
									"src": "11971:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "12153:176:0",
										"statements": [
											{
												"assignments": [
													364
												],
												"declarations": [
													{
														"constant": false,
														"id": 364,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "12171:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 384,
														"src": "12163:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"expression": {
														"id": 365,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "12179:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 330,
													"src": "12179:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12163:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "12211:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12219:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12211:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12222:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12203:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "12203:49:0"
											},
											{
												"id": 383,
												"nodeType": "UncheckedBlock",
												"src": "12262:61:0",
												"statements": [
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 375,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "12286:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 330,
																"src": "12286:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 364,
																	"src": "12303:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12311:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "12303:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12286:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "12286:26:0"
													}
												]
											}
										]
									},
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "12109:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "12135:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "12119:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 359,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 358,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "12119:7:0"
													},
													"referencedDeclaration": 331,
													"src": "12119:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12118:25:0"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12153:0:0"
									},
									"scope": 399,
									"src": "12100:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "12384:35:0",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 391,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "12394:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 330,
														"src": "12394:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12411:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12394:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "12394:18:0"
											}
										]
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "12344:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "12366:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "12350:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "Counter",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 331,
														"src": "12350:7:0"
													},
													"referencedDeclaration": 331,
													"src": "12350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12349:25:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12384:0:0"
									},
									"scope": 399,
									"src": "12335:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1370,
							"src": "11450:971:0",
							"usedErrors": []
						},
						{
							"id": 400,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12520:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 401,
								"nodeType": "StructuredDocumentation",
								"src": "12545:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "ReentrancyGuard",
							"nameLocation": "13314:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 404,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "14109:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 438,
									"src": "14084:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14084:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 403,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14124:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 407,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "14156:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 438,
									"src": "14131:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 405,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14131:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 406,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14167:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "14191:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 438,
									"src": "14175:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "14175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "14219:39:0",
										"statements": [
											{
												"expression": {
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 412,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "14229:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 413,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "14239:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14229:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "14229:22:0"
											}
										]
									},
									"id": 417,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14216:2:0"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14219:0:0"
									},
									"scope": 438,
									"src": "14205:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "14659:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 421,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "14748:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 422,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "14759:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14748:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14769:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 420,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14740:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "14740:63:0"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 427,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "14878:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 428,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "14888:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14878:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "14878:18:0"
											},
											{
												"id": 431,
												"nodeType": "PlaceholderStatement",
												"src": "14907:1:0"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "15051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "15061:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15051:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "15051:22:0"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "14264:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 437,
									"name": "nonReentrant",
									"nameLocation": "14644:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14656:2:0"
									},
									"src": "14635:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1370,
							"src": "13296:1786:0",
							"usedErrors": []
						},
						{
							"id": 439,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "15084:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MarketplaceStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 550,
							"linearizedBaseContracts": [
								550
							],
							"name": "MarketplaceStorage",
							"nameLocation": "15118:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MarketplaceStorage.ItemStatus",
									"id": 445,
									"members": [
										{
											"id": 440,
											"name": "MINTED",
											"nameLocation": "15169:6:0",
											"nodeType": "EnumValue",
											"src": "15169:6:0"
										},
										{
											"id": 441,
											"name": "LIST",
											"nameLocation": "15185:4:0",
											"nodeType": "EnumValue",
											"src": "15185:4:0"
										},
										{
											"id": 442,
											"name": "BOUGHT",
											"nameLocation": "15199:6:0",
											"nodeType": "EnumValue",
											"src": "15199:6:0"
										},
										{
											"id": 443,
											"name": "OFFER",
											"nameLocation": "15215:5:0",
											"nodeType": "EnumValue",
											"src": "15215:5:0"
										},
										{
											"id": 444,
											"name": "DELIST",
											"nameLocation": "15230:6:0",
											"nodeType": "EnumValue",
											"src": "15230:6:0"
										}
									],
									"name": "ItemStatus",
									"nameLocation": "15148:10:0",
									"nodeType": "EnumDefinition",
									"src": "15143:99:0"
								},
								{
									"canonicalName": "MarketplaceStorage.Item",
									"id": 459,
									"members": [
										{
											"constant": false,
											"id": 447,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "15297:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "15289:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 446,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "15289:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 449,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "15345:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "15337:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 448,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "15337:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 451,
											"mutability": "mutable",
											"name": "nftAddress",
											"nameLocation": "15401:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "15393:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 450,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "15393:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 453,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "15476:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "15468:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 452,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15468:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 455,
											"mutability": "mutable",
											"name": "priceAnta",
											"nameLocation": "15547:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "15539:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 454,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15539:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 458,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "15607:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "15596:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ItemStatus_$445",
												"typeString": "enum MarketplaceStorage.ItemStatus"
											},
											"typeName": {
												"id": 457,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 456,
													"name": "ItemStatus",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 445,
													"src": "15596:10:0"
												},
												"referencedDeclaration": 445,
												"src": "15596:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ItemStatus_$445",
													"typeString": "enum MarketplaceStorage.ItemStatus"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "15255:4:0",
									"nodeType": "StructDefinition",
									"scope": 550,
									"src": "15248:372:0",
									"visibility": "public"
								},
								{
									"canonicalName": "MarketplaceStorage.ItemOffer",
									"id": 464,
									"members": [
										{
											"constant": false,
											"id": 461,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "15680:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 464,
											"src": "15672:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 460,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "15672:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 463,
											"mutability": "mutable",
											"name": "offerPrice",
											"nameLocation": "15749:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 464,
											"src": "15741:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 462,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15741:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ItemOffer",
									"nameLocation": "15633:9:0",
									"nodeType": "StructDefinition",
									"scope": 550,
									"src": "15626:140:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2b4c32be",
									"id": 470,
									"mutability": "constant",
									"name": "ERC721_Interface",
									"nameLocation": "15794:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "15771:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 465,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "15771:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783830616335386364",
												"id": 468,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "15820:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2158778573_by_1",
													"typeString": "int_const 2158778573"
												},
												"value": "0x80ac58cd"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_2158778573_by_1",
													"typeString": "int_const 2158778573"
												}
											],
											"id": 467,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "15813:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 466,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "15813:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 469,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "15813:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c80a435",
									"id": 477,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "15961:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "15909:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item))"
									},
									"typeName": {
										"id": 476,
										"keyType": {
											"id": 471,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "15917:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "15909:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item))"
										},
										"valueType": {
											"id": 475,
											"keyType": {
												"id": 472,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "15936:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "15928:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
												"typeString": "mapping(uint256 => struct MarketplaceStorage.Item)"
											},
											"valueType": {
												"id": 474,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 473,
													"name": "Item",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 459,
													"src": "15947:4:0"
												},
												"referencedDeclaration": 459,
												"src": "15947:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Item_$459_storage_ptr",
													"typeString": "struct MarketplaceStorage.Item"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "49739678",
									"id": 486,
									"mutability": "mutable",
									"name": "itemOffers",
									"nameLocation": "16130:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "16045:95:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ItemOffer_$464_storage_$_$_$",
										"typeString": "mapping(address => mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer)))"
									},
									"typeName": {
										"id": 485,
										"keyType": {
											"id": 478,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "16053:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "16045:69:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ItemOffer_$464_storage_$_$_$",
											"typeString": "mapping(address => mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer)))"
										},
										"valueType": {
											"id": 484,
											"keyType": {
												"id": 479,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16072:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "16064:49:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_ItemOffer_$464_storage_$_$",
												"typeString": "mapping(uint256 => mapping(address => struct MarketplaceStorage.ItemOffer))"
											},
											"valueType": {
												"id": 483,
												"keyType": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "16083:29:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ItemOffer_$464_storage_$",
													"typeString": "mapping(address => struct MarketplaceStorage.ItemOffer)"
												},
												"valueType": {
													"id": 482,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 481,
														"name": "ItemOffer",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 464,
														"src": "16102:9:0"
													},
													"referencedDeclaration": 464,
													"src": "16102:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ItemOffer_$464_storage_ptr",
														"typeString": "struct MarketplaceStorage.ItemOffer"
													}
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "15b81dc3",
									"id": 489,
									"mutability": "mutable",
									"name": "sqfToken",
									"nameLocation": "16160:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "16146:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$201",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 488,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 487,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 201,
											"src": "16146:6:0"
										},
										"referencedDeclaration": 201,
										"src": "16146:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$201",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "85a8b36c",
									"id": 491,
									"mutability": "mutable",
									"name": "bnbFeePercent",
									"nameLocation": "16188:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "16175:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 490,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "16175:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b7a60c7e",
									"id": 493,
									"mutability": "mutable",
									"name": "antaFeePercent",
									"nameLocation": "16220:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 550,
									"src": "16207:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 492,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "16207:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4",
									"id": 499,
									"name": "Claim",
									"nameLocation": "16247:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "16269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "16253:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16287:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "16279:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16252:41:0"
									},
									"src": "16241:53:0"
								},
								{
									"anonymous": false,
									"eventSelector": "935794ae92a3aaa79cea8ca1a6a0b1d41b7e863c5df5b3b3629b4d6f8848ed34",
									"id": 511,
									"name": "DelistItemSuccessful",
									"nameLocation": "16306:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "16344:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "16336:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16372:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "16364:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 502,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16364:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "16400:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "16384:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": true,
												"mutability": "mutable",
												"name": "delistBy",
												"nameLocation": "16433:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "16417:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16417:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "createdAt",
												"nameLocation": "16459:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "16451:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16326:148:0"
									},
									"src": "16300:175:0"
								},
								{
									"anonymous": false,
									"eventSelector": "30247e11bbb597dfefd2a3124026f1ef8987a4d6ba46e3629f80bac1b0c9faee",
									"id": 533,
									"name": "BuyItemSuccessful",
									"nameLocation": "16486:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16521:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16513:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 512,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "16549:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16533:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "16582:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16566:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "16606:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16598:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "16634:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16626:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"indexed": false,
												"mutability": "mutable",
												"name": "feePercent",
												"nameLocation": "16655:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16649:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 522,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16649:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "16683:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16675:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16675:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "16712:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16696:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "16734:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16727:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16727:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": false,
												"mutability": "mutable",
												"name": "createdAt",
												"nameLocation": "16760:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "16752:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16752:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16503:272:0"
									},
									"src": "16480:296:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ff2412bd5c66e6ad5153e35ee902ee32bb4393211a4d0662428b9b481929a7b9",
									"id": 549,
									"name": "SellItemSuccessful",
									"nameLocation": "16787:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "16823:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16815:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16815:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "16851:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16843:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 536,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "16879:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16863:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16863:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "16904:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16896:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16896:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "16935:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16919:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"mutability": "mutable",
												"name": "currency",
												"nameLocation": "16958:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 544,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16951:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "createdAt",
												"nameLocation": "16984:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "16976:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16805:194:0"
									},
									"src": "16781:219:0"
								}
							],
							"scope": 1370,
							"src": "15109:1893:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 551,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "17026:15:0"
									},
									"id": 552,
									"nodeType": "InheritanceSpecifier",
									"src": "17026:15:0"
								},
								{
									"baseName": {
										"id": 553,
										"name": "MarketplaceStorage",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 550,
										"src": "17043:18:0"
									},
									"id": 554,
									"nodeType": "InheritanceSpecifier",
									"src": "17043:18:0"
								},
								{
									"baseName": {
										"id": 555,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "17063:7:0"
									},
									"id": 556,
									"nodeType": "InheritanceSpecifier",
									"src": "17063:7:0"
								}
							],
							"canonicalName": "NFTMarket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1369,
							"linearizedBaseContracts": [
								1369,
								124,
								21,
								550,
								438
							],
							"name": "NFTMarket",
							"nameLocation": "17013:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 560,
									"libraryName": {
										"id": 557,
										"name": "Counters",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 399,
										"src": "17081:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "17075:36:0",
									"typeName": {
										"id": 559,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 558,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 331,
											"src": "17094:16:0"
										},
										"referencedDeclaration": 331,
										"src": "17094:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 563,
									"mutability": "mutable",
									"name": "_itemIds",
									"nameLocation": "17139:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "17114:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$331_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 562,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 561,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 331,
											"src": "17114:16:0"
										},
										"referencedDeclaration": 331,
										"src": "17114:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 566,
									"mutability": "mutable",
									"name": "_itemsSold",
									"nameLocation": "17176:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "17151:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$331_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 565,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 564,
											"name": "Counters.Counter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 331,
											"src": "17151:16:0"
										},
										"referencedDeclaration": 331,
										"src": "17151:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$331_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "NFTMarket.MarketItem",
									"id": 579,
									"members": [
										{
											"constant": false,
											"id": 568,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "17220:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 579,
											"src": "17215:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 567,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "17215:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 570,
											"mutability": "mutable",
											"name": "nftContract",
											"nameLocation": "17240:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 579,
											"src": "17232:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 569,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "17232:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 572,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "17265:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 579,
											"src": "17257:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 571,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "17257:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 574,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "17294:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 579,
											"src": "17278:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 573,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "17278:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 576,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "17322:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 579,
											"src": "17306:21:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 575,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "17306:15:0",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 578,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "17341:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 579,
											"src": "17333:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 577,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "17333:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MarketItem",
									"nameLocation": "17198:10:0",
									"nodeType": "StructDefinition",
									"scope": 1369,
									"src": "17191:160:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 584,
									"mutability": "mutable",
									"name": "idToMarketItem",
									"nameLocation": "17394:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1369,
									"src": "17355:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
										"typeString": "mapping(uint256 => struct NFTMarket.MarketItem)"
									},
									"typeName": {
										"id": 583,
										"keyType": {
											"id": 580,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17363:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "17355:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
											"typeString": "mapping(uint256 => struct NFTMarket.MarketItem)"
										},
										"valueType": {
											"id": 582,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 581,
												"name": "MarketItem",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 579,
												"src": "17374:10:0"
											},
											"referencedDeclaration": 579,
											"src": "17374:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
												"typeString": "struct NFTMarket.MarketItem"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "2ad024d53a0dc50c130967f8d4941927ee087ea31394cebb2b9599d3706c9c00",
									"id": 598,
									"name": "MarketItemCreated",
									"nameLocation": "17419:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "17456:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "17443:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "17443:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "17484:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "17468:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "17501:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "17538:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "17530:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "17558:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "17550:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "17577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "17569:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17437:149:0"
									},
									"src": "17413:174:0"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "17679:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 606,
														"name": "idToMarketItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "17692:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
														}
													},
													"id": 608,
													"indexExpression": {
														"id": 607,
														"name": "marketItemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 600,
														"src": "17707:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "17692:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$579_storage",
														"typeString": "struct NFTMarket.MarketItem storage ref"
													}
												},
												"functionReturnParameters": 605,
												"id": 609,
												"nodeType": "Return",
												"src": "17685:35:0"
											}
										]
									},
									"functionSelector": "c7be7a49",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMarketItem",
									"nameLocation": "17603:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "marketItemId",
												"nameLocation": "17625:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17617:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17616:22:0"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "17660:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
													"typeString": "struct NFTMarket.MarketItem"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "MarketItem",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 579,
														"src": "17660:10:0"
													},
													"referencedDeclaration": 579,
													"src": "17660:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
														"typeString": "struct NFTMarket.MarketItem"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17659:19:0"
									},
									"scope": 1369,
									"src": "17594:131:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "17785:40:0",
										"statements": [
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 618,
														"name": "sqfToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "17795:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$201",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 620,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "17813:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 619,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "17806:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$201_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17806:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$201",
															"typeString": "contract IERC20"
														}
													},
													"src": "17795:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$201",
														"typeString": "contract IERC20"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "17795:27:0"
											}
										]
									},
									"functionSelector": "92bf77dd",
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 616,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 615,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 66,
												"src": "17775:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17775:9:0"
										}
									],
									"name": "setSQFToken",
									"nameLocation": "17736:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "17756:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "17748:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17747:18:0"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17785:0:0"
									},
									"scope": 1369,
									"src": "17727:98:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "17952:503:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 637,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "17966:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17966:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17977:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17958:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "17958:50:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 643,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "18015:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$331_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "18015:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$331_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18015:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "18015:20:0"
											},
											{
												"assignments": [
													649
												],
												"declarations": [
													{
														"constant": false,
														"id": 649,
														"mutability": "mutable",
														"name": "itemId",
														"nameLocation": "18049:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 703,
														"src": "18041:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 648,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 650,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "18058:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$331_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "18058:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$331_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18058:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18041:35:0"
											},
											{
												"expression": {
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 654,
															"name": "idToMarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "18085:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
															}
														},
														"id": 656,
														"indexExpression": {
															"id": 655,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "18100:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18085:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_storage",
															"typeString": "struct NFTMarket.MarketItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 658,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "18129:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 659,
																"name": "nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "18143:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 660,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "18162:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 663,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18185:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18185:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18177:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 661,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18177:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18177:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 670,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18220:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18212:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 668,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18212:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18212:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "18204:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 666,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "18204:8:0",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18204:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 673,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 631,
																"src": "18231:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 657,
															"name": "MarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "18111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MarketItem_$579_storage_ptr_$",
																"typeString": "type(struct NFTMarket.MarketItem storage pointer)"
															}
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18111:131:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
															"typeString": "struct NFTMarket.MarketItem memory"
														}
													},
													"src": "18085:157:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$579_storage",
														"typeString": "struct NFTMarket.MarketItem storage ref"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "18085:157:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 681,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18283:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18283:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 685,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18303:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18295:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18295:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18295:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 687,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "18310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 678,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "18257:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 677,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "18249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$326_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18249:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "18249:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18249:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "18249:69:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 691,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "18355:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 692,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "18369:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "18388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 694,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "18403:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "18403:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18429:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18421:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18421:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18421:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "18439:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "MarketItemCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "18330:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18330:120:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "EmitStatement",
												"src": "18325:125:0"
											}
										]
									},
									"functionSelector": "58eb2df5",
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 634,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 633,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "17939:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17939:12:0"
										}
									],
									"name": "createMarketItem",
									"nameLocation": "17838:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "17868:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "17860:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "17885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "17914:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "17906:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17854:69:0"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17952:0:0"
									},
									"scope": 1369,
									"src": "17829:626:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "18566:1006:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 714,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "18584:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18592:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18584:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726963652073686f756c6420626520626967676572207468616e2030",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18595:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2f2e2a8ca6c2437ca423af4c2d2b7b3f1b61098282723eeea1ac3007dee4d77",
																"typeString": "literal_string \"Price should be bigger than 0\""
															},
															"value": "Price should be bigger than 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2f2e2a8ca6c2437ca423af4c2d2b7b3f1b61098282723eeea1ac3007dee4d77",
																"typeString": "literal_string \"Price should be bigger than 0\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18576:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "18576:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 721,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "18652:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 720,
														"name": "_requireERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "18637:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18637:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "18637:26:0"
											},
											{
												"assignments": [
													725
												],
												"declarations": [
													{
														"constant": false,
														"id": 725,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "18682:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "18674:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 724,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "18674:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 728,
												"initialValue": {
													"expression": {
														"id": 726,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "18691:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "18691:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18674:27:0"
											},
											{
												"assignments": [
													731
												],
												"declarations": [
													{
														"constant": false,
														"id": 731,
														"mutability": "mutable",
														"name": "nftRegistry",
														"nameLocation": "18719:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "18711:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$326",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 730,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 729,
																"name": "IERC721",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 326,
																"src": "18711:7:0"
															},
															"referencedDeclaration": 326,
															"src": "18711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 733,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "18741:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 732,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "18733:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$326_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18733:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$326",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18711:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 739,
																		"name": "assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "18804:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 737,
																		"name": "nftRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 731,
																		"src": "18784:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$326",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 259,
																	"src": "18784:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18784:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 741,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "18816:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "18784:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652073656c6c6572206973206e6f206c6f6e67657220746865206f776e6572",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18836:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc3e7906b75a290460d275d30b192fd86fe681901b5d05ae5a9c34e52cbe2f12",
																"typeString": "literal_string \"The seller is no longer the owner\""
															},
															"value": "The seller is no longer the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc3e7906b75a290460d275d30b192fd86fe681901b5d05ae5a9c34e52cbe2f12",
																"typeString": "literal_string \"The seller is no longer the owner\""
															}
														],
														"id": 736,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18763:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "18763:118:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "18916:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 752,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18932:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																],
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18924:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18924:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18924:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 754,
															"name": "assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "18939:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 746,
															"name": "nftRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "18891:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "18891:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18891:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 756,
												"nodeType": "ExpressionStatement",
												"src": "18891:56:0"
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "18969:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 830,
														"src": "18957:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
															"typeString": "struct MarketplaceStorage.Item"
														},
														"typeName": {
															"id": 758,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 757,
																"name": "Item",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 459,
																"src": "18957:4:0"
															},
															"referencedDeclaration": 459,
															"src": "18957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$459_storage_ptr",
																"typeString": "struct MarketplaceStorage.Item"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 760,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "18976:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
															}
														},
														"id": 762,
														"indexExpression": {
															"id": 761,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "18982:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18976:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
															"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
														}
													},
													"id": 764,
													"indexExpression": {
														"id": 763,
														"name": "assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "18994:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18976:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$459_storage",
														"typeString": "struct MarketplaceStorage.Item storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18957:45:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 766,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "19016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																"typeString": "struct MarketplaceStorage.Item memory"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 447,
														"src": "19016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19027:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19016:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 816,
													"nodeType": "Block",
													"src": "19111:259:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_enum$_ItemStatus_$445",
																			"typeString": "enum MarketplaceStorage.ItemStatus"
																		},
																		"id": 784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 780,
																				"name": "item",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19133:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																					"typeString": "struct MarketplaceStorage.Item memory"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "status",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 458,
																			"src": "19133:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_ItemStatus_$445",
																				"typeString": "enum MarketplaceStorage.ItemStatus"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 782,
																				"name": "ItemStatus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 445,
																				"src": "19148:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_ItemStatus_$445_$",
																					"typeString": "type(enum MarketplaceStorage.ItemStatus)"
																				}
																			},
																			"id": 783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "LIST",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 441,
																			"src": "19148:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_ItemStatus_$445",
																				"typeString": "enum MarketplaceStorage.ItemStatus"
																			}
																		},
																		"src": "19133:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4173736574206973206c697374696e67",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19165:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b168b8e58a91ea5544216a4380103027d80d47eebc6bdf99e44544ae4afe7b42",
																			"typeString": "literal_string \"Asset is listing\""
																		},
																		"value": "Asset is listing"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b168b8e58a91ea5544216a4380103027d80d47eebc6bdf99e44544ae4afe7b42",
																			"typeString": "literal_string \"Asset is listing\""
																		}
																	],
																	"id": 779,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "19125:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19125:59:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 787,
															"nodeType": "ExpressionStatement",
															"src": "19125:59:0"
														},
														{
															"expression": {
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 788,
																				"name": "items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 477,
																				"src": "19198:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
																				}
																			},
																			"id": 791,
																			"indexExpression": {
																				"id": 789,
																				"name": "nftAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "19204:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19198:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
																				"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
																			}
																		},
																		"id": 792,
																		"indexExpression": {
																			"id": 790,
																			"name": "assetId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "19216:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19198:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$459_storage",
																			"typeString": "struct MarketplaceStorage.Item storage ref"
																		}
																	},
																	"id": 793,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 458,
																	"src": "19198:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ItemStatus_$445",
																		"typeString": "enum MarketplaceStorage.ItemStatus"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 794,
																		"name": "ItemStatus",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 445,
																		"src": "19234:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_ItemStatus_$445_$",
																			"typeString": "type(enum MarketplaceStorage.ItemStatus)"
																		}
																	},
																	"id": 795,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "LIST",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 441,
																	"src": "19234:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ItemStatus_$445",
																		"typeString": "enum MarketplaceStorage.ItemStatus"
																	}
																},
																"src": "19198:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ItemStatus_$445",
																	"typeString": "enum MarketplaceStorage.ItemStatus"
																}
															},
															"id": 797,
															"nodeType": "ExpressionStatement",
															"src": "19198:51:0"
														},
														{
															"expression": {
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 798,
																				"name": "items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 477,
																				"src": "19263:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
																				}
																			},
																			"id": 801,
																			"indexExpression": {
																				"id": 799,
																				"name": "nftAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "19269:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19263:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
																				"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
																			}
																		},
																		"id": 802,
																		"indexExpression": {
																			"id": 800,
																			"name": "assetId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "19281:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19263:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$459_storage",
																			"typeString": "struct MarketplaceStorage.Item storage ref"
																		}
																	},
																	"id": 803,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 453,
																	"src": "19263:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 804,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "19298:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19263:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 806,
															"nodeType": "ExpressionStatement",
															"src": "19263:40:0"
														},
														{
															"expression": {
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 807,
																				"name": "items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 477,
																				"src": "19317:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																					"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
																				}
																			},
																			"id": 810,
																			"indexExpression": {
																				"id": 808,
																				"name": "nftAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 706,
																				"src": "19323:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19317:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
																				"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
																			}
																		},
																		"id": 811,
																		"indexExpression": {
																			"id": 809,
																			"name": "assetId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 708,
																			"src": "19335:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "19317:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Item_$459_storage",
																			"typeString": "struct MarketplaceStorage.Item storage ref"
																		}
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 449,
																	"src": "19317:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 813,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "19353:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "19317:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 815,
															"nodeType": "ExpressionStatement",
															"src": "19317:42:0"
														}
													]
												},
												"id": 817,
												"nodeType": "IfStatement",
												"src": "19012:358:0",
												"trueBody": {
													"id": 778,
													"nodeType": "Block",
													"src": "19030:75:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 771,
																		"name": "seller",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 725,
																		"src": "19056:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 772,
																		"name": "assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "19064:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 773,
																		"name": "nftAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 706,
																		"src": "19073:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 774,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "19085:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19092:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 770,
																	"name": "_createItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "19044:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,address,uint256,uint256)"
																	}
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19044:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 777,
															"nodeType": "ExpressionStatement",
															"src": "19044:50:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 819,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "19416:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 820,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19440:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																	"typeString": "struct MarketplaceStorage.Item memory"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 447,
															"src": "19440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 822,
															"name": "assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "19461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 823,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "19482:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 824,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "19501:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "424e42",
															"id": 825,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19521:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ed03c38e59dc60c7b69c2a4bf68f9214acd953252b5a90e8f5f59583e9bc3ae",
																"typeString": "literal_string \"BNB\""
															},
															"value": "BNB"
														},
														{
															"expression": {
																"id": 826,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "19540:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "19540:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_3ed03c38e59dc60c7b69c2a4bf68f9214acd953252b5a90e8f5f59583e9bc3ae",
																"typeString": "literal_string \"BNB\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "SellItemSuccessful",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "19384:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,uint256,uint256,address,string memory,uint256)"
														}
													},
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19384:181:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 829,
												"nodeType": "EmitStatement",
												"src": "19379:186:0"
											}
										]
									},
									"functionSelector": "68915327",
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sellItem",
									"nameLocation": "18468:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "18494:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "18486:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18486:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "18522:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "18514:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "18547:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "18539:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18539:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18476:82:0"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18566:0:0"
									},
									"scope": 1369,
									"src": "18459:1113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "19681:419:0",
										"statements": [
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "19692:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "19687:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 840,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19687:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 846,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 842,
															"name": "idToMarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "19700:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
															}
														},
														"id": 844,
														"indexExpression": {
															"id": 843,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "19715:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19700:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_storage",
															"typeString": "struct NFTMarket.MarketItem storage ref"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 578,
													"src": "19700:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19687:41:0"
											},
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "19739:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "19734:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 847,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 853,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 849,
															"name": "idToMarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "19749:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
															}
														},
														"id": 851,
														"indexExpression": {
															"id": 850,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "19764:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19749:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_storage",
															"typeString": "struct NFTMarket.MarketItem storage ref"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "tokenId",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 572,
													"src": "19749:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19734:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 855,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "19793:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "19793:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 857,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 841,
																"src": "19806:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19793:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365207375626d6974207468652061736b696e6720707269636520696e206f7264657220746f20636f6d706c65746520746865207075726368617365",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19813:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
																"typeString": "literal_string \"Please submit the asking price in order to complete the purchase\""
															},
															"value": "Please submit the asking price in order to complete the purchase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_899d1ae1826d37b1d693a532116abc3c3877f2f6313983af07c67f0636d77564",
																"typeString": "literal_string \"Please submit the asking price in order to complete the purchase\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19785:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19785:95:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "19785:95:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 867,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19926:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "19926:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 862,
																	"name": "idToMarketItem",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "19887:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																		"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																	}
																},
																"id": 864,
																"indexExpression": {
																	"id": 863,
																	"name": "itemId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 835,
																	"src": "19902:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "19887:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																	"typeString": "struct NFTMarket.MarketItem storage ref"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 574,
															"src": "19887:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "19887:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19887:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "19887:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 877,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "19984:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																],
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19976:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 875,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19976:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19976:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 879,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "19991:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "19991:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 881,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "20003:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 872,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 833,
																	"src": "19950:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 871,
																"name": "IERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "19942:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC721_$326_$",
																	"typeString": "type(contract IERC721)"
																}
															},
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19942:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 279,
														"src": "19942:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19942:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "19942:69:0"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 884,
																"name": "idToMarketItem",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "20017:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																	"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																}
															},
															"id": 886,
															"indexExpression": {
																"id": 885,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 835,
																"src": "20032:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20017:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																"typeString": "struct NFTMarket.MarketItem storage ref"
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 576,
														"src": "20017:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 890,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "20056:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "20056:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20048:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 888,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20048:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20048:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "20017:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "20017:50:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 895,
															"name": "_itemsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "20073:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$331_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "20073:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$331_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20073:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "20073:22:0"
											}
										]
									},
									"functionSelector": "c23b139e",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 838,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 837,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "19668:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19668:12:0"
										}
									],
									"name": "createMarketSale",
									"nameLocation": "19585:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "19615:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "19607:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "19640:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "19632:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19601:51:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19681:0:0"
									},
									"scope": 1369,
									"src": "19576:524:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "20182:75:0",
										"statements": [
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "20206:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 918,
														"src": "20188:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
															"typeString": "struct NFTMarket.MarketItem"
														},
														"typeName": {
															"id": 910,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 909,
																"name": "MarketItem",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 579,
																"src": "20188:10:0"
															},
															"referencedDeclaration": 579,
															"src": "20188:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																"typeString": "struct NFTMarket.MarketItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"baseExpression": {
														"id": 912,
														"name": "idToMarketItem",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "20213:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
															"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
														}
													},
													"id": 914,
													"indexExpression": {
														"id": 913,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "20228:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20213:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$579_storage",
														"typeString": "struct NFTMarket.MarketItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20188:47:0"
											},
											{
												"expression": {
													"id": 916,
													"name": "item",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 911,
													"src": "20248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
														"typeString": "struct NFTMarket.MarketItem memory"
													}
												},
												"functionReturnParameters": 908,
												"id": 917,
												"nodeType": "Return",
												"src": "20241:11:0"
											}
										]
									},
									"functionSelector": "2a45b250",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMarketItem",
									"nameLocation": "20113:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "20134:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "20129:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20129:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20128:13:0"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "20163:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
													"typeString": "struct NFTMarket.MarketItem"
												},
												"typeName": {
													"id": 906,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 905,
														"name": "MarketItem",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 579,
														"src": "20163:10:0"
													},
													"referencedDeclaration": 579,
													"src": "20163:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
														"typeString": "struct NFTMarket.MarketItem"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20162:19:0"
									},
									"scope": 1369,
									"src": "20104:153:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "20331:538:0",
										"statements": [
											{
												"assignments": [
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "itemCount",
														"nameLocation": "20342:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "20337:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 926,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "20337:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 928,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "20354:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$331_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "20354:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$331_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20354:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20337:35:0"
											},
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "unsoldItemCount",
														"nameLocation": "20383:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "20378:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 932,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "20378:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 934,
																"name": "_itemIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "20401:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$331_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 343,
															"src": "20401:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$331_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20401:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 937,
																"name": "_itemsSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 566,
																"src": "20422:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$331_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 343,
															"src": "20422:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$331_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20422:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20401:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20378:64:0"
											},
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "20453:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "20448:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 942,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "20448:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 945,
												"initialValue": {
													"hexValue": "30",
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20468:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20448:21:0"
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "20496:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1011,
														"src": "20476:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarket.MarketItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 948,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 947,
																	"name": "MarketItem",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 579,
																	"src": "20476:10:0"
																},
																"referencedDeclaration": 579,
																"src": "20476:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																	"typeString": "struct NFTMarket.MarketItem"
																}
															},
															"id": 949,
															"nodeType": "ArrayTypeName",
															"src": "20476:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarket.MarketItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [
														{
															"id": 955,
															"name": "unsoldItemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "20521:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "20504:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 952,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 951,
																	"name": "MarketItem",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 579,
																	"src": "20508:10:0"
																},
																"referencedDeclaration": 579,
																"src": "20508:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																	"typeString": "struct NFTMarket.MarketItem"
																}
															},
															"id": 953,
															"nodeType": "ArrayTypeName",
															"src": "20508:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarket.MarketItem[]"
															}
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20504:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarket.MarketItem memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20476:61:0"
											},
											{
												"body": {
													"id": 1007,
													"nodeType": "Block",
													"src": "20580:263:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 968,
																			"name": "idToMarketItem",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "20592:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																			}
																		},
																		"id": 972,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 969,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "20607:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20611:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "20607:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "20592:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																			"typeString": "struct NFTMarket.MarketItem storage ref"
																		}
																	},
																	"id": 973,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 576,
																	"src": "20592:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20631:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "20623:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 974,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "20623:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20623:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "20592:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1006,
															"nodeType": "IfStatement",
															"src": "20588:249:0",
															"trueBody": {
																"id": 1005,
																"nodeType": "Block",
																"src": "20635:202:0",
																"statements": [
																	{
																		"assignments": [
																			980
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 980,
																				"mutability": "mutable",
																				"name": "currentId",
																				"nameLocation": "20650:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1005,
																				"src": "20645:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 979,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "20645:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 987,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 981,
																					"name": "idToMarketItem",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 584,
																					"src": "20662:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																					}
																				},
																				"id": 985,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 982,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 959,
																						"src": "20677:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 983,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20681:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "20677:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "20662:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																					"typeString": "struct NFTMarket.MarketItem storage ref"
																				}
																			},
																			"id": 986,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 568,
																			"src": "20662:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "20645:45:0"
																	},
																	{
																		"assignments": [
																			990
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 990,
																				"mutability": "mutable",
																				"name": "currentItem",
																				"nameLocation": "20719:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1005,
																				"src": "20700:30:0",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																					"typeString": "struct NFTMarket.MarketItem"
																				},
																				"typeName": {
																					"id": 989,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 988,
																						"name": "MarketItem",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 579,
																						"src": "20700:10:0"
																					},
																					"referencedDeclaration": 579,
																					"src": "20700:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																						"typeString": "struct NFTMarket.MarketItem"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 994,
																		"initialValue": {
																			"baseExpression": {
																				"id": 991,
																				"name": "idToMarketItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 584,
																				"src": "20733:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																				}
																			},
																			"id": 993,
																			"indexExpression": {
																				"id": 992,
																				"name": "currentId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 980,
																				"src": "20748:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20733:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																				"typeString": "struct NFTMarket.MarketItem storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "20700:58:0"
																	},
																	{
																		"expression": {
																			"id": 999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 995,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 950,
																					"src": "20768:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarket.MarketItem memory[] memory"
																					}
																				},
																				"id": 997,
																				"indexExpression": {
																					"id": 996,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 943,
																					"src": "20774:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "20768:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
																					"typeString": "struct NFTMarket.MarketItem memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 998,
																				"name": "currentItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "20790:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																					"typeString": "struct NFTMarket.MarketItem storage pointer"
																				}
																			},
																			"src": "20768:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
																				"typeString": "struct NFTMarket.MarketItem memory"
																			}
																		},
																		"id": 1000,
																		"nodeType": "ExpressionStatement",
																		"src": "20768:33:0"
																	},
																	{
																		"expression": {
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1001,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 943,
																				"src": "20811:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20827:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "20811:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1004,
																		"nodeType": "ExpressionStatement",
																		"src": "20811:17:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 962,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "20560:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 963,
														"name": "itemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "20564:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20560:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"initializationExpression": {
													"assignments": [
														959
													],
													"declarations": [
														{
															"constant": false,
															"id": 959,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "20553:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1008,
															"src": "20548:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 958,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "20548:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 961,
													"initialValue": {
														"hexValue": "30",
														"id": 960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20557:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "20548:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "20575:3:0",
														"subExpression": {
															"id": 965,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "20575:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 967,
													"nodeType": "ExpressionStatement",
													"src": "20575:3:0"
												},
												"nodeType": "ForStatement",
												"src": "20543:300:0"
											},
											{
												"expression": {
													"id": 1009,
													"name": "items",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 950,
													"src": "20859:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarket.MarketItem memory[] memory"
													}
												},
												"functionReturnParameters": 925,
												"id": 1010,
												"nodeType": "Return",
												"src": "20852:12:0"
											}
										]
									},
									"functionSelector": "0f08efe0",
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMarketItems",
									"nameLocation": "20270:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20286:2:0"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "20310:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarket.MarketItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 922,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 921,
															"name": "MarketItem",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 579,
															"src": "20310:10:0"
														},
														"referencedDeclaration": 579,
														"src": "20310:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
															"typeString": "struct NFTMarket.MarketItem"
														}
													},
													"id": 923,
													"nodeType": "ArrayTypeName",
													"src": "20310:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarket.MarketItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20309:21:0"
									},
									"scope": 1369,
									"src": "20261:608:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "20938:638:0",
										"statements": [
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "totalItemCount",
														"nameLocation": "20949:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "20944:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1019,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "20944:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1021,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "20966:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$331_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 1022,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 343,
														"src": "20966:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$331_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$331_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20966:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20944:40:0"
											},
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "itemCount",
														"nameLocation": "20995:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "20990:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1025,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "20990:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"hexValue": "30",
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21007:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20990:18:0"
											},
											{
												"assignments": [
													1030
												],
												"declarations": [
													{
														"constant": false,
														"id": 1030,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "21019:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "21014:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1029,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "21014:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1032,
												"initialValue": {
													"hexValue": "30",
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21034:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21014:21:0"
											},
											{
												"body": {
													"id": 1058,
													"nodeType": "Block",
													"src": "21084:94:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1043,
																			"name": "idToMarketItem",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "21096:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																			}
																		},
																		"id": 1047,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1044,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1034,
																				"src": "21111:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21115:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "21111:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21096:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																			"typeString": "struct NFTMarket.MarketItem storage ref"
																		}
																	},
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 576,
																	"src": "21096:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1049,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "21127:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "21127:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "21096:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1057,
															"nodeType": "IfStatement",
															"src": "21092:80:0",
															"trueBody": {
																"id": 1056,
																"nodeType": "Block",
																"src": "21139:33:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1052,
																				"name": "itemCount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1026,
																				"src": "21149:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21162:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "21149:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1055,
																		"nodeType": "ExpressionStatement",
																		"src": "21149:14:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1037,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "21059:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1038,
														"name": "totalItemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "21063:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21059:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1059,
												"initializationExpression": {
													"assignments": [
														1034
													],
													"declarations": [
														{
															"constant": false,
															"id": 1034,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21052:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1059,
															"src": "21047:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1033,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "21047:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1036,
													"initialValue": {
														"hexValue": "30",
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21056:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21047:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21079:3:0",
														"subExpression": {
															"id": 1040,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "21079:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1042,
													"nodeType": "ExpressionStatement",
													"src": "21079:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21042:136:0"
											},
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "items",
														"nameLocation": "21204:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1123,
														"src": "21184:25:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct NFTMarket.MarketItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 1062,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1061,
																	"name": "MarketItem",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 579,
																	"src": "21184:10:0"
																},
																"referencedDeclaration": 579,
																"src": "21184:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																	"typeString": "struct NFTMarket.MarketItem"
																}
															},
															"id": 1063,
															"nodeType": "ArrayTypeName",
															"src": "21184:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarket.MarketItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1071,
												"initialValue": {
													"arguments": [
														{
															"id": 1069,
															"name": "itemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "21229:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "21212:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct NFTMarket.MarketItem memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1066,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1065,
																	"name": "MarketItem",
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 579,
																	"src": "21216:10:0"
																},
																"referencedDeclaration": 579,
																"src": "21216:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																	"typeString": "struct NFTMarket.MarketItem"
																}
															},
															"id": 1067,
															"nodeType": "ArrayTypeName",
															"src": "21216:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_storage_$dyn_storage_ptr",
																"typeString": "struct NFTMarket.MarketItem[]"
															}
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21212:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarket.MarketItem memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21184:55:0"
											},
											{
												"body": {
													"id": 1119,
													"nodeType": "Block",
													"src": "21287:263:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1082,
																			"name": "idToMarketItem",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 584,
																			"src": "21299:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																				"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																			}
																		},
																		"id": 1086,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1083,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1073,
																				"src": "21314:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21318:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "21314:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21299:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																			"typeString": "struct NFTMarket.MarketItem storage ref"
																		}
																	},
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 576,
																	"src": "21299:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1088,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "21330:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1089,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "21330:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "21299:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1118,
															"nodeType": "IfStatement",
															"src": "21295:249:0",
															"trueBody": {
																"id": 1117,
																"nodeType": "Block",
																"src": "21342:202:0",
																"statements": [
																	{
																		"assignments": [
																			1092
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1092,
																				"mutability": "mutable",
																				"name": "currentId",
																				"nameLocation": "21357:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "21352:14:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1091,
																					"name": "uint",
																					"nodeType": "ElementaryTypeName",
																					"src": "21352:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1099,
																		"initialValue": {
																			"expression": {
																				"baseExpression": {
																					"id": 1093,
																					"name": "idToMarketItem",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 584,
																					"src": "21369:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																						"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																					}
																				},
																				"id": 1097,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1096,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1094,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1073,
																						"src": "21384:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 1095,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21388:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "21384:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "21369:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																					"typeString": "struct NFTMarket.MarketItem storage ref"
																				}
																			},
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "itemId",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 568,
																			"src": "21369:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21352:45:0"
																	},
																	{
																		"assignments": [
																			1102
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1102,
																				"mutability": "mutable",
																				"name": "currentItem",
																				"nameLocation": "21426:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1117,
																				"src": "21407:30:0",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																					"typeString": "struct NFTMarket.MarketItem"
																				},
																				"typeName": {
																					"id": 1101,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1100,
																						"name": "MarketItem",
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 579,
																						"src": "21407:10:0"
																					},
																					"referencedDeclaration": 579,
																					"src": "21407:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																						"typeString": "struct NFTMarket.MarketItem"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1106,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1103,
																				"name": "idToMarketItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 584,
																				"src": "21440:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$579_storage_$",
																					"typeString": "mapping(uint256 => struct NFTMarket.MarketItem storage ref)"
																				}
																			},
																			"id": 1105,
																			"indexExpression": {
																				"id": 1104,
																				"name": "currentId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1092,
																				"src": "21455:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21440:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$579_storage",
																				"typeString": "struct NFTMarket.MarketItem storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "21407:58:0"
																	},
																	{
																		"expression": {
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1107,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1064,
																					"src": "21475:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct NFTMarket.MarketItem memory[] memory"
																					}
																				},
																				"id": 1109,
																				"indexExpression": {
																					"id": 1108,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1030,
																					"src": "21481:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "21475:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
																					"typeString": "struct NFTMarket.MarketItem memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1110,
																				"name": "currentItem",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "21497:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
																					"typeString": "struct NFTMarket.MarketItem storage pointer"
																				}
																			},
																			"src": "21475:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$579_memory_ptr",
																				"typeString": "struct NFTMarket.MarketItem memory"
																			}
																		},
																		"id": 1112,
																		"nodeType": "ExpressionStatement",
																		"src": "21475:33:0"
																	},
																	{
																		"expression": {
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1113,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1030,
																				"src": "21518:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 1114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21534:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "21518:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1116,
																		"nodeType": "ExpressionStatement",
																		"src": "21518:17:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "21262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1077,
														"name": "totalItemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "21266:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21262:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1120,
												"initializationExpression": {
													"assignments": [
														1073
													],
													"declarations": [
														{
															"constant": false,
															"id": 1073,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "21255:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1120,
															"src": "21250:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1072,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "21250:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1075,
													"initialValue": {
														"hexValue": "30",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21259:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "21250:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "21282:3:0",
														"subExpression": {
															"id": 1079,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "21282:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1081,
													"nodeType": "ExpressionStatement",
													"src": "21282:3:0"
												},
												"nodeType": "ForStatement",
												"src": "21245:305:0"
											},
											{
												"expression": {
													"id": 1121,
													"name": "items",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1064,
													"src": "21566:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct NFTMarket.MarketItem memory[] memory"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1122,
												"nodeType": "Return",
												"src": "21559:12:0"
											}
										]
									},
									"functionSelector": "202e3740",
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMyNFTs",
									"nameLocation": "20882:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20893:2:0"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "20917:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct NFTMarket.MarketItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 1015,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1014,
															"name": "MarketItem",
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 579,
															"src": "20917:10:0"
														},
														"referencedDeclaration": 579,
														"src": "20917:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$579_storage_ptr",
															"typeString": "struct NFTMarket.MarketItem"
														}
													},
													"id": 1016,
													"nodeType": "ArrayTypeName",
													"src": "20917:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$579_storage_$dyn_storage_ptr",
														"typeString": "struct NFTMarket.MarketItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20916:21:0"
									},
									"scope": 1369,
									"src": "20873:703:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "21696:1181:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1134,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "21721:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1133,
														"name": "_requireERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "21706:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
															"typeString": "function (address) view"
														}
													},
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21706:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "21706:26:0"
											},
											{
												"assignments": [
													1138
												],
												"declarations": [
													{
														"constant": false,
														"id": 1138,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "21751:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "21743:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21743:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1141,
												"initialValue": {
													"expression": {
														"id": 1139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "21760:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "21760:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21743:27:0"
											},
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "nftRegistry",
														"nameLocation": "21788:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "21780:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$326",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 1143,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1142,
																"name": "IERC721",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 326,
																"src": "21780:7:0"
															},
															"referencedDeclaration": 326,
															"src": "21780:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1148,
												"initialValue": {
													"arguments": [
														{
															"id": 1146,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "21810:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1145,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "21802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$326_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21802:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$326",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21780:41:0"
											},
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "21843:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "21831:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
															"typeString": "struct MarketplaceStorage.Item"
														},
														"typeName": {
															"id": 1150,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1149,
																"name": "Item",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 459,
																"src": "21831:4:0"
															},
															"referencedDeclaration": 459,
															"src": "21831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$459_storage_ptr",
																"typeString": "struct MarketplaceStorage.Item"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1152,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "21850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
															}
														},
														"id": 1154,
														"indexExpression": {
															"id": 1153,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "21856:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "21850:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
															"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
														}
													},
													"id": 1156,
													"indexExpression": {
														"id": 1155,
														"name": "assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1128,
														"src": "21868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21850:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$459_storage",
														"typeString": "struct MarketplaceStorage.Item storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21831:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1159,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21895:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																		"typeString": "struct MarketplaceStorage.Item memory"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "id",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 447,
																"src": "21895:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21906:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "21895:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4173736574206e6f74207075626c6973686564",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21909:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a4ac9c47293eba02502bc2710c664fc3fb7804c6a27a6eaeb00f1e59d2e77b01",
																"typeString": "literal_string \"Asset not published\""
															},
															"value": "Asset not published"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a4ac9c47293eba02502bc2710c664fc3fb7804c6a27a6eaeb00f1e59d2e77b01",
																"typeString": "literal_string \"Asset not published\""
															}
														],
														"id": 1158,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21887:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21887:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "21887:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_ItemStatus_$445",
																"typeString": "enum MarketplaceStorage.ItemStatus"
															},
															"id": 1171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1167,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "21949:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																		"typeString": "struct MarketplaceStorage.Item memory"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "21949:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ItemStatus_$445",
																	"typeString": "enum MarketplaceStorage.ItemStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1169,
																	"name": "ItemStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "21964:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ItemStatus_$445_$",
																		"typeString": "type(enum MarketplaceStorage.ItemStatus)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "LIST",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 441,
																"src": "21964:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ItemStatus_$445",
																	"typeString": "enum MarketplaceStorage.ItemStatus"
																}
															},
															"src": "21949:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4173736574206973206e6f74206c69737420746f20627579",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21981:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c706a5268ea237005cc19ce46562045551bcc4d5328f908e472345149359b32f",
																"typeString": "literal_string \"Asset is not list to buy\""
															},
															"value": "Asset is not list to buy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c706a5268ea237005cc19ce46562045551bcc4d5328f908e472345149359b32f",
																"typeString": "literal_string \"Asset is not list to buy\""
															}
														],
														"id": 1166,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21941:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1174,
												"nodeType": "ExpressionStatement",
												"src": "21941:67:0"
											},
											{
												"assignments": [
													1176
												],
												"declarations": [
													{
														"constant": false,
														"id": 1176,
														"mutability": "mutable",
														"name": "seller",
														"nameLocation": "22027:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "22019:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1175,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22019:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1179,
												"initialValue": {
													"expression": {
														"id": 1177,
														"name": "item",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1151,
														"src": "22036:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
															"typeString": "struct MarketplaceStorage.Item memory"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "seller",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 449,
													"src": "22036:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22019:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1181,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1176,
																"src": "22066:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22084:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1183,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1182,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "22076:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22076:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "22066:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22088:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22058:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "22058:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1191,
																"name": "priceAnta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "22124:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1192,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "22137:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																		"typeString": "struct MarketplaceStorage.Item memory"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "priceAnta",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 455,
																"src": "22137:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "22124:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7072696365206e65656420657175616c206c697374696e67207072696365",
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22153:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5ddf9c65ddf74cb37cf466efa2e4fa6fcd9593c09e9268830bd059f7b7880f1",
																"typeString": "literal_string \"price need equal listing price\""
															},
															"value": "price need equal listing price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5ddf9c65ddf74cb37cf466efa2e4fa6fcd9593c09e9268830bd059f7b7880f1",
																"typeString": "literal_string \"price need equal listing price\""
															}
														],
														"id": 1190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22116:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22116:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "22116:70:0"
											},
											{
												"assignments": [
													1199
												],
												"declarations": [
													{
														"constant": false,
														"id": 1199,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "22205:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "22197:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1198,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22197:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1206,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1200,
																	"name": "antaFeePercent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "22212:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1201,
																	"name": "priceAnta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "22229:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22212:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "22211:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22242:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "22211:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22197:48:0"
											},
											{
												"assignments": [
													1208
												],
												"declarations": [
													{
														"constant": false,
														"id": 1208,
														"mutability": "mutable",
														"name": "remainAmount",
														"nameLocation": "22263:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "22255:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1207,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1209,
														"name": "priceAnta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1130,
														"src": "22278:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1210,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "22290:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22278:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22255:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "22325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1219,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22341:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																],
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22333:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1217,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22333:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22333:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "22348:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1213,
															"name": "sqfToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "22303:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$201",
																"typeString": "contract IERC20"
															}
														},
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "22303:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22303:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "22303:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1227,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "22384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1228,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "22392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1229,
															"name": "remainAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "22400:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1224,
															"name": "sqfToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "22362:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$201",
																"typeString": "contract IERC20"
															}
														},
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "22362:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22362:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "22362:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1237,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "22460:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTMarket_$1369",
																		"typeString": "contract NFTMarket"
																	}
																],
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22452:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1235,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22452:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22452:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1239,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "22467:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "22475:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1232,
															"name": "nftRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "22423:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 269,
														"src": "22423:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22423:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "22423:60:0"
											},
											{
												"expression": {
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1243,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "22494:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
																	}
																},
																"id": 1246,
																"indexExpression": {
																	"id": 1244,
																	"name": "nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "22500:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22494:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
																	"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
																}
															},
															"id": 1247,
															"indexExpression": {
																"id": 1245,
																"name": "assetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "22512:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22494:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$459_storage",
																"typeString": "struct MarketplaceStorage.Item storage ref"
															}
														},
														"id": 1248,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "seller",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 449,
														"src": "22494:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1249,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "22530:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22494:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "22494:42:0"
											},
											{
												"expression": {
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 1252,
																	"name": "items",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 477,
																	"src": "22546:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
																	}
																},
																"id": 1255,
																"indexExpression": {
																	"id": 1253,
																	"name": "nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "22552:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22546:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
																	"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
																}
															},
															"id": 1256,
															"indexExpression": {
																"id": 1254,
																"name": "assetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "22564:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "22546:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Item_$459_storage",
																"typeString": "struct MarketplaceStorage.Item storage ref"
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "22546:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ItemStatus_$445",
															"typeString": "enum MarketplaceStorage.ItemStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1258,
															"name": "ItemStatus",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "22582:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ItemStatus_$445_$",
																"typeString": "type(enum MarketplaceStorage.ItemStatus)"
															}
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "BOUGHT",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 442,
														"src": "22582:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ItemStatus_$445",
															"typeString": "enum MarketplaceStorage.ItemStatus"
														}
													},
													"src": "22546:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ItemStatus_$445",
														"typeString": "enum MarketplaceStorage.ItemStatus"
													}
												},
												"id": 1261,
												"nodeType": "ExpressionStatement",
												"src": "22546:53:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1263,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "22646:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																	"typeString": "struct MarketplaceStorage.Item memory"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 447,
															"src": "22646:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1265,
															"name": "assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "22667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1266,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "22688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1267,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "22708:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1268,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "22732:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
																	"typeString": "struct MarketplaceStorage.Item memory"
																}
															},
															"id": 1269,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "priceAnta",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 455,
															"src": "22732:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1270,
															"name": "antaFeePercent",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "22760:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1271,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "22788:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1272,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "22805:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "414e5441",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22825:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_13e02b8da55bc3461c43518788a3134484113c988aed7254102c6119037e5bdc",
																"typeString": "literal_string \"ANTA\""
															},
															"value": "ANTA"
														},
														{
															"expression": {
																"id": 1274,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "22845:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "22845:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_stringliteral_13e02b8da55bc3461c43518788a3134484113c988aed7254102c6119037e5bdc",
																"typeString": "literal_string \"ANTA\""
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1262,
														"name": "BuyItemSuccessful",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "22615:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint8_$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256,address,address,uint256,uint8,uint256,address,string memory,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22615:255:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "EmitStatement",
												"src": "22610:260:0"
											}
										]
									},
									"functionSelector": "f01b52dc",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyItemBySQF",
									"nameLocation": "21590:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "21620:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "21612:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21612:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "21648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "21640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "priceAnta",
												"nameLocation": "21673:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "21665:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21602:86:0"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21696:0:0"
									},
									"scope": 1369,
									"src": "21581:1296:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "22941:331:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1286,
																	"name": "nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "22983:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1285,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "22972:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22972:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865204e465420416464726573732073686f756c64206265206120636f6e7472616374",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23008:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_aff85cd57953df3387ee562487eca81d120f6fa919b73ed7cc04af598c9d9beb",
																"typeString": "literal_string \"The NFT Address should be a contract\""
															},
															"value": "The NFT Address should be a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_aff85cd57953df3387ee562487eca81d120f6fa919b73ed7cc04af598c9d9beb",
																"typeString": "literal_string \"The NFT Address should be a contract\""
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "22951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22951:105:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "ExpressionStatement",
												"src": "22951:105:0"
											},
											{
												"assignments": [
													1293
												],
												"declarations": [
													{
														"constant": false,
														"id": 1293,
														"mutability": "mutable",
														"name": "nftRegistry",
														"nameLocation": "23075:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1306,
														"src": "23067:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$326",
															"typeString": "contract IERC721"
														},
														"typeName": {
															"id": 1292,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1291,
																"name": "IERC721",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 326,
																"src": "23067:7:0"
															},
															"referencedDeclaration": 326,
															"src": "23067:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$326",
																"typeString": "contract IERC721"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1297,
												"initialValue": {
													"arguments": [
														{
															"id": 1295,
															"name": "nftAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "23097:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1294,
														"name": "IERC721",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "23089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC721_$326_$",
															"typeString": "type(contract IERC721)"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23089:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$326",
														"typeString": "contract IERC721"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23067:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1301,
																	"name": "ERC721_Interface",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "23169:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"expression": {
																	"id": 1299,
																	"name": "nftRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "23139:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$326",
																		"typeString": "contract IERC721"
																	}
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "supportsInterface",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 211,
																"src": "23139:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_bytes4_$returns$_t_bool_$",
																	"typeString": "function (bytes4) view external returns (bool)"
																}
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23139:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546865204e465420636f6e74726163742068617320616e20696e76616c69642045524337323120696d706c656d656e746174696f6e",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23200:55:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b21f699a65a09b6e2704b11039ba04720c874542f986244c42f28469a6d8771",
																"typeString": "literal_string \"The NFT contract has an invalid ERC721 implementation\""
															},
															"value": "The NFT contract has an invalid ERC721 implementation"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b21f699a65a09b6e2704b11039ba04720c874542f986244c42f28469a6d8771",
																"typeString": "literal_string \"The NFT contract has an invalid ERC721 implementation\""
															}
														],
														"id": 1298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23118:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1305,
												"nodeType": "ExpressionStatement",
												"src": "23118:147:0"
											}
										]
									},
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireERC721",
									"nameLocation": "22892:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "22915:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "22907:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22906:20:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22941:0:0"
									},
									"scope": 1369,
									"src": "22883:389:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "23340:95:0",
										"statements": [
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "23353:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1323,
														"src": "23346:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														},
														"typeName": {
															"id": 1314,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "23346:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"nodeType": "VariableDeclarationStatement",
												"src": "23346:11:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23372:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23378:26:0",
															"value": {
																"arguments": [
																	{
																		"name": "_addr",
																		"nodeType": "YulIdentifier",
																		"src": "23398:5:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "23386:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23386:18:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "23378:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1309,
														"isOffset": false,
														"isSlot": false,
														"src": "23398:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1315,
														"isOffset": false,
														"isSlot": false,
														"src": "23378:4:0",
														"valueSize": 1
													}
												],
												"id": 1317,
												"nodeType": "InlineAssembly",
												"src": "23363:47:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1318,
																"name": "size",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "23423:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23430:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23423:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1321,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "23422:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1313,
												"id": 1322,
												"nodeType": "Return",
												"src": "23415:17:0"
											}
										]
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "23287:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "23306:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "23298:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23297:15:0"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "23335:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23334:6:0"
									},
									"scope": 1369,
									"src": "23278:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "23599:471:0",
										"statements": [
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "itemId",
														"nameLocation": "23617:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1367,
														"src": "23609:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1337,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "23609:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1350,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1342,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "23683:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "23683:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1344,
																	"name": "seller",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "23716:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1345,
																	"name": "assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1328,
																	"src": "23740:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1346,
																	"name": "nftAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1330,
																	"src": "23765:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1347,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1332,
																	"src": "23793:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1340,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "23649:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "23649:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23649:163:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1339,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "23626:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23626:196:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23609:213:0"
											},
											{
												"expression": {
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1351,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "23833:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct MarketplaceStorage.Item storage ref))"
																}
															},
															"id": 1354,
															"indexExpression": {
																"id": 1352,
																"name": "nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "23839:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "23833:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$459_storage_$",
																"typeString": "mapping(uint256 => struct MarketplaceStorage.Item storage ref)"
															}
														},
														"id": 1355,
														"indexExpression": {
															"id": 1353,
															"name": "assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "23851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23833:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$459_storage",
															"typeString": "struct MarketplaceStorage.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1357,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "23885:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 1358,
																"name": "seller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "23913:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1359,
																"name": "nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "23945:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1360,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "23976:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1361,
																"name": "priceAnta",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "24006:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1362,
																	"name": "ItemStatus",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "24037:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ItemStatus_$445_$",
																		"typeString": "type(enum MarketplaceStorage.ItemStatus)"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "LIST",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 441,
																"src": "24037:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ItemStatus_$445",
																	"typeString": "enum MarketplaceStorage.ItemStatus"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_enum$_ItemStatus_$445",
																	"typeString": "enum MarketplaceStorage.ItemStatus"
																}
															],
															"id": 1356,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "23862:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$459_storage_ptr_$",
																"typeString": "type(struct MarketplaceStorage.Item storage pointer)"
															}
														},
														"id": 1364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"id",
															"seller",
															"nftAddress",
															"price",
															"priceAnta",
															"status"
														],
														"nodeType": "FunctionCall",
														"src": "23862:201:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$459_memory_ptr",
															"typeString": "struct MarketplaceStorage.Item memory"
														}
													},
													"src": "23833:230:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$459_storage",
														"typeString": "struct MarketplaceStorage.Item storage ref"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "23833:230:0"
											}
										]
									},
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_createItem",
									"nameLocation": "23445:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "23474:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "23466:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "23498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "23490:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "23523:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "23515:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23515:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "23551:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "23543:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "priceAnta",
												"nameLocation": "23574:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "23566:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23456:133:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23599:0:0"
									},
									"scope": 1369,
									"src": "23436:634:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1370,
							"src": "17004:7068:0",
							"usedErrors": []
						}
					],
					"src": "2:24070:0"
				},
				"id": 0
			}
		}
	}
}